webpackJsonp([4],{1769:function(e,n,t){t(1386)(t(2446))},1805:function(e,n,t){"use strict";function r(e,n){var t={};for(var r in e)n.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}function o(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var u=t(2),s=t.n(u),l=t(1769),c=(t.n(l),Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}),d=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),h=function(e){function n(){var e,t,r,i;o(this,n);for(var u=arguments.length,s=Array(u),l=0;l<u;l++)s[l]=arguments[l];return t=r=a(this,(e=n.__proto__||Object.getPrototypeOf(n)).call.apply(e,[this].concat(s))),r.onClick=function(){var e;return(e=r).__onClick__REACT_HOT_LOADER__.apply(e,arguments)},i=t,a(r,i)}return i(n,e),d(n,[{key:"__onClick__REACT_HOT_LOADER__",value:function(){$(this.props.target).summernote({focus:!0})}},{key:"componentWillUnmount",value:function(){$(this.props.target).summernote("destroy")}},{key:"render",value:function(){var e=this.props,n=e.children,t=r(e,["children"]);return s.a.createElement("button",c({onClick:this.onClick},t),n)}}]),n}(s.a.Component),f=h;n.a=f;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(h,"AttachSummernote","C:/kantor/github/CreditScoringFrontEnd/src/app/components/forms/editors/AttachSummernote.js"),__REACT_HOT_LOADER__.register(f,"default","C:/kantor/github/CreditScoringFrontEnd/src/app/components/forms/editors/AttachSummernote.js"))}()},1806:function(e,n,t){"use strict";function r(e,n){var t={};for(var r in e)n.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}function o(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var u=t(2),s=t.n(u),l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},c=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),d=function(e){function n(){var e,t,r,i;o(this,n);for(var u=arguments.length,s=Array(u),l=0;l<u;l++)s[l]=arguments[l];return t=r=a(this,(e=n.__proto__||Object.getPrototypeOf(n)).call.apply(e,[this].concat(s))),r.onClick=function(){var e;return(e=r).__onClick__REACT_HOT_LOADER__.apply(e,arguments)},i=t,a(r,i)}return i(n,e),c(n,[{key:"__onClick__REACT_HOT_LOADER__",value:function(){$(this.props.target).summernote("destroy")}},{key:"render",value:function(){var e=this.props,n=e.children,t=r(e,["children"]);return s.a.createElement("button",l({},t,{onClick:this.onClick}),n)}}]),n}(s.a.Component),h=d;n.a=h;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(d,"DetachSummernote","C:/kantor/github/CreditScoringFrontEnd/src/app/components/forms/editors/DetachSummernote.js"),__REACT_HOT_LOADER__.register(h,"default","C:/kantor/github/CreditScoringFrontEnd/src/app/components/forms/editors/DetachSummernote.js"))}()},1807:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function a(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var i=t(2),u=t.n(i),s=t(2550),l=(t.n(s),t(2544)),c=(t.n(l),t(2540)),d=(t.n(c),t(2537)),h=(t.n(d),function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}()),f=function(e){function n(){return r(this,n),o(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return a(n,e),h(n,[{key:"componentDidMount",value:function(){$(this.refs.editor).markdown()}},{key:"render",value:function(){return u.a.createElement("textarea",{ref:"editor",defaultValue:this.props.value,className:this.props.className})}}]),n}(u.a.Component),p=f;n.a=p;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(f,"MarkdownEditor","C:/kantor/github/CreditScoringFrontEnd/src/app/components/forms/editors/MarkdownEditor.js"),__REACT_HOT_LOADER__.register(p,"default","C:/kantor/github/CreditScoringFrontEnd/src/app/components/forms/editors/MarkdownEditor.js"))}()},1809:function(e,n,t){"use strict";function r(e,n){var t={};for(var r in e)n.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t}function o(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function i(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}var u=t(2),s=t.n(u),l=t(1769),c=(t.n(l),Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}),d=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),h=function(e){function n(){return o(this,n),a(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return i(n,e),d(n,[{key:"componentDidMount",value:function(){$(this.refs.editor).summernote({height:this.props.height||270})}},{key:"componentWillUnmount",value:function(){$(this.refs.editor).summernote("destroy")}},{key:"render",value:function(){var e=this.props,n=e.children,t=r(e,["children"]);return s.a.createElement("div",c({},t,{ref:"editor"}),n)}}]),n}(s.a.Component),f=h;n.a=f;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(h,"Summernote","C:/kantor/github/CreditScoringFrontEnd/src/app/components/forms/editors/Summernote.js"),__REACT_HOT_LOADER__.register(f,"default","C:/kantor/github/CreditScoringFrontEnd/src/app/components/forms/editors/Summernote.js"))}()},1924:function(e,n,t){"use strict";function r(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function o(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function a(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}Object.defineProperty(n,"__esModule",{value:!0});var i=t(2),u=t.n(i),s=t(1375),l=t(1807),c=t(1809),d=t(1805),h=t(1806),f=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),p='### Hello there\nHow are you?\n\nI have bellow task for you :\n\nSelect from this text...\nClick the bold on THIS WORD and make THESE ONE italic\nLink GOOGLE to google.com\nTest to insert image (and try to tab after write the image description)\nTest Preview\nAnd ending here... Click "List"\n\nEnjoy!',m=function(e){function n(){return r(this,n),o(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return a(n,e),f(n,[{key:"render",value:function(){return u.a.createElement("div",{id:"content"},u.a.createElement("div",{className:"row"},u.a.createElement(s.c,{items:["Forms","Bootstrap Editors"],icon:"fa fa-fw fa-pencil-square-o",className:"col-xs-12 col-sm-7 col-md-7 col-lg-4"}),u.a.createElement(s.d,null)),u.a.createElement(s.a,null,u.a.createElement("div",{className:"row"},u.a.createElement("article",{className:"col-sm-12 col-md-12 col-lg-6"},u.a.createElement(s.b,{colorbutton:!1,editbutton:!1,togglebutton:!1,fullscreenbutton:!1,sortable:!1,color:"purple"},u.a.createElement("header",null,u.a.createElement("span",{className:"widget-icon"}," ",u.a.createElement("i",{className:"fa fa-pencil"})," "),u.a.createElement("h2",null,"Markdown")),u.a.createElement("div",null,u.a.createElement("div",{className:"widget-body no-padding"},u.a.createElement(l.a,{value:p,className:"custom-scroll",height:270})))),u.a.createElement(s.b,{className:"well",colorbutton:!1,editbutton:!1,togglebutton:!1,fullscreenbutton:!1,sortable:!1},u.a.createElement("header",null,u.a.createElement("span",{className:"widget-icon"}," ",u.a.createElement("i",{className:"fa fa-pencil"})," "),u.a.createElement("h2",null,"Markdown API")),u.a.createElement("div",null,u.a.createElement("div",{className:"widget-body"},u.a.createElement("h3",null,"Markdown API"),u.a.createElement("table",{className:"table table-bordered table-striped"},u.a.createElement("thead",null,u.a.createElement("tr",null,u.a.createElement("th",null,"Method Name"),u.a.createElement("th",null,"Description"))),u.a.createElement("tbody",null,u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"showEditor()")),u.a.createElement("td",null,"Toggle on the editor visibility")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"showPreview()")),u.a.createElement("td",null,"Toggle on the preview visibility")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"hidePreview()")),u.a.createElement("td",null,"Toggle off the editor visibility")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"isDirty()")),u.a.createElement("td",null,"Check the editor content state, return true if the original content was changed")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"getContent()")),u.a.createElement("td",null,"Get the editor content")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"setContent(",u.a.createElement("em",null,"string")," content)")),u.a.createElement("td",null,"Set the editor content")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"findSelection(",u.a.createElement("em",null,"string")," words)")),u.a.createElement("td",null,"Find some words/sentence within the editor and returned selection object(containing word position and other useful information).")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"getSelection()")),u.a.createElement("td",null,"Get the current selected chunk of words within the editor.")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"setSelection(",u.a.createElement("em",null,"int")," start, ",u.a.createElement("em",null,"int")," end)")),u.a.createElement("td",null,"Tell the editor to select a span of words from ",u.a.createElement("code",null,"start")," to ",u.a.createElement("code",null,"end"),".")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"replaceSelection(",u.a.createElement("em",null,"string")," content)")),u.a.createElement("td",null,"Replace the current selected chunk of words within the editor with any content.")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"getNextTab()")),u.a.createElement("td",null,"Get the next tab memory. Returned selection object(containing word position and other useful information).")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"setNextTab(",u.a.createElement("em",null,"int")," start, ",u.a.createElement("em",null,"int")," end)")),u.a.createElement("td",null,"Tell the editor to select a span of words from ",u.a.createElement("code",null,"start")," to ",u.a.createElement("code",null,"end")," at next ",u.a.createElement("code",null,"tab")," keypress event.")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"enableButtons(",u.a.createElement("em",null,"string")," name)")),u.a.createElement("td",null,"Enabled a button by ",u.a.createElement("code",null,"name")," that described in ",u.a.createElement("code",null,"buttons")," or ",u.a.createElement("code",null,"additionalButtons")," arrays. Passing ",u.a.createElement("code",null,"all")," will enabled all buttons.")),u.a.createElement("tr",null,u.a.createElement("td",null,u.a.createElement("code",null,"disableButtons(",u.a.createElement("em",null,"string")," name)")),u.a.createElement("td",null,"Disabled a button by ",u.a.createElement("code",null,"name")," that described in ",u.a.createElement("code",null,"buttons")," or ",u.a.createElement("code",null,"additionalButtons")," arrays. Passing ",u.a.createElement("code",null,"all")," will disabled all buttons.")))))))),u.a.createElement("article",{className:"col-sm-12 col-md-12 col-lg-6"},u.a.createElement(s.b,{colorbutton:!1,editbutton:!1,togglebutton:!1,fullscreenbutton:!1,sortable:!1,color:"blue"},u.a.createElement("header",null,u.a.createElement("span",{className:"widget-icon"}," ",u.a.createElement("i",{className:"fa fa-pencil"})," "),u.a.createElement("h2",null,"Summernote (Lightweight)")),u.a.createElement("div",null,u.a.createElement("div",{className:"widget-body no-padding"},u.a.createElement(c.a,{className:"summernote",height:180}),u.a.createElement("div",{className:"widget-footer smart-form"},u.a.createElement("div",{className:"btn-group"},u.a.createElement("button",{className:"btn btn-sm btn-primary",type:"button"},u.a.createElement("i",{className:"fa fa-times"})," Cancel")),u.a.createElement("div",{className:"btn-group"},u.a.createElement("button",{className:"btn btn-sm btn-success",type:"button"},u.a.createElement("i",{className:"fa fa-check"})," Save")),u.a.createElement("label",{className:"checkbox pull-left"},u.a.createElement("input",{type:"checkbox",defaultChecked:!0,name:"autosave",id:"autosave"}),u.a.createElement("i",null),"Auto Save"))))),u.a.createElement(s.b,{className:"well"},u.a.createElement("header",null,u.a.createElement("span",{className:"widget-icon"}," ",u.a.createElement("i",{className:"fa fa-pencil"})," "),u.a.createElement("h2",null,"Example ")),u.a.createElement("div",null,u.a.createElement("div",{className:"widget-body"},u.a.createElement("h3",null,"Summernote Example"),u.a.createElement("p",null,u.a.createElement(d.a,{target:".click2edit",className:"btn btn-primary",type:"button"},"Edit"),u.a.createElement(h.a,{target:".click2edit",className:"btn btn-primary",type:"button"},"Save")),u.a.createElement("p",null),u.a.createElement("div",{className:"click2edit"},"To change this text with summernote, click `Edit` button"),u.a.createElement("h5",null,"HTML:"),u.a.createElement("pre",null,u.a.createElement("code",{className:"xml"},'<button className="btn btn-primary" data-smart-edit-summernote=".click2edit">Edit</button> <button className="btn btn-primary" data-smart-destroy-summernote=".click2edit">Save< /button> <div className="click2edit">To change this text with summernote, click `Edit` button< /div>')),u.a.createElement("h5",null,"Script:"),u.a.createElement("pre",null,u.a.createElement("code",{className:"javascript"},"//no scripts required")),u.a.createElement("h5",null,"Documentation:"),u.a.createElement("p",{className:"alert alert-info"},"Full API for Summernote.js, including keybored shortcuts, PHP Examples, Django installation, and Rails (gem) integration can be found ",u.a.createElement("a",{href:"http://hackerwins.github.io/summernote/features.html#api"},"here")))))))))}}]),n}(u.a.Component),b=m;n.default=b;!function(){"undefined"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(p,"demoText","C:/kantor/github/CreditScoringFrontEnd/src/app/routes/forms/containers/BootstrapEditors.js"),__REACT_HOT_LOADER__.register(m,"BootstrapEditors","C:/kantor/github/CreditScoringFrontEnd/src/app/routes/forms/containers/BootstrapEditors.js"),__REACT_HOT_LOADER__.register(b,"default","C:/kantor/github/CreditScoringFrontEnd/src/app/routes/forms/containers/BootstrapEditors.js"))}()},2433:function(e,n){e.exports="/* ===================================================\r\n * bootstrap-markdown.js v2.10.0\r\n * http://github.com/toopay/bootstrap-markdown\r\n * ===================================================\r\n * Copyright 2013-2016 Taufan Aditya\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * ========================================================== */\r\n\r\n(function(factory){\r\n    if (typeof define === \"function\" && define.amd) {\r\n        //RequireJS\r\n        define([\"jquery\"], factory);\r\n    } else if (typeof exports === 'object') {\r\n        //Backbone.js\r\n        factory(require('jquery'));\r\n    } else {\r\n        //Jquery plugin\r\n        factory(jQuery);\r\n    }\r\n}(function($){\r\n  \"use strict\"; // jshint ;_;\r\n\r\n  /* MARKDOWN CLASS DEFINITION\r\n   * ========================== */\r\n\r\n  var Markdown = function (element, options) {\r\n    // @TODO : remove this BC on next major release\r\n    // @see : https://github.com/toopay/bootstrap-markdown/issues/109\r\n    var opts = ['autofocus', 'savable', 'hideable', 'width', \r\n      'height', 'resize', 'iconlibrary', 'language', \r\n      'footer', 'fullscreen', 'hiddenButtons', 'disabledButtons'];\r\n    $.each(opts,function(_, opt){\r\n      if (typeof $(element).data(opt) !== 'undefined') {\r\n        options = typeof options == 'object' ? options : {}\r\n        options[opt] = $(element).data(opt)\r\n      }\r\n    });\r\n    // End BC\r\n\r\n    // Class Properties\r\n    this.$ns           = 'bootstrap-markdown';\r\n    this.$element      = $(element);\r\n    this.$editable     = {el:null, type:null,attrKeys:[], attrValues:[], content:null};\r\n    this.$options      = $.extend(true, {}, $.fn.markdown.defaults, options, this.$element.data('options'));\r\n    this.$oldContent   = null;\r\n    this.$isPreview    = false;\r\n    this.$isFullscreen = false;\r\n    this.$editor       = null;\r\n    this.$textarea     = null;\r\n    this.$handler      = [];\r\n    this.$callback     = [];\r\n    this.$nextTab      = [];\r\n\r\n    this.showEditor();\r\n  };\r\n\r\n  Markdown.prototype = {\r\n\r\n    constructor: Markdown\r\n\r\n  , __alterButtons: function(name,alter) {\r\n      var handler = this.$handler, isAll = (name == 'all'),that = this;\r\n\r\n      $.each(handler,function(k,v) {\r\n        var halt = true;\r\n        if (isAll) {\r\n          halt = false;\r\n        } else {\r\n          halt = v.indexOf(name) < 0;\r\n        }\r\n\r\n        if (halt === false) {\r\n          alter(that.$editor.find('button[data-handler=\"'+v+'\"]'));\r\n        }\r\n      });\r\n    }\r\n\r\n  , __buildButtons: function(buttonsArray, container) {\r\n      var i,\r\n          ns = this.$ns,\r\n          handler = this.$handler,\r\n          callback = this.$callback;\r\n\r\n      for (i=0;i<buttonsArray.length;i++) {\r\n        // Build each group container\r\n        var y, btnGroups = buttonsArray[i];\r\n        for (y=0;y<btnGroups.length;y++) {\r\n          // Build each button group\r\n          var z,\r\n              buttons = btnGroups[y].data,\r\n              btnGroupContainer = $('<div/>', {\r\n                                    'class': 'btn-group'\r\n                                  });\r\n\r\n          for (z=0;z<buttons.length;z++) {\r\n            var button = buttons[z],\r\n                buttonContainer, buttonIconContainer,\r\n                buttonHandler = ns+'-'+button.name,\r\n                buttonIcon = this.__getIcon(button.icon),\r\n                btnText = button.btnText ? button.btnText : '',\r\n                btnClass = button.btnClass ? button.btnClass : 'btn',\r\n                tabIndex = button.tabIndex ? button.tabIndex : '-1',\r\n                hotkey = typeof button.hotkey !== 'undefined' ? button.hotkey : '',\r\n                hotkeyCaption = typeof jQuery.hotkeys !== 'undefined' && hotkey !== '' ? ' ('+hotkey+')' : '';\r\n\r\n            // Construct the button object\r\n            buttonContainer = $('<button></button>');\r\n            buttonContainer.text(' ' + this.__localize(btnText)).addClass('btn-default btn-sm').addClass(btnClass);\r\n            if(btnClass.match(/btn\\-(primary|success|info|warning|danger|link)/)){\r\n                buttonContainer.removeClass('btn-default');\r\n            }\r\n            buttonContainer.attr({\r\n                'type': 'button',\r\n                'title': this.__localize(button.title) + hotkeyCaption,\r\n                'tabindex': tabIndex,\r\n                'data-provider': ns,\r\n                'data-handler': buttonHandler,\r\n                'data-hotkey': hotkey\r\n            });\r\n            if (button.toggle === true){\r\n              buttonContainer.attr('data-toggle', 'button');\r\n            }\r\n            buttonIconContainer = $('<span/>');\r\n            buttonIconContainer.addClass(buttonIcon);\r\n            buttonIconContainer.prependTo(buttonContainer);\r\n\r\n            // Attach the button object\r\n            btnGroupContainer.append(buttonContainer);\r\n\r\n            // Register handler and callback\r\n            handler.push(buttonHandler);\r\n            callback.push(button.callback);\r\n          }\r\n\r\n          // Attach the button group into container dom\r\n          container.append(btnGroupContainer);\r\n        }\r\n      }\r\n\r\n      return container;\r\n    }\r\n  , __setListener: function() {\r\n      // Set size and resizable Properties\r\n      var hasRows = typeof this.$textarea.attr('rows') !== 'undefined',\r\n          maxRows = this.$textarea.val().split(\"\\n\").length > 5 ? this.$textarea.val().split(\"\\n\").length : '5',\r\n          rowsVal = hasRows ? this.$textarea.attr('rows') : maxRows;\r\n\r\n      this.$textarea.attr('rows',rowsVal);\r\n      if (this.$options.resize) {\r\n        this.$textarea.css('resize',this.$options.resize);\r\n      }\r\n\r\n      this.$textarea.on({\r\n          'focus' : $.proxy(this.focus, this),\r\n          'keyup' : $.proxy(this.keyup, this),\r\n          'change' : $.proxy(this.change, this),\r\n          'select' : $.proxy(this.select, this)\r\n      });\r\n\r\n      if (this.eventSupported('keydown')) {\r\n        this.$textarea.on('keydown', $.proxy(this.keydown, this));\r\n      }\r\n\r\n      if (this.eventSupported('keypress')) {\r\n        this.$textarea.on('keypress', $.proxy(this.keypress, this))\r\n      }\r\n\r\n      // Re-attach markdown data\r\n      this.$textarea.data('markdown',this);\r\n    }\r\n\r\n  , __handle: function(e) {\r\n      var target = $(e.currentTarget),\r\n          handler = this.$handler,\r\n          callback = this.$callback,\r\n          handlerName = target.attr('data-handler'),\r\n          callbackIndex = handler.indexOf(handlerName),\r\n          callbackHandler = callback[callbackIndex];\r\n\r\n      // Trigger the focusin\r\n      $(e.currentTarget).focus();\r\n\r\n      callbackHandler(this);\r\n\r\n      // Trigger onChange for each button handle\r\n      this.change(this);\r\n\r\n      // Unless it was the save handler,\r\n      // focusin the textarea\r\n      if (handlerName.indexOf('cmdSave') < 0) {\r\n        this.$textarea.focus();\r\n      }\r\n\r\n      e.preventDefault();\r\n    }\r\n\r\n  , __localize: function(string) {\r\n      var messages = $.fn.markdown.messages,\r\n          language = this.$options.language;\r\n      if (\r\n        typeof messages !== 'undefined' &&\r\n        typeof messages[language] !== 'undefined' &&\r\n        typeof messages[language][string] !== 'undefined'\r\n      ) {\r\n        return messages[language][string];\r\n      }\r\n      return string;\r\n    }\r\n\r\n  , __getIcon: function(src) {\r\n    return typeof src == 'object' ? src[this.$options.iconlibrary] : src;\r\n  }\r\n\r\n  , setFullscreen: function(mode) {\r\n    var $editor = this.$editor,\r\n        $textarea = this.$textarea;\r\n\r\n    if (mode === true) {\r\n      $editor.addClass('md-fullscreen-mode');\r\n      $('body').addClass('md-nooverflow');\r\n      this.$options.onFullscreen(this);\r\n    } else {\r\n      $editor.removeClass('md-fullscreen-mode');\r\n      $('body').removeClass('md-nooverflow');\r\n\r\n      if (this.$isPreview == true) this.hidePreview().showPreview()\r\n    }\r\n\r\n    this.$isFullscreen = mode;\r\n    $textarea.focus();\r\n  }\r\n\r\n  , showEditor: function() {\r\n      var instance = this,\r\n          textarea,\r\n          ns = this.$ns,\r\n          container = this.$element,\r\n          originalHeigth = container.css('height'),\r\n          originalWidth = container.css('width'),\r\n          editable = this.$editable,\r\n          handler = this.$handler,\r\n          callback = this.$callback,\r\n          options = this.$options,\r\n          editor = $( '<div/>', {\r\n                      'class': 'md-editor',\r\n                      click: function() {\r\n                        instance.focus();\r\n                      }\r\n                    });\r\n\r\n      // Prepare the editor\r\n      if (this.$editor === null) {\r\n        // Create the panel\r\n        var editorHeader = $('<div/>', {\r\n                            'class': 'md-header btn-toolbar'\r\n                            });\r\n\r\n        // Merge the main & additional button groups together\r\n        var allBtnGroups = [];\r\n        if (options.buttons.length > 0) allBtnGroups = allBtnGroups.concat(options.buttons[0]);\r\n        if (options.additionalButtons.length > 0) {\r\n          // iterate the additional button groups\r\n          $.each(options.additionalButtons[0], function(idx, buttonGroup){\r\n            \r\n            // see if the group name of the addional group matches an existing group\r\n            var matchingGroups = $.grep(allBtnGroups, function(allButtonGroup, allIdx){\r\n              return allButtonGroup.name === buttonGroup.name;\r\n            });\r\n\r\n            // if it matches add the addional buttons to that group, if not just add it to the all buttons group\r\n            if(matchingGroups.length > 0) {\r\n              matchingGroups[0].data = matchingGroups[0].data.concat(buttonGroup.data);\r\n            } else {              \r\n              allBtnGroups.push(options.additionalButtons[0][idx]);\r\n            }\r\n\r\n          });\r\n        } \r\n\r\n        // Reduce and/or reorder the button groups\r\n        if (options.reorderButtonGroups.length > 0) {\r\n          allBtnGroups = allBtnGroups\r\n              .filter(function(btnGroup) {\r\n                return options.reorderButtonGroups.indexOf(btnGroup.name) > -1;\r\n              })\r\n              .sort(function(a, b) {\r\n                if (options.reorderButtonGroups.indexOf(a.name) < options.reorderButtonGroups.indexOf(b.name)) return -1;\r\n                if (options.reorderButtonGroups.indexOf(a.name) > options.reorderButtonGroups.indexOf(b.name)) return 1;\r\n                return 0;\r\n              });\r\n        }\r\n\r\n        // Build the buttons\r\n        if (allBtnGroups.length > 0) {\r\n          editorHeader = this.__buildButtons([allBtnGroups], editorHeader);\r\n        }\r\n\r\n        if (options.fullscreen.enable) {\r\n          editorHeader.append('<div class=\"md-controls\"><a class=\"md-control md-control-fullscreen\" href=\"#\"><span class=\"'+this.__getIcon(options.fullscreen.icons.fullscreenOn)+'\"></span></a></div>').on('click', '.md-control-fullscreen', function(e) {\r\n              e.preventDefault();\r\n              instance.setFullscreen(true);\r\n          });\r\n        }\r\n\r\n        editor.append(editorHeader);\r\n\r\n        // Wrap the textarea\r\n        if (container.is('textarea')) {\r\n          container.before(editor);\r\n          textarea = container;\r\n          textarea.addClass('md-input');\r\n          editor.append(textarea);\r\n        } else {\r\n          var rawContent = (typeof toMarkdown == 'function') ? toMarkdown(container.html()) : container.html(),\r\n              currentContent = $.trim(rawContent);\r\n\r\n          // This is some arbitrary content that could be edited\r\n          textarea = $('<textarea/>', {\r\n                       'class': 'md-input',\r\n                       'val' : currentContent\r\n                      });\r\n\r\n          editor.append(textarea);\r\n\r\n          // Save the editable\r\n          editable.el = container;\r\n          editable.type = container.prop('tagName').toLowerCase();\r\n          editable.content = container.html();\r\n\r\n          $(container[0].attributes).each(function(){\r\n            editable.attrKeys.push(this.nodeName);\r\n            editable.attrValues.push(this.nodeValue);\r\n          });\r\n\r\n          // Set editor to blocked the original container\r\n          container.replaceWith(editor);\r\n        }\r\n\r\n        var editorFooter = $('<div/>', {\r\n                           'class': 'md-footer'\r\n                         }),\r\n            createFooter = false,\r\n            footer = '';\r\n        // Create the footer if savable\r\n        if (options.savable) {\r\n          createFooter = true;\r\n          var saveHandler = 'cmdSave';\r\n\r\n          // Register handler and callback\r\n          handler.push(saveHandler);\r\n          callback.push(options.onSave);\r\n\r\n          editorFooter.append('<button class=\"btn btn-success\" data-provider=\"'\r\n                              + ns\r\n                              + '\" data-handler=\"'\r\n                              + saveHandler\r\n                              + '\"><i class=\"icon icon-white icon-ok\"></i> '\r\n                              + this.__localize('Save')\r\n                              + '</button>');\r\n\r\n\r\n        }\r\n\r\n        footer = typeof options.footer === 'function' ? options.footer(this) : options.footer;\r\n\r\n        if ($.trim(footer) !== '') {\r\n          createFooter = true;\r\n          editorFooter.append(footer);\r\n        }\r\n\r\n        if (createFooter) editor.append(editorFooter);\r\n\r\n        // Set width\r\n        if (options.width && options.width !== 'inherit') {\r\n          if (jQuery.isNumeric(options.width)) {\r\n            editor.css('display', 'table');\r\n            textarea.css('width', options.width + 'px');\r\n          } else {\r\n            editor.addClass(options.width);\r\n          }\r\n        }\r\n\r\n        // Set height\r\n        if (options.height && options.height !== 'inherit') {\r\n          if (jQuery.isNumeric(options.height)) {\r\n            var height = options.height;\r\n            if (editorHeader) height = Math.max(0, height - editorHeader.outerHeight());\r\n            if (editorFooter) height = Math.max(0, height - editorFooter.outerHeight());\r\n            textarea.css('height', height + 'px');\r\n          } else {\r\n            editor.addClass(options.height);\r\n          }\r\n        }\r\n\r\n        // Reference\r\n        this.$editor     = editor;\r\n        this.$textarea   = textarea;\r\n        this.$editable   = editable;\r\n        this.$oldContent = this.getContent();\r\n\r\n        this.__setListener();\r\n\r\n        // Set editor attributes, data short-hand API and listener\r\n        this.$editor.attr('id',(new Date()).getTime());\r\n        this.$editor.on('click', '[data-provider=\"bootstrap-markdown\"]', $.proxy(this.__handle, this));\r\n\r\n        if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\r\n          this.$editor.addClass('md-editor-disabled');\r\n          this.disableButtons('all');\r\n        }\r\n\r\n        if (this.eventSupported('keydown') && typeof jQuery.hotkeys === 'object') {\r\n          editorHeader.find('[data-provider=\"bootstrap-markdown\"]').each(function() {\r\n            var $button = $(this),\r\n                hotkey = $button.attr('data-hotkey');\r\n            if (hotkey.toLowerCase() !== '') {\r\n              textarea.bind('keydown', hotkey, function() {\r\n                $button.trigger('click');\r\n                return false;\r\n              });\r\n            }\r\n          });\r\n        }\r\n\r\n        if (options.initialstate === 'preview') {\r\n          this.showPreview();\r\n        } else if (options.initialstate === 'fullscreen' && options.fullscreen.enable) {\r\n          this.setFullscreen(true);\r\n        }\r\n\r\n      } else {\r\n        this.$editor.show();\r\n      }\r\n\r\n      if (options.autofocus) {\r\n        this.$textarea.focus();\r\n        this.$editor.addClass('active');\r\n      }\r\n\r\n      if (options.fullscreen.enable && options.fullscreen !== false) {\r\n        this.$editor.append('<div class=\"md-fullscreen-controls\">'\r\n                        + '<a href=\"#\" class=\"exit-fullscreen\" title=\"Exit fullscreen\"><span class=\"' + this.__getIcon(options.fullscreen.icons.fullscreenOff) + '\">'\r\n                        + '</span></a>'\r\n                        + '</div>');\r\n        this.$editor.on('click', '.exit-fullscreen', function(e) {\r\n          e.preventDefault();\r\n          instance.setFullscreen(false);\r\n        });\r\n      }\r\n\r\n      // hide hidden buttons from options\r\n      this.hideButtons(options.hiddenButtons);\r\n\r\n      // disable disabled buttons from options\r\n      this.disableButtons(options.disabledButtons);\r\n\r\n      // Trigger the onShow hook\r\n      options.onShow(this);\r\n\r\n      return this;\r\n    }\r\n\r\n  , parseContent: function(val) {\r\n      var content;\r\n\r\n      // parse with supported markdown parser\r\n      var val = val || this.$textarea.val();\r\n\r\n      if (this.$options.parser) {\r\n        content = this.$options.parser(val);\r\n      } else if (typeof markdown == 'object') {\r\n        content = markdown.toHTML(val);\r\n      } else if (typeof marked == 'function') {\r\n        content = marked(val);\r\n      } else {\r\n        content = val;\r\n      }\r\n\r\n      return content;\r\n    }\r\n\r\n  , showPreview: function() {\r\n      var options = this.$options,\r\n          container = this.$textarea,\r\n          afterContainer = container.next(),\r\n          replacementContainer = $('<div/>',{'class':'md-preview','data-provider':'markdown-preview'}),\r\n          content,\r\n          callbackContent;\r\n\r\n      if (this.$isPreview == true) {\r\n        // Avoid sequenced element creation on missused scenario\r\n        // @see https://github.com/toopay/bootstrap-markdown/issues/170\r\n        return this;\r\n      }\r\n      \r\n      // Give flag that tell the editor enter preview mode\r\n      this.$isPreview = true;\r\n      // Disable all buttons\r\n      this.disableButtons('all').enableButtons('cmdPreview');\r\n\r\n      // Try to get the content from callback\r\n      callbackContent = options.onPreview(this);\r\n      // Set the content based from the callback content if string otherwise parse value from textarea\r\n      content = typeof callbackContent == 'string' ? callbackContent : this.parseContent();\r\n\r\n      // Build preview element\r\n      replacementContainer.html(content);\r\n\r\n      if (afterContainer && afterContainer.attr('class') == 'md-footer') {\r\n        // If there is footer element, insert the preview container before it\r\n        replacementContainer.insertBefore(afterContainer);\r\n      } else {\r\n        // Otherwise, just append it after textarea\r\n        container.parent().append(replacementContainer);\r\n      }\r\n\r\n      // Set the preview element dimensions\r\n      replacementContainer.css({\r\n        width: container.outerWidth() + 'px',\r\n        height: container.outerHeight() + 'px'\r\n      });\r\n\r\n      if (this.$options.resize) {\r\n        replacementContainer.css('resize',this.$options.resize);\r\n      }\r\n\r\n      // Hide the last-active textarea\r\n      container.hide();\r\n\r\n      // Attach the editor instances\r\n      replacementContainer.data('markdown',this);\r\n\r\n      if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\r\n        this.$editor.addClass('md-editor-disabled');\r\n        this.disableButtons('all');\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n  , hidePreview: function() {\r\n      // Give flag that tell the editor quit preview mode\r\n      this.$isPreview = false;\r\n\r\n      // Obtain the preview container\r\n      var container = this.$editor.find('div[data-provider=\"markdown-preview\"]');\r\n\r\n      // Remove the preview container\r\n      container.remove();\r\n\r\n      // Enable all buttons\r\n      this.enableButtons('all');\r\n      // Disable configured disabled buttons\r\n      this.disableButtons(this.$options.disabledButtons);\r\n\r\n      // Back to the editor\r\n      this.$textarea.show();\r\n      this.__setListener();\r\n\r\n      return this;\r\n    }\r\n\r\n  , isDirty: function() {\r\n      return this.$oldContent != this.getContent();\r\n    }\r\n\r\n  , getContent: function() {\r\n      return this.$textarea.val();\r\n    }\r\n\r\n  , setContent: function(content) {\r\n      this.$textarea.val(content);\r\n\r\n      return this;\r\n    }\r\n\r\n  , findSelection: function(chunk) {\r\n    var content = this.getContent(), startChunkPosition;\r\n\r\n    if (startChunkPosition = content.indexOf(chunk), startChunkPosition >= 0 && chunk.length > 0) {\r\n      var oldSelection = this.getSelection(), selection;\r\n\r\n      this.setSelection(startChunkPosition,startChunkPosition+chunk.length);\r\n      selection = this.getSelection();\r\n\r\n      this.setSelection(oldSelection.start,oldSelection.end);\r\n\r\n      return selection;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  , getSelection: function() {\r\n\r\n      var e = this.$textarea[0];\r\n\r\n      return (\r\n\r\n          ('selectionStart' in e && function() {\r\n              var l = e.selectionEnd - e.selectionStart;\r\n              return { start: e.selectionStart, end: e.selectionEnd, length: l, text: e.value.substr(e.selectionStart, l) };\r\n          }) ||\r\n\r\n          /* browser not supported */\r\n          function() {\r\n            return null;\r\n          }\r\n\r\n      )();\r\n\r\n    }\r\n\r\n  , setSelection: function(start,end) {\r\n\r\n      var e = this.$textarea[0];\r\n\r\n      return (\r\n\r\n          ('selectionStart' in e && function() {\r\n              e.selectionStart = start;\r\n              e.selectionEnd = end;\r\n              return;\r\n          }) ||\r\n\r\n          /* browser not supported */\r\n          function() {\r\n            return null;\r\n          }\r\n\r\n      )();\r\n\r\n    }\r\n\r\n  , replaceSelection: function(text) {\r\n\r\n      var e = this.$textarea[0];\r\n\r\n      return (\r\n\r\n          ('selectionStart' in e && function() {\r\n              e.value = e.value.substr(0, e.selectionStart) + text + e.value.substr(e.selectionEnd, e.value.length);\r\n              // Set cursor to the last replacement end\r\n              e.selectionStart = e.value.length;\r\n              return this;\r\n          }) ||\r\n\r\n          /* browser not supported */\r\n          function() {\r\n              e.value += text;\r\n              return jQuery(e);\r\n          }\r\n\r\n      )();\r\n    }\r\n\r\n  , getNextTab: function() {\r\n      // Shift the nextTab\r\n      if (this.$nextTab.length === 0) {\r\n        return null;\r\n      } else {\r\n        var nextTab, tab = this.$nextTab.shift();\r\n\r\n        if (typeof tab == 'function') {\r\n          nextTab = tab();\r\n        } else if (typeof tab == 'object' && tab.length > 0) {\r\n          nextTab = tab;\r\n        }\r\n\r\n        return nextTab;\r\n      }\r\n    }\r\n\r\n  , setNextTab: function(start,end) {\r\n      // Push new selection into nextTab collections\r\n      if (typeof start == 'string') {\r\n        var that = this;\r\n        this.$nextTab.push(function(){\r\n          return that.findSelection(start);\r\n        });\r\n      } else if (typeof start == 'number' && typeof end == 'number') {\r\n        var oldSelection = this.getSelection();\r\n\r\n        this.setSelection(start,end);\r\n        this.$nextTab.push(this.getSelection());\r\n\r\n        this.setSelection(oldSelection.start,oldSelection.end);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n  , __parseButtonNameParam: function (names) {\r\n      return typeof names == 'string' ?\r\n                      names.split(' ') :\r\n                      names;\r\n\r\n    }\r\n\r\n  , enableButtons: function(name) {\r\n      var buttons = this.__parseButtonNameParam(name),\r\n        that = this;\r\n\r\n      $.each(buttons, function(i, v) {\r\n        that.__alterButtons(buttons[i], function (el) {\r\n          el.removeAttr('disabled');\r\n        });\r\n      });\r\n\r\n      return this;\r\n    }\r\n\r\n  , disableButtons: function(name) {\r\n      var buttons = this.__parseButtonNameParam(name),\r\n        that = this;\r\n\r\n      $.each(buttons, function(i, v) {\r\n        that.__alterButtons(buttons[i], function (el) {\r\n          el.attr('disabled','disabled');\r\n        });\r\n      });\r\n\r\n      return this;\r\n    }\r\n\r\n  , hideButtons: function(name) {\r\n      var buttons = this.__parseButtonNameParam(name),\r\n        that = this;\r\n\r\n      $.each(buttons, function(i, v) {\r\n        that.__alterButtons(buttons[i], function (el) {\r\n          el.addClass('hidden');\r\n        });\r\n      });\r\n\r\n      return this;\r\n    }\r\n\r\n  , showButtons: function(name) {\r\n      var buttons = this.__parseButtonNameParam(name),\r\n        that = this;\r\n\r\n      $.each(buttons, function(i, v) {\r\n        that.__alterButtons(buttons[i], function (el) {\r\n          el.removeClass('hidden');\r\n        });\r\n      });\r\n\r\n      return this;\r\n    }\r\n\r\n  , eventSupported: function(eventName) {\r\n      var isSupported = eventName in this.$element;\r\n      if (!isSupported) {\r\n        this.$element.setAttribute(eventName, 'return;');\r\n        isSupported = typeof this.$element[eventName] === 'function';\r\n      }\r\n      return isSupported;\r\n    }\r\n\r\n  , keyup: function (e) {\r\n      var blocked = false;\r\n      switch(e.keyCode) {\r\n        case 40: // down arrow\r\n        case 38: // up arrow\r\n        case 16: // shift\r\n        case 17: // ctrl\r\n        case 18: // alt\r\n          break;\r\n\r\n        case 9: // tab\r\n          var nextTab;\r\n          if (nextTab = this.getNextTab(),nextTab !== null) {\r\n            // Get the nextTab if exists\r\n            var that = this;\r\n            setTimeout(function(){\r\n              that.setSelection(nextTab.start,nextTab.end);\r\n            },500);\r\n\r\n            blocked = true;\r\n          } else {\r\n            // The next tab memory contains nothing...\r\n            // check the cursor position to determine tab action\r\n            var cursor = this.getSelection();\r\n\r\n            if (cursor.start == cursor.end && cursor.end == this.getContent().length) {\r\n              // The cursor already reach the end of the content\r\n              blocked = false;\r\n            } else {\r\n              // Put the cursor to the end\r\n              this.setSelection(this.getContent().length,this.getContent().length);\r\n\r\n              blocked = true;\r\n            }\r\n          }\r\n\r\n          break;\r\n\r\n        case 13: // enter\r\n          blocked = false;\r\n          break;\r\n        case 27: // escape\r\n          if (this.$isFullscreen) this.setFullscreen(false);\r\n          blocked = false;\r\n          break;\r\n\r\n        default:\r\n          blocked = false;\r\n      }\r\n\r\n      if (blocked) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }\r\n\r\n      this.$options.onChange(this);\r\n    }\r\n\r\n  , change: function(e) {\r\n      this.$options.onChange(this);\r\n      return this;\r\n    }\r\n  , select: function (e) {\r\n      this.$options.onSelect(this);\r\n      return this;\r\n    }\r\n  , focus: function (e) {\r\n      var options = this.$options,\r\n          isHideable = options.hideable,\r\n          editor = this.$editor;\r\n\r\n      editor.addClass('active');\r\n\r\n      // Blur other markdown(s)\r\n      $(document).find('.md-editor').each(function(){\r\n        if ($(this).attr('id') !== editor.attr('id')) {\r\n          var attachedMarkdown;\r\n\r\n          if (attachedMarkdown = $(this).find('textarea').data('markdown'),\r\n              attachedMarkdown === null) {\r\n              attachedMarkdown = $(this).find('div[data-provider=\"markdown-preview\"]').data('markdown');\r\n          }\r\n\r\n          if (attachedMarkdown) {\r\n            attachedMarkdown.blur();\r\n          }\r\n        }\r\n      });\r\n\r\n      // Trigger the onFocus hook\r\n      options.onFocus(this);\r\n\r\n      return this;\r\n    }\r\n\r\n  , blur: function (e) {\r\n      var options = this.$options,\r\n          isHideable = options.hideable,\r\n          editor = this.$editor,\r\n          editable = this.$editable;\r\n\r\n      if (editor.hasClass('active') || this.$element.parent().length === 0) {\r\n        editor.removeClass('active');\r\n\r\n        if (isHideable) {\r\n          // Check for editable elements\r\n          if (editable.el !== null) {\r\n            // Build the original element\r\n            var oldElement = $('<'+editable.type+'/>'),\r\n                content = this.getContent(),\r\n                currentContent = this.parseContent(content);\r\n\r\n            $(editable.attrKeys).each(function(k,v) {\r\n              oldElement.attr(editable.attrKeys[k],editable.attrValues[k]);\r\n            });\r\n\r\n            // Get the editor content\r\n            oldElement.html(currentContent);\r\n\r\n            editor.replaceWith(oldElement);\r\n          } else {\r\n            editor.hide();\r\n          }\r\n        }\r\n\r\n        // Trigger the onBlur hook\r\n        options.onBlur(this);\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n  };\r\n\r\n /* MARKDOWN PLUGIN DEFINITION\r\n  * ========================== */\r\n\r\n  var old = $.fn.markdown;\r\n\r\n  $.fn.markdown = function (option) {\r\n    return this.each(function () {\r\n      var $this = $(this)\r\n        , data = $this.data('markdown')\r\n        , options = typeof option == 'object' && option;\r\n      if (!data) $this.data('markdown', (data = new Markdown(this, options)))\r\n    })\r\n  };\r\n\r\n  $.fn.markdown.messages = {};\r\n\r\n  $.fn.markdown.defaults = {\r\n    /* Editor Properties */\r\n    autofocus: false,\r\n    hideable: false,\r\n    savable: false,\r\n    width: 'inherit',\r\n    height: 'inherit',\r\n    resize: 'none',\r\n    iconlibrary: 'glyph',\r\n    language: 'en',\r\n    initialstate: 'editor',\r\n    parser: null,\r\n\r\n    /* Buttons Properties */\r\n    buttons: [\r\n      [{\r\n        name: 'groupFont',\r\n        data: [{\r\n          name: 'cmdBold',\r\n          hotkey: 'Ctrl+B',\r\n          title: 'Bold',\r\n          icon: { glyph: 'glyphicon glyphicon-bold', fa: 'fa fa-bold', 'fa-3': 'icon-bold' },\r\n          callback: function(e){\r\n            // Give/remove ** surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('strong text');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (content.substr(selected.start-2,2) === '**'\r\n                && content.substr(selected.end,2) === '**' ) {\r\n              e.setSelection(selected.start-2,selected.end+2);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-2;\r\n            } else {\r\n              e.replaceSelection('**'+chunk+'**');\r\n              cursor = selected.start+2;\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },{\r\n          name: 'cmdItalic',\r\n          title: 'Italic',\r\n          hotkey: 'Ctrl+I',\r\n          icon: { glyph: 'glyphicon glyphicon-italic', fa: 'fa fa-italic', 'fa-3': 'icon-italic' },\r\n          callback: function(e){\r\n            // Give/remove * surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('emphasized text');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (content.substr(selected.start-1,1) === '_'\r\n                && content.substr(selected.end,1) === '_' ) {\r\n              e.setSelection(selected.start-1,selected.end+1);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-1;\r\n            } else {\r\n              e.replaceSelection('_'+chunk+'_');\r\n              cursor = selected.start+1;\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },{\r\n          name: 'cmdHeading',\r\n          title: 'Heading',\r\n          hotkey: 'Ctrl+H',\r\n          icon: { glyph: 'glyphicon glyphicon-header', fa: 'fa fa-header', 'fa-3': 'icon-font' },\r\n          callback: function(e){\r\n            // Append/remove ### surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent(), pointer, prevChar;\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('heading text');\r\n            } else {\r\n              chunk = selected.text + '\\n';\r\n            }\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if ((pointer = 4, content.substr(selected.start-pointer,pointer) === '### ')\r\n                || (pointer = 3, content.substr(selected.start-pointer,pointer) === '###')) {\r\n              e.setSelection(selected.start-pointer,selected.end);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-pointer;\r\n            } else if (selected.start > 0 && (prevChar = content.substr(selected.start-1,1), !!prevChar && prevChar != '\\n')) {\r\n              e.replaceSelection('\\n\\n### '+chunk);\r\n              cursor = selected.start+6;\r\n            } else {\r\n              // Empty string before element\r\n              e.replaceSelection('### '+chunk);\r\n              cursor = selected.start+4;\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        }]\r\n      },{\r\n        name: 'groupLink',\r\n        data: [{\r\n          name: 'cmdUrl',\r\n          title: 'URL/Link',\r\n          hotkey: 'Ctrl+L',\r\n          icon: { glyph: 'glyphicon glyphicon-link', fa: 'fa fa-link', 'fa-3': 'icon-link' },\r\n          callback: function(e){\r\n            // Give [] surround the selection and prepend the link\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent(), link;\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('enter link description here');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            link = prompt(e.__localize('Insert Hyperlink'),'http://');\r\n\r\n            var urlRegex = new RegExp('^((http|https)://|(mailto:)|(//))[a-z0-9]', 'i');\r\n            if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\r\n              var sanitizedLink = $('<div>'+link+'</div>').text();\r\n\r\n              // transform selection and set the cursor into chunked text\r\n              e.replaceSelection('['+chunk+']('+sanitizedLink+')');\r\n              cursor = selected.start+1;\r\n\r\n              // Set the cursor\r\n              e.setSelection(cursor,cursor+chunk.length);\r\n            }\r\n          }\r\n        },{\r\n          name: 'cmdImage',\r\n          title: 'Image',\r\n          hotkey: 'Ctrl+G',\r\n          icon: { glyph: 'glyphicon glyphicon-picture', fa: 'fa fa-picture-o', 'fa-3': 'icon-picture' },\r\n          callback: function(e){\r\n            // Give ![] surround the selection and prepend the image link\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent(), link;\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('enter image description here');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            link = prompt(e.__localize('Insert Image Hyperlink'),'http://');\r\n\r\n            var urlRegex = new RegExp('^((http|https)://|(//))[a-z0-9]', 'i');\r\n            if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\r\n              var sanitizedLink = $('<div>'+link+'</div>').text();\r\n\r\n              // transform selection and set the cursor into chunked text\r\n              e.replaceSelection('!['+chunk+']('+sanitizedLink+' \"'+e.__localize('enter image title here')+'\")');\r\n              cursor = selected.start+2;\r\n\r\n              // Set the next tab\r\n              e.setNextTab(e.__localize('enter image title here'));\r\n\r\n              // Set the cursor\r\n              e.setSelection(cursor,cursor+chunk.length);\r\n            }\r\n          }\r\n        }]\r\n      },{\r\n        name: 'groupMisc',\r\n        data: [{\r\n          name: 'cmdList',\r\n          hotkey: 'Ctrl+U',\r\n          title: 'Unordered List',\r\n          icon: { glyph: 'glyphicon glyphicon-list', fa: 'fa fa-list', 'fa-3': 'icon-list-ul' },\r\n          callback: function(e){\r\n            // Prepend/Give - surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('list text here');\r\n\r\n              e.replaceSelection('- '+chunk);\r\n              // Set the cursor\r\n              cursor = selected.start+2;\r\n            } else {\r\n              if (selected.text.indexOf('\\n') < 0) {\r\n                chunk = selected.text;\r\n\r\n                e.replaceSelection('- '+chunk);\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+2;\r\n              } else {\r\n                var list = [];\r\n\r\n                list = selected.text.split('\\n');\r\n                chunk = list[0];\r\n\r\n                $.each(list,function(k,v) {\r\n                  list[k] = '- '+v;\r\n                });\r\n\r\n                e.replaceSelection('\\n\\n'+list.join('\\n'));\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+4;\r\n              }\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },\r\n        {\r\n          name: 'cmdListO',\r\n          hotkey: 'Ctrl+O',\r\n          title: 'Ordered List',\r\n          icon: { glyph: 'glyphicon glyphicon-th-list', fa: 'fa fa-list-ol', 'fa-3': 'icon-list-ol' },\r\n          callback: function(e) {\r\n\r\n            // Prepend/Give - surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('list text here');\r\n              e.replaceSelection('1. '+chunk);\r\n              // Set the cursor\r\n              cursor = selected.start+3;\r\n            } else {\r\n              if (selected.text.indexOf('\\n') < 0) {\r\n                chunk = selected.text;\r\n\r\n                e.replaceSelection('1. '+chunk);\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+3;\r\n              } else {\r\n                var list = [];\r\n\r\n                list = selected.text.split('\\n');\r\n                chunk = list[0];\r\n\r\n                $.each(list,function(k,v) {\r\n                  list[k] = '1. '+v;\r\n                });\r\n\r\n                e.replaceSelection('\\n\\n'+list.join('\\n'));\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+5;\r\n              }\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },\r\n        {\r\n          name: 'cmdCode',\r\n          hotkey: 'Ctrl+K',\r\n          title: 'Code',\r\n          icon: { glyph: 'glyphicon glyphicon-asterisk', fa: 'fa fa-code', 'fa-3': 'icon-code' },\r\n          callback: function(e) {\r\n            // Give/remove ** surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('code text here');\r\n            } else {\r\n              chunk = selected.text;\r\n            }\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (content.substr(selected.start-4,4) === '```\\n'\r\n                && content.substr(selected.end,4) === '\\n```') {\r\n              e.setSelection(selected.start-4, selected.end+4);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-4;\r\n            } else if (content.substr(selected.start-1,1) === '`'\r\n                && content.substr(selected.end,1) === '`') {\r\n              e.setSelection(selected.start-1,selected.end+1);\r\n              e.replaceSelection(chunk);\r\n              cursor = selected.start-1;\r\n            } else if (content.indexOf('\\n') > -1) {\r\n              e.replaceSelection('```\\n'+chunk+'\\n```');\r\n              cursor = selected.start+4;\r\n            } else {\r\n              e.replaceSelection('`'+chunk+'`');\r\n              cursor = selected.start+1;\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        },\r\n        {\r\n          name: 'cmdQuote',\r\n          hotkey: 'Ctrl+Q',\r\n          title: 'Quote',\r\n          icon: { glyph: 'glyphicon glyphicon-comment', fa: 'fa fa-quote-left', 'fa-3': 'icon-quote-left' },\r\n          callback: function(e) {\r\n            // Prepend/Give - surround the selection\r\n            var chunk, cursor, selected = e.getSelection(), content = e.getContent();\r\n\r\n            // transform selection and set the cursor into chunked text\r\n            if (selected.length === 0) {\r\n              // Give extra word\r\n              chunk = e.__localize('quote here');\r\n\r\n              e.replaceSelection('> '+chunk);\r\n\r\n              // Set the cursor\r\n              cursor = selected.start+2;\r\n            } else {\r\n              if (selected.text.indexOf('\\n') < 0) {\r\n                chunk = selected.text;\r\n\r\n                e.replaceSelection('> '+chunk);\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+2;\r\n              } else {\r\n                var list = [];\r\n\r\n                list = selected.text.split('\\n');\r\n                chunk = list[0];\r\n\r\n                $.each(list,function(k,v) {\r\n                  list[k] = '> '+v;\r\n                });\r\n\r\n                e.replaceSelection('\\n\\n'+list.join('\\n'));\r\n\r\n                // Set the cursor\r\n                cursor = selected.start+4;\r\n              }\r\n            }\r\n\r\n            // Set the cursor\r\n            e.setSelection(cursor,cursor+chunk.length);\r\n          }\r\n        }]\r\n      },{\r\n        name: 'groupUtil',\r\n        data: [{\r\n          name: 'cmdPreview',\r\n          toggle: true,\r\n          hotkey: 'Ctrl+P',\r\n          title: 'Preview',\r\n          btnText: 'Preview',\r\n          btnClass: 'btn btn-primary btn-sm',\r\n          icon: { glyph: 'glyphicon glyphicon-search', fa: 'fa fa-search', 'fa-3': 'icon-search' },\r\n          callback: function(e){\r\n            // Check the preview mode and toggle based on this flag\r\n            var isPreview = e.$isPreview,content;\r\n\r\n            if (isPreview === false) {\r\n              // Give flag that tell the editor enter preview mode\r\n              e.showPreview();\r\n            } else {\r\n              e.hidePreview();\r\n            }\r\n          }\r\n        }]\r\n      }]\r\n    ],\r\n    additionalButtons:[], // Place to hook more buttons by code\r\n    reorderButtonGroups:[],\r\n    hiddenButtons:[], // Default hidden buttons\r\n    disabledButtons:[], // Default disabled buttons\r\n    footer: '',\r\n    fullscreen: {\r\n      enable: true,\r\n      icons: {\r\n        fullscreenOn: {\r\n          fa: 'fa fa-expand',\r\n          glyph: 'glyphicon glyphicon-fullscreen',\r\n          'fa-3': 'icon-resize-full'\r\n        },\r\n        fullscreenOff: {\r\n          fa: 'fa fa-compress',\r\n          glyph: 'glyphicon glyphicon-fullscreen',\r\n          'fa-3': 'icon-resize-small'\r\n        }\r\n      }\r\n    },\r\n\r\n    /* Events hook */\r\n    onShow: function (e) {},\r\n    onPreview: function (e) {},\r\n    onSave: function (e) {},\r\n    onBlur: function (e) {},\r\n    onFocus: function (e) {},\r\n    onChange: function(e) {},\r\n    onFullscreen: function(e) {},\r\n    onSelect: function (e) {}\r\n  };\r\n\r\n  $.fn.markdown.Constructor = Markdown;\r\n\r\n\r\n /* MARKDOWN NO CONFLICT\r\n  * ==================== */\r\n\r\n  $.fn.markdown.noConflict = function () {\r\n    $.fn.markdown = old;\r\n    return this;\r\n  };\r\n\r\n  /* MARKDOWN GLOBAL FUNCTION & DATA-API\r\n  * ==================================== */\r\n  var initMarkdown = function(el) {\r\n    var $this = el;\r\n\r\n    if ($this.data('markdown')) {\r\n      $this.data('markdown').showEditor();\r\n      return;\r\n    }\r\n\r\n    $this.markdown()\r\n  };\r\n\r\n  var blurNonFocused = function(e) {\r\n    var $activeElement = $(document.activeElement);\r\n\r\n    // Blur event\r\n    $(document).find('.md-editor').each(function(){\r\n      var $this            = $(this),\r\n          focused          = $activeElement.closest('.md-editor')[0] === this,\r\n          attachedMarkdown = $this.find('textarea').data('markdown') ||\r\n                             $this.find('div[data-provider=\"markdown-preview\"]').data('markdown');\r\n\r\n      if (attachedMarkdown && !focused) {\r\n        attachedMarkdown.blur();\r\n      }\r\n    })\r\n  };\r\n\r\n  $(document)\r\n    .on('click.markdown.data-api', '[data-provide=\"markdown-editable\"]', function (e) {\r\n      initMarkdown($(this));\r\n      e.preventDefault();\r\n    })\r\n    .on('click focusin', function (e) {\r\n      blurNonFocused(e);\r\n    })\r\n    .ready(function(){\r\n      $('textarea[data-provide=\"markdown\"]').each(function(){\r\n        initMarkdown($(this));\r\n      })\r\n    });\r\n\r\n}));\r\n"},2436:function(e,n){e.exports="/*! https://mths.be/he v1.1.1 by @mathias | MIT license */\r\n;(function(root) {\r\n\r\n\t// Detect free variables `exports`.\r\n\tvar freeExports = typeof exports == 'object' && exports;\r\n\r\n\t// Detect free variable `module`.\r\n\tvar freeModule = typeof module == 'object' && module &&\r\n\t\tmodule.exports == freeExports && module;\r\n\r\n\t// Detect free variable `global`, from Node.js or Browserified code,\r\n\t// and use it as `root`.\r\n\tvar freeGlobal = typeof global == 'object' && global;\r\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\r\n\t\troot = freeGlobal;\r\n\t}\r\n\r\n\t/*--------------------------------------------------------------------------*/\r\n\r\n\t// All astral symbols.\r\n\tvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\n\t// All ASCII symbols (not just printable ASCII) except those listed in the\r\n\t// first column of the overrides table.\r\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\r\n\tvar regexAsciiWhitelist = /[\\x01-\\x7F]/g;\r\n\t// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\r\n\t// code points listed in the first column of the overrides table on\r\n\t// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\r\n\tvar regexBmpWhitelist = /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;\r\n\r\n\tvar regexEncodeNonAscii = /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;\r\n\tvar encodeMap = {'\\xAD':'shy','\\u200C':'zwnj','\\u200D':'zwj','\\u200E':'lrm','\\u2063':'ic','\\u2062':'it','\\u2061':'af','\\u200F':'rlm','\\u200B':'ZeroWidthSpace','\\u2060':'NoBreak','\\u0311':'DownBreve','\\u20DB':'tdot','\\u20DC':'DotDot','\\t':'Tab','\\n':'NewLine','\\u2008':'puncsp','\\u205F':'MediumSpace','\\u2009':'thinsp','\\u200A':'hairsp','\\u2004':'emsp13','\\u2002':'ensp','\\u2005':'emsp14','\\u2003':'emsp','\\u2007':'numsp','\\xA0':'nbsp','\\u205F\\u200A':'ThickSpace','\\u203E':'oline','_':'lowbar','\\u2010':'dash','\\u2013':'ndash','\\u2014':'mdash','\\u2015':'horbar',',':'comma',';':'semi','\\u204F':'bsemi',':':'colon','\\u2A74':'Colone','!':'excl','\\xA1':'iexcl','?':'quest','\\xBF':'iquest','.':'period','\\u2025':'nldr','\\u2026':'mldr','\\xB7':'middot','\\'':'apos','\\u2018':'lsquo','\\u2019':'rsquo','\\u201A':'sbquo','\\u2039':'lsaquo','\\u203A':'rsaquo','\"':'quot','\\u201C':'ldquo','\\u201D':'rdquo','\\u201E':'bdquo','\\xAB':'laquo','\\xBB':'raquo','(':'lpar',')':'rpar','[':'lsqb',']':'rsqb','{':'lcub','}':'rcub','\\u2308':'lceil','\\u2309':'rceil','\\u230A':'lfloor','\\u230B':'rfloor','\\u2985':'lopar','\\u2986':'ropar','\\u298B':'lbrke','\\u298C':'rbrke','\\u298D':'lbrkslu','\\u298E':'rbrksld','\\u298F':'lbrksld','\\u2990':'rbrkslu','\\u2991':'langd','\\u2992':'rangd','\\u2993':'lparlt','\\u2994':'rpargt','\\u2995':'gtlPar','\\u2996':'ltrPar','\\u27E6':'lobrk','\\u27E7':'robrk','\\u27E8':'lang','\\u27E9':'rang','\\u27EA':'Lang','\\u27EB':'Rang','\\u27EC':'loang','\\u27ED':'roang','\\u2772':'lbbrk','\\u2773':'rbbrk','\\u2016':'Vert','\\xA7':'sect','\\xB6':'para','@':'commat','*':'ast','/':'sol','undefined':null,'&':'amp','#':'num','%':'percnt','\\u2030':'permil','\\u2031':'pertenk','\\u2020':'dagger','\\u2021':'Dagger','\\u2022':'bull','\\u2043':'hybull','\\u2032':'prime','\\u2033':'Prime','\\u2034':'tprime','\\u2057':'qprime','\\u2035':'bprime','\\u2041':'caret','`':'grave','\\xB4':'acute','\\u02DC':'tilde','^':'Hat','\\xAF':'macr','\\u02D8':'breve','\\u02D9':'dot','\\xA8':'die','\\u02DA':'ring','\\u02DD':'dblac','\\xB8':'cedil','\\u02DB':'ogon','\\u02C6':'circ','\\u02C7':'caron','\\xB0':'deg','\\xA9':'copy','\\xAE':'reg','\\u2117':'copysr','\\u2118':'wp','\\u211E':'rx','\\u2127':'mho','\\u2129':'iiota','\\u2190':'larr','\\u219A':'nlarr','\\u2192':'rarr','\\u219B':'nrarr','\\u2191':'uarr','\\u2193':'darr','\\u2194':'harr','\\u21AE':'nharr','\\u2195':'varr','\\u2196':'nwarr','\\u2197':'nearr','\\u2198':'searr','\\u2199':'swarr','\\u219D':'rarrw','\\u219D\\u0338':'nrarrw','\\u219E':'Larr','\\u219F':'Uarr','\\u21A0':'Rarr','\\u21A1':'Darr','\\u21A2':'larrtl','\\u21A3':'rarrtl','\\u21A4':'mapstoleft','\\u21A5':'mapstoup','\\u21A6':'map','\\u21A7':'mapstodown','\\u21A9':'larrhk','\\u21AA':'rarrhk','\\u21AB':'larrlp','\\u21AC':'rarrlp','\\u21AD':'harrw','\\u21B0':'lsh','\\u21B1':'rsh','\\u21B2':'ldsh','\\u21B3':'rdsh','\\u21B5':'crarr','\\u21B6':'cularr','\\u21B7':'curarr','\\u21BA':'olarr','\\u21BB':'orarr','\\u21BC':'lharu','\\u21BD':'lhard','\\u21BE':'uharr','\\u21BF':'uharl','\\u21C0':'rharu','\\u21C1':'rhard','\\u21C2':'dharr','\\u21C3':'dharl','\\u21C4':'rlarr','\\u21C5':'udarr','\\u21C6':'lrarr','\\u21C7':'llarr','\\u21C8':'uuarr','\\u21C9':'rrarr','\\u21CA':'ddarr','\\u21CB':'lrhar','\\u21CC':'rlhar','\\u21D0':'lArr','\\u21CD':'nlArr','\\u21D1':'uArr','\\u21D2':'rArr','\\u21CF':'nrArr','\\u21D3':'dArr','\\u21D4':'iff','\\u21CE':'nhArr','\\u21D5':'vArr','\\u21D6':'nwArr','\\u21D7':'neArr','\\u21D8':'seArr','\\u21D9':'swArr','\\u21DA':'lAarr','\\u21DB':'rAarr','\\u21DD':'zigrarr','\\u21E4':'larrb','\\u21E5':'rarrb','\\u21F5':'duarr','\\u21FD':'loarr','\\u21FE':'roarr','\\u21FF':'hoarr','\\u2200':'forall','\\u2201':'comp','\\u2202':'part','\\u2202\\u0338':'npart','\\u2203':'exist','\\u2204':'nexist','\\u2205':'empty','\\u2207':'Del','\\u2208':'in','\\u2209':'notin','\\u220B':'ni','\\u220C':'notni','\\u03F6':'bepsi','\\u220F':'prod','\\u2210':'coprod','\\u2211':'sum','+':'plus','\\xB1':'pm','\\xF7':'div','\\xD7':'times','<':'lt','\\u226E':'nlt','<\\u20D2':'nvlt','=':'equals','\\u2260':'ne','=\\u20E5':'bne','\\u2A75':'Equal','>':'gt','\\u226F':'ngt','>\\u20D2':'nvgt','\\xAC':'not','|':'vert','\\xA6':'brvbar','\\u2212':'minus','\\u2213':'mp','\\u2214':'plusdo','\\u2044':'frasl','\\u2216':'setmn','\\u2217':'lowast','\\u2218':'compfn','\\u221A':'Sqrt','\\u221D':'prop','\\u221E':'infin','\\u221F':'angrt','\\u2220':'ang','\\u2220\\u20D2':'nang','\\u2221':'angmsd','\\u2222':'angsph','\\u2223':'mid','\\u2224':'nmid','\\u2225':'par','\\u2226':'npar','\\u2227':'and','\\u2228':'or','\\u2229':'cap','\\u2229\\uFE00':'caps','\\u222A':'cup','\\u222A\\uFE00':'cups','\\u222B':'int','\\u222C':'Int','\\u222D':'tint','\\u2A0C':'qint','\\u222E':'oint','\\u222F':'Conint','\\u2230':'Cconint','\\u2231':'cwint','\\u2232':'cwconint','\\u2233':'awconint','\\u2234':'there4','\\u2235':'becaus','\\u2236':'ratio','\\u2237':'Colon','\\u2238':'minusd','\\u223A':'mDDot','\\u223B':'homtht','\\u223C':'sim','\\u2241':'nsim','\\u223C\\u20D2':'nvsim','\\u223D':'bsim','\\u223D\\u0331':'race','\\u223E':'ac','\\u223E\\u0333':'acE','\\u223F':'acd','\\u2240':'wr','\\u2242':'esim','\\u2242\\u0338':'nesim','\\u2243':'sime','\\u2244':'nsime','\\u2245':'cong','\\u2247':'ncong','\\u2246':'simne','\\u2248':'ap','\\u2249':'nap','\\u224A':'ape','\\u224B':'apid','\\u224B\\u0338':'napid','\\u224C':'bcong','\\u224D':'CupCap','\\u226D':'NotCupCap','\\u224D\\u20D2':'nvap','\\u224E':'bump','\\u224E\\u0338':'nbump','\\u224F':'bumpe','\\u224F\\u0338':'nbumpe','\\u2250':'doteq','\\u2250\\u0338':'nedot','\\u2251':'eDot','\\u2252':'efDot','\\u2253':'erDot','\\u2254':'colone','\\u2255':'ecolon','\\u2256':'ecir','\\u2257':'cire','\\u2259':'wedgeq','\\u225A':'veeeq','\\u225C':'trie','\\u225F':'equest','\\u2261':'equiv','\\u2262':'nequiv','\\u2261\\u20E5':'bnequiv','\\u2264':'le','\\u2270':'nle','\\u2264\\u20D2':'nvle','\\u2265':'ge','\\u2271':'nge','\\u2265\\u20D2':'nvge','\\u2266':'lE','\\u2266\\u0338':'nlE','\\u2267':'gE','\\u2267\\u0338':'ngE','\\u2268\\uFE00':'lvnE','\\u2268':'lnE','\\u2269':'gnE','\\u2269\\uFE00':'gvnE','\\u226A':'ll','\\u226A\\u0338':'nLtv','\\u226A\\u20D2':'nLt','\\u226B':'gg','\\u226B\\u0338':'nGtv','\\u226B\\u20D2':'nGt','\\u226C':'twixt','\\u2272':'lsim','\\u2274':'nlsim','\\u2273':'gsim','\\u2275':'ngsim','\\u2276':'lg','\\u2278':'ntlg','\\u2277':'gl','\\u2279':'ntgl','\\u227A':'pr','\\u2280':'npr','\\u227B':'sc','\\u2281':'nsc','\\u227C':'prcue','\\u22E0':'nprcue','\\u227D':'sccue','\\u22E1':'nsccue','\\u227E':'prsim','\\u227F':'scsim','\\u227F\\u0338':'NotSucceedsTilde','\\u2282':'sub','\\u2284':'nsub','\\u2282\\u20D2':'vnsub','\\u2283':'sup','\\u2285':'nsup','\\u2283\\u20D2':'vnsup','\\u2286':'sube','\\u2288':'nsube','\\u2287':'supe','\\u2289':'nsupe','\\u228A\\uFE00':'vsubne','\\u228A':'subne','\\u228B\\uFE00':'vsupne','\\u228B':'supne','\\u228D':'cupdot','\\u228E':'uplus','\\u228F':'sqsub','\\u228F\\u0338':'NotSquareSubset','\\u2290':'sqsup','\\u2290\\u0338':'NotSquareSuperset','\\u2291':'sqsube','\\u22E2':'nsqsube','\\u2292':'sqsupe','\\u22E3':'nsqsupe','\\u2293':'sqcap','\\u2293\\uFE00':'sqcaps','\\u2294':'sqcup','\\u2294\\uFE00':'sqcups','\\u2295':'oplus','\\u2296':'ominus','\\u2297':'otimes','\\u2298':'osol','\\u2299':'odot','\\u229A':'ocir','\\u229B':'oast','\\u229D':'odash','\\u229E':'plusb','\\u229F':'minusb','\\u22A0':'timesb','\\u22A1':'sdotb','\\u22A2':'vdash','\\u22AC':'nvdash','\\u22A3':'dashv','\\u22A4':'top','\\u22A5':'bot','\\u22A7':'models','\\u22A8':'vDash','\\u22AD':'nvDash','\\u22A9':'Vdash','\\u22AE':'nVdash','\\u22AA':'Vvdash','\\u22AB':'VDash','\\u22AF':'nVDash','\\u22B0':'prurel','\\u22B2':'vltri','\\u22EA':'nltri','\\u22B3':'vrtri','\\u22EB':'nrtri','\\u22B4':'ltrie','\\u22EC':'nltrie','\\u22B4\\u20D2':'nvltrie','\\u22B5':'rtrie','\\u22ED':'nrtrie','\\u22B5\\u20D2':'nvrtrie','\\u22B6':'origof','\\u22B7':'imof','\\u22B8':'mumap','\\u22B9':'hercon','\\u22BA':'intcal','\\u22BB':'veebar','\\u22BD':'barvee','\\u22BE':'angrtvb','\\u22BF':'lrtri','\\u22C0':'Wedge','\\u22C1':'Vee','\\u22C2':'xcap','\\u22C3':'xcup','\\u22C4':'diam','\\u22C5':'sdot','\\u22C6':'Star','\\u22C7':'divonx','\\u22C8':'bowtie','\\u22C9':'ltimes','\\u22CA':'rtimes','\\u22CB':'lthree','\\u22CC':'rthree','\\u22CD':'bsime','\\u22CE':'cuvee','\\u22CF':'cuwed','\\u22D0':'Sub','\\u22D1':'Sup','\\u22D2':'Cap','\\u22D3':'Cup','\\u22D4':'fork','\\u22D5':'epar','\\u22D6':'ltdot','\\u22D7':'gtdot','\\u22D8':'Ll','\\u22D8\\u0338':'nLl','\\u22D9':'Gg','\\u22D9\\u0338':'nGg','\\u22DA\\uFE00':'lesg','\\u22DA':'leg','\\u22DB':'gel','\\u22DB\\uFE00':'gesl','\\u22DE':'cuepr','\\u22DF':'cuesc','\\u22E6':'lnsim','\\u22E7':'gnsim','\\u22E8':'prnsim','\\u22E9':'scnsim','\\u22EE':'vellip','\\u22EF':'ctdot','\\u22F0':'utdot','\\u22F1':'dtdot','\\u22F2':'disin','\\u22F3':'isinsv','\\u22F4':'isins','\\u22F5':'isindot','\\u22F5\\u0338':'notindot','\\u22F6':'notinvc','\\u22F7':'notinvb','\\u22F9':'isinE','\\u22F9\\u0338':'notinE','\\u22FA':'nisd','\\u22FB':'xnis','\\u22FC':'nis','\\u22FD':'notnivc','\\u22FE':'notnivb','\\u2305':'barwed','\\u2306':'Barwed','\\u230C':'drcrop','\\u230D':'dlcrop','\\u230E':'urcrop','\\u230F':'ulcrop','\\u2310':'bnot','\\u2312':'profline','\\u2313':'profsurf','\\u2315':'telrec','\\u2316':'target','\\u231C':'ulcorn','\\u231D':'urcorn','\\u231E':'dlcorn','\\u231F':'drcorn','\\u2322':'frown','\\u2323':'smile','\\u232D':'cylcty','\\u232E':'profalar','\\u2336':'topbot','\\u233D':'ovbar','\\u233F':'solbar','\\u237C':'angzarr','\\u23B0':'lmoust','\\u23B1':'rmoust','\\u23B4':'tbrk','\\u23B5':'bbrk','\\u23B6':'bbrktbrk','\\u23DC':'OverParenthesis','\\u23DD':'UnderParenthesis','\\u23DE':'OverBrace','\\u23DF':'UnderBrace','\\u23E2':'trpezium','\\u23E7':'elinters','\\u2423':'blank','\\u2500':'boxh','\\u2502':'boxv','\\u250C':'boxdr','\\u2510':'boxdl','\\u2514':'boxur','\\u2518':'boxul','\\u251C':'boxvr','\\u2524':'boxvl','\\u252C':'boxhd','\\u2534':'boxhu','\\u253C':'boxvh','\\u2550':'boxH','\\u2551':'boxV','\\u2552':'boxdR','\\u2553':'boxDr','\\u2554':'boxDR','\\u2555':'boxdL','\\u2556':'boxDl','\\u2557':'boxDL','\\u2558':'boxuR','\\u2559':'boxUr','\\u255A':'boxUR','\\u255B':'boxuL','\\u255C':'boxUl','\\u255D':'boxUL','\\u255E':'boxvR','\\u255F':'boxVr','\\u2560':'boxVR','\\u2561':'boxvL','\\u2562':'boxVl','\\u2563':'boxVL','\\u2564':'boxHd','\\u2565':'boxhD','\\u2566':'boxHD','\\u2567':'boxHu','\\u2568':'boxhU','\\u2569':'boxHU','\\u256A':'boxvH','\\u256B':'boxVh','\\u256C':'boxVH','\\u2580':'uhblk','\\u2584':'lhblk','\\u2588':'block','\\u2591':'blk14','\\u2592':'blk12','\\u2593':'blk34','\\u25A1':'squ','\\u25AA':'squf','\\u25AB':'EmptyVerySmallSquare','\\u25AD':'rect','\\u25AE':'marker','\\u25B1':'fltns','\\u25B3':'xutri','\\u25B4':'utrif','\\u25B5':'utri','\\u25B8':'rtrif','\\u25B9':'rtri','\\u25BD':'xdtri','\\u25BE':'dtrif','\\u25BF':'dtri','\\u25C2':'ltrif','\\u25C3':'ltri','\\u25CA':'loz','\\u25CB':'cir','\\u25EC':'tridot','\\u25EF':'xcirc','\\u25F8':'ultri','\\u25F9':'urtri','\\u25FA':'lltri','\\u25FB':'EmptySmallSquare','\\u25FC':'FilledSmallSquare','\\u2605':'starf','\\u2606':'star','\\u260E':'phone','\\u2640':'female','\\u2642':'male','\\u2660':'spades','\\u2663':'clubs','\\u2665':'hearts','\\u2666':'diams','\\u266A':'sung','\\u2713':'check','\\u2717':'cross','\\u2720':'malt','\\u2736':'sext','\\u2758':'VerticalSeparator','\\u27C8':'bsolhsub','\\u27C9':'suphsol','\\u27F5':'xlarr','\\u27F6':'xrarr','\\u27F7':'xharr','\\u27F8':'xlArr','\\u27F9':'xrArr','\\u27FA':'xhArr','\\u27FC':'xmap','\\u27FF':'dzigrarr','\\u2902':'nvlArr','\\u2903':'nvrArr','\\u2904':'nvHarr','\\u2905':'Map','\\u290C':'lbarr','\\u290D':'rbarr','\\u290E':'lBarr','\\u290F':'rBarr','\\u2910':'RBarr','\\u2911':'DDotrahd','\\u2912':'UpArrowBar','\\u2913':'DownArrowBar','\\u2916':'Rarrtl','\\u2919':'latail','\\u291A':'ratail','\\u291B':'lAtail','\\u291C':'rAtail','\\u291D':'larrfs','\\u291E':'rarrfs','\\u291F':'larrbfs','\\u2920':'rarrbfs','\\u2923':'nwarhk','\\u2924':'nearhk','\\u2925':'searhk','\\u2926':'swarhk','\\u2927':'nwnear','\\u2928':'toea','\\u2929':'tosa','\\u292A':'swnwar','\\u2933':'rarrc','\\u2933\\u0338':'nrarrc','\\u2935':'cudarrr','\\u2936':'ldca','\\u2937':'rdca','\\u2938':'cudarrl','\\u2939':'larrpl','\\u293C':'curarrm','\\u293D':'cularrp','\\u2945':'rarrpl','\\u2948':'harrcir','\\u2949':'Uarrocir','\\u294A':'lurdshar','\\u294B':'ldrushar','\\u294E':'LeftRightVector','\\u294F':'RightUpDownVector','\\u2950':'DownLeftRightVector','\\u2951':'LeftUpDownVector','\\u2952':'LeftVectorBar','\\u2953':'RightVectorBar','\\u2954':'RightUpVectorBar','\\u2955':'RightDownVectorBar','\\u2956':'DownLeftVectorBar','\\u2957':'DownRightVectorBar','\\u2958':'LeftUpVectorBar','\\u2959':'LeftDownVectorBar','\\u295A':'LeftTeeVector','\\u295B':'RightTeeVector','\\u295C':'RightUpTeeVector','\\u295D':'RightDownTeeVector','\\u295E':'DownLeftTeeVector','\\u295F':'DownRightTeeVector','\\u2960':'LeftUpTeeVector','\\u2961':'LeftDownTeeVector','\\u2962':'lHar','\\u2963':'uHar','\\u2964':'rHar','\\u2965':'dHar','\\u2966':'luruhar','\\u2967':'ldrdhar','\\u2968':'ruluhar','\\u2969':'rdldhar','\\u296A':'lharul','\\u296B':'llhard','\\u296C':'rharul','\\u296D':'lrhard','\\u296E':'udhar','\\u296F':'duhar','\\u2970':'RoundImplies','\\u2971':'erarr','\\u2972':'simrarr','\\u2973':'larrsim','\\u2974':'rarrsim','\\u2975':'rarrap','\\u2976':'ltlarr','\\u2978':'gtrarr','\\u2979':'subrarr','\\u297B':'suplarr','\\u297C':'lfisht','\\u297D':'rfisht','\\u297E':'ufisht','\\u297F':'dfisht','\\u299A':'vzigzag','\\u299C':'vangrt','\\u299D':'angrtvbd','\\u29A4':'ange','\\u29A5':'range','\\u29A6':'dwangle','\\u29A7':'uwangle','\\u29A8':'angmsdaa','\\u29A9':'angmsdab','\\u29AA':'angmsdac','\\u29AB':'angmsdad','\\u29AC':'angmsdae','\\u29AD':'angmsdaf','\\u29AE':'angmsdag','\\u29AF':'angmsdah','\\u29B0':'bemptyv','\\u29B1':'demptyv','\\u29B2':'cemptyv','\\u29B3':'raemptyv','\\u29B4':'laemptyv','\\u29B5':'ohbar','\\u29B6':'omid','\\u29B7':'opar','\\u29B9':'operp','\\u29BB':'olcross','\\u29BC':'odsold','\\u29BE':'olcir','\\u29BF':'ofcir','\\u29C0':'olt','\\u29C1':'ogt','\\u29C2':'cirscir','\\u29C3':'cirE','\\u29C4':'solb','\\u29C5':'bsolb','\\u29C9':'boxbox','\\u29CD':'trisb','\\u29CE':'rtriltri','\\u29CF':'LeftTriangleBar','\\u29CF\\u0338':'NotLeftTriangleBar','\\u29D0':'RightTriangleBar','\\u29D0\\u0338':'NotRightTriangleBar','\\u29DC':'iinfin','\\u29DD':'infintie','\\u29DE':'nvinfin','\\u29E3':'eparsl','\\u29E4':'smeparsl','\\u29E5':'eqvparsl','\\u29EB':'lozf','\\u29F4':'RuleDelayed','\\u29F6':'dsol','\\u2A00':'xodot','\\u2A01':'xoplus','\\u2A02':'xotime','\\u2A04':'xuplus','\\u2A06':'xsqcup','\\u2A0D':'fpartint','\\u2A10':'cirfnint','\\u2A11':'awint','\\u2A12':'rppolint','\\u2A13':'scpolint','\\u2A14':'npolint','\\u2A15':'pointint','\\u2A16':'quatint','\\u2A17':'intlarhk','\\u2A22':'pluscir','\\u2A23':'plusacir','\\u2A24':'simplus','\\u2A25':'plusdu','\\u2A26':'plussim','\\u2A27':'plustwo','\\u2A29':'mcomma','\\u2A2A':'minusdu','\\u2A2D':'loplus','\\u2A2E':'roplus','\\u2A2F':'Cross','\\u2A30':'timesd','\\u2A31':'timesbar','\\u2A33':'smashp','\\u2A34':'lotimes','\\u2A35':'rotimes','\\u2A36':'otimesas','\\u2A37':'Otimes','\\u2A38':'odiv','\\u2A39':'triplus','\\u2A3A':'triminus','\\u2A3B':'tritime','\\u2A3C':'iprod','\\u2A3F':'amalg','\\u2A40':'capdot','\\u2A42':'ncup','\\u2A43':'ncap','\\u2A44':'capand','\\u2A45':'cupor','\\u2A46':'cupcap','\\u2A47':'capcup','\\u2A48':'cupbrcap','\\u2A49':'capbrcup','\\u2A4A':'cupcup','\\u2A4B':'capcap','\\u2A4C':'ccups','\\u2A4D':'ccaps','\\u2A50':'ccupssm','\\u2A53':'And','\\u2A54':'Or','\\u2A55':'andand','\\u2A56':'oror','\\u2A57':'orslope','\\u2A58':'andslope','\\u2A5A':'andv','\\u2A5B':'orv','\\u2A5C':'andd','\\u2A5D':'ord','\\u2A5F':'wedbar','\\u2A66':'sdote','\\u2A6A':'simdot','\\u2A6D':'congdot','\\u2A6D\\u0338':'ncongdot','\\u2A6E':'easter','\\u2A6F':'apacir','\\u2A70':'apE','\\u2A70\\u0338':'napE','\\u2A71':'eplus','\\u2A72':'pluse','\\u2A73':'Esim','\\u2A77':'eDDot','\\u2A78':'equivDD','\\u2A79':'ltcir','\\u2A7A':'gtcir','\\u2A7B':'ltquest','\\u2A7C':'gtquest','\\u2A7D':'les','\\u2A7D\\u0338':'nles','\\u2A7E':'ges','\\u2A7E\\u0338':'nges','\\u2A7F':'lesdot','\\u2A80':'gesdot','\\u2A81':'lesdoto','\\u2A82':'gesdoto','\\u2A83':'lesdotor','\\u2A84':'gesdotol','\\u2A85':'lap','\\u2A86':'gap','\\u2A87':'lne','\\u2A88':'gne','\\u2A89':'lnap','\\u2A8A':'gnap','\\u2A8B':'lEg','\\u2A8C':'gEl','\\u2A8D':'lsime','\\u2A8E':'gsime','\\u2A8F':'lsimg','\\u2A90':'gsiml','\\u2A91':'lgE','\\u2A92':'glE','\\u2A93':'lesges','\\u2A94':'gesles','\\u2A95':'els','\\u2A96':'egs','\\u2A97':'elsdot','\\u2A98':'egsdot','\\u2A99':'el','\\u2A9A':'eg','\\u2A9D':'siml','\\u2A9E':'simg','\\u2A9F':'simlE','\\u2AA0':'simgE','\\u2AA1':'LessLess','\\u2AA1\\u0338':'NotNestedLessLess','\\u2AA2':'GreaterGreater','\\u2AA2\\u0338':'NotNestedGreaterGreater','\\u2AA4':'glj','\\u2AA5':'gla','\\u2AA6':'ltcc','\\u2AA7':'gtcc','\\u2AA8':'lescc','\\u2AA9':'gescc','\\u2AAA':'smt','\\u2AAB':'lat','\\u2AAC':'smte','\\u2AAC\\uFE00':'smtes','\\u2AAD':'late','\\u2AAD\\uFE00':'lates','\\u2AAE':'bumpE','\\u2AAF':'pre','\\u2AAF\\u0338':'npre','\\u2AB0':'sce','\\u2AB0\\u0338':'nsce','\\u2AB3':'prE','\\u2AB4':'scE','\\u2AB5':'prnE','\\u2AB6':'scnE','\\u2AB7':'prap','\\u2AB8':'scap','\\u2AB9':'prnap','\\u2ABA':'scnap','\\u2ABB':'Pr','\\u2ABC':'Sc','\\u2ABD':'subdot','\\u2ABE':'supdot','\\u2ABF':'subplus','\\u2AC0':'supplus','\\u2AC1':'submult','\\u2AC2':'supmult','\\u2AC3':'subedot','\\u2AC4':'supedot','\\u2AC5':'subE','\\u2AC5\\u0338':'nsubE','\\u2AC6':'supE','\\u2AC6\\u0338':'nsupE','\\u2AC7':'subsim','\\u2AC8':'supsim','\\u2ACB\\uFE00':'vsubnE','\\u2ACB':'subnE','\\u2ACC\\uFE00':'vsupnE','\\u2ACC':'supnE','\\u2ACF':'csub','\\u2AD0':'csup','\\u2AD1':'csube','\\u2AD2':'csupe','\\u2AD3':'subsup','\\u2AD4':'supsub','\\u2AD5':'subsub','\\u2AD6':'supsup','\\u2AD7':'suphsub','\\u2AD8':'supdsub','\\u2AD9':'forkv','\\u2ADA':'topfork','\\u2ADB':'mlcp','\\u2AE4':'Dashv','\\u2AE6':'Vdashl','\\u2AE7':'Barv','\\u2AE8':'vBar','\\u2AE9':'vBarv','\\u2AEB':'Vbar','\\u2AEC':'Not','\\u2AED':'bNot','\\u2AEE':'rnmid','\\u2AEF':'cirmid','\\u2AF0':'midcir','\\u2AF1':'topcir','\\u2AF2':'nhpar','\\u2AF3':'parsim','\\u2AFD':'parsl','\\u2AFD\\u20E5':'nparsl','\\u266D':'flat','\\u266E':'natur','\\u266F':'sharp','\\xA4':'curren','\\xA2':'cent','$':'dollar','\\xA3':'pound','\\xA5':'yen','\\u20AC':'euro','\\xB9':'sup1','\\xBD':'half','\\u2153':'frac13','\\xBC':'frac14','\\u2155':'frac15','\\u2159':'frac16','\\u215B':'frac18','\\xB2':'sup2','\\u2154':'frac23','\\u2156':'frac25','\\xB3':'sup3','\\xBE':'frac34','\\u2157':'frac35','\\u215C':'frac38','\\u2158':'frac45','\\u215A':'frac56','\\u215D':'frac58','\\u215E':'frac78','\\uD835\\uDCB6':'ascr','\\uD835\\uDD52':'aopf','\\uD835\\uDD1E':'afr','\\uD835\\uDD38':'Aopf','\\uD835\\uDD04':'Afr','\\uD835\\uDC9C':'Ascr','\\xAA':'ordf','\\xE1':'aacute','\\xC1':'Aacute','\\xE0':'agrave','\\xC0':'Agrave','\\u0103':'abreve','\\u0102':'Abreve','\\xE2':'acirc','\\xC2':'Acirc','\\xE5':'aring','\\xC5':'angst','\\xE4':'auml','\\xC4':'Auml','\\xE3':'atilde','\\xC3':'Atilde','\\u0105':'aogon','\\u0104':'Aogon','\\u0101':'amacr','\\u0100':'Amacr','\\xE6':'aelig','\\xC6':'AElig','\\uD835\\uDCB7':'bscr','\\uD835\\uDD53':'bopf','\\uD835\\uDD1F':'bfr','\\uD835\\uDD39':'Bopf','\\u212C':'Bscr','\\uD835\\uDD05':'Bfr','\\uD835\\uDD20':'cfr','\\uD835\\uDCB8':'cscr','\\uD835\\uDD54':'copf','\\u212D':'Cfr','\\uD835\\uDC9E':'Cscr','\\u2102':'Copf','\\u0107':'cacute','\\u0106':'Cacute','\\u0109':'ccirc','\\u0108':'Ccirc','\\u010D':'ccaron','\\u010C':'Ccaron','\\u010B':'cdot','\\u010A':'Cdot','\\xE7':'ccedil','\\xC7':'Ccedil','\\u2105':'incare','\\uD835\\uDD21':'dfr','\\u2146':'dd','\\uD835\\uDD55':'dopf','\\uD835\\uDCB9':'dscr','\\uD835\\uDC9F':'Dscr','\\uD835\\uDD07':'Dfr','\\u2145':'DD','\\uD835\\uDD3B':'Dopf','\\u010F':'dcaron','\\u010E':'Dcaron','\\u0111':'dstrok','\\u0110':'Dstrok','\\xF0':'eth','\\xD0':'ETH','\\u2147':'ee','\\u212F':'escr','\\uD835\\uDD22':'efr','\\uD835\\uDD56':'eopf','\\u2130':'Escr','\\uD835\\uDD08':'Efr','\\uD835\\uDD3C':'Eopf','\\xE9':'eacute','\\xC9':'Eacute','\\xE8':'egrave','\\xC8':'Egrave','\\xEA':'ecirc','\\xCA':'Ecirc','\\u011B':'ecaron','\\u011A':'Ecaron','\\xEB':'euml','\\xCB':'Euml','\\u0117':'edot','\\u0116':'Edot','\\u0119':'eogon','\\u0118':'Eogon','\\u0113':'emacr','\\u0112':'Emacr','\\uD835\\uDD23':'ffr','\\uD835\\uDD57':'fopf','\\uD835\\uDCBB':'fscr','\\uD835\\uDD09':'Ffr','\\uD835\\uDD3D':'Fopf','\\u2131':'Fscr','\\uFB00':'fflig','\\uFB03':'ffilig','\\uFB04':'ffllig','\\uFB01':'filig','fj':'fjlig','\\uFB02':'fllig','\\u0192':'fnof','\\u210A':'gscr','\\uD835\\uDD58':'gopf','\\uD835\\uDD24':'gfr','\\uD835\\uDCA2':'Gscr','\\uD835\\uDD3E':'Gopf','\\uD835\\uDD0A':'Gfr','\\u01F5':'gacute','\\u011F':'gbreve','\\u011E':'Gbreve','\\u011D':'gcirc','\\u011C':'Gcirc','\\u0121':'gdot','\\u0120':'Gdot','\\u0122':'Gcedil','\\uD835\\uDD25':'hfr','\\u210E':'planckh','\\uD835\\uDCBD':'hscr','\\uD835\\uDD59':'hopf','\\u210B':'Hscr','\\u210C':'Hfr','\\u210D':'Hopf','\\u0125':'hcirc','\\u0124':'Hcirc','\\u210F':'hbar','\\u0127':'hstrok','\\u0126':'Hstrok','\\uD835\\uDD5A':'iopf','\\uD835\\uDD26':'ifr','\\uD835\\uDCBE':'iscr','\\u2148':'ii','\\uD835\\uDD40':'Iopf','\\u2110':'Iscr','\\u2111':'Im','\\xED':'iacute','\\xCD':'Iacute','\\xEC':'igrave','\\xCC':'Igrave','\\xEE':'icirc','\\xCE':'Icirc','\\xEF':'iuml','\\xCF':'Iuml','\\u0129':'itilde','\\u0128':'Itilde','\\u0130':'Idot','\\u012F':'iogon','\\u012E':'Iogon','\\u012B':'imacr','\\u012A':'Imacr','\\u0133':'ijlig','\\u0132':'IJlig','\\u0131':'imath','\\uD835\\uDCBF':'jscr','\\uD835\\uDD5B':'jopf','\\uD835\\uDD27':'jfr','\\uD835\\uDCA5':'Jscr','\\uD835\\uDD0D':'Jfr','\\uD835\\uDD41':'Jopf','\\u0135':'jcirc','\\u0134':'Jcirc','\\u0237':'jmath','\\uD835\\uDD5C':'kopf','\\uD835\\uDCC0':'kscr','\\uD835\\uDD28':'kfr','\\uD835\\uDCA6':'Kscr','\\uD835\\uDD42':'Kopf','\\uD835\\uDD0E':'Kfr','\\u0137':'kcedil','\\u0136':'Kcedil','\\uD835\\uDD29':'lfr','\\uD835\\uDCC1':'lscr','\\u2113':'ell','\\uD835\\uDD5D':'lopf','\\u2112':'Lscr','\\uD835\\uDD0F':'Lfr','\\uD835\\uDD43':'Lopf','\\u013A':'lacute','\\u0139':'Lacute','\\u013E':'lcaron','\\u013D':'Lcaron','\\u013C':'lcedil','\\u013B':'Lcedil','\\u0142':'lstrok','\\u0141':'Lstrok','\\u0140':'lmidot','\\u013F':'Lmidot','\\uD835\\uDD2A':'mfr','\\uD835\\uDD5E':'mopf','\\uD835\\uDCC2':'mscr','\\uD835\\uDD10':'Mfr','\\uD835\\uDD44':'Mopf','\\u2133':'Mscr','\\uD835\\uDD2B':'nfr','\\uD835\\uDD5F':'nopf','\\uD835\\uDCC3':'nscr','\\u2115':'Nopf','\\uD835\\uDCA9':'Nscr','\\uD835\\uDD11':'Nfr','\\u0144':'nacute','\\u0143':'Nacute','\\u0148':'ncaron','\\u0147':'Ncaron','\\xF1':'ntilde','\\xD1':'Ntilde','\\u0146':'ncedil','\\u0145':'Ncedil','\\u2116':'numero','\\u014B':'eng','\\u014A':'ENG','\\uD835\\uDD60':'oopf','\\uD835\\uDD2C':'ofr','\\u2134':'oscr','\\uD835\\uDCAA':'Oscr','\\uD835\\uDD12':'Ofr','\\uD835\\uDD46':'Oopf','\\xBA':'ordm','\\xF3':'oacute','\\xD3':'Oacute','\\xF2':'ograve','\\xD2':'Ograve','\\xF4':'ocirc','\\xD4':'Ocirc','\\xF6':'ouml','\\xD6':'Ouml','\\u0151':'odblac','\\u0150':'Odblac','\\xF5':'otilde','\\xD5':'Otilde','\\xF8':'oslash','\\xD8':'Oslash','\\u014D':'omacr','\\u014C':'Omacr','\\u0153':'oelig','\\u0152':'OElig','\\uD835\\uDD2D':'pfr','\\uD835\\uDCC5':'pscr','\\uD835\\uDD61':'popf','\\u2119':'Popf','\\uD835\\uDD13':'Pfr','\\uD835\\uDCAB':'Pscr','\\uD835\\uDD62':'qopf','\\uD835\\uDD2E':'qfr','\\uD835\\uDCC6':'qscr','\\uD835\\uDCAC':'Qscr','\\uD835\\uDD14':'Qfr','\\u211A':'Qopf','\\u0138':'kgreen','\\uD835\\uDD2F':'rfr','\\uD835\\uDD63':'ropf','\\uD835\\uDCC7':'rscr','\\u211B':'Rscr','\\u211C':'Re','\\u211D':'Ropf','\\u0155':'racute','\\u0154':'Racute','\\u0159':'rcaron','\\u0158':'Rcaron','\\u0157':'rcedil','\\u0156':'Rcedil','\\uD835\\uDD64':'sopf','\\uD835\\uDCC8':'sscr','\\uD835\\uDD30':'sfr','\\uD835\\uDD4A':'Sopf','\\uD835\\uDD16':'Sfr','\\uD835\\uDCAE':'Sscr','\\u24C8':'oS','\\u015B':'sacute','\\u015A':'Sacute','\\u015D':'scirc','\\u015C':'Scirc','\\u0161':'scaron','\\u0160':'Scaron','\\u015F':'scedil','\\u015E':'Scedil','\\xDF':'szlig','\\uD835\\uDD31':'tfr','\\uD835\\uDCC9':'tscr','\\uD835\\uDD65':'topf','\\uD835\\uDCAF':'Tscr','\\uD835\\uDD17':'Tfr','\\uD835\\uDD4B':'Topf','\\u0165':'tcaron','\\u0164':'Tcaron','\\u0163':'tcedil','\\u0162':'Tcedil','\\u2122':'trade','\\u0167':'tstrok','\\u0166':'Tstrok','\\uD835\\uDCCA':'uscr','\\uD835\\uDD66':'uopf','\\uD835\\uDD32':'ufr','\\uD835\\uDD4C':'Uopf','\\uD835\\uDD18':'Ufr','\\uD835\\uDCB0':'Uscr','\\xFA':'uacute','\\xDA':'Uacute','\\xF9':'ugrave','\\xD9':'Ugrave','\\u016D':'ubreve','\\u016C':'Ubreve','\\xFB':'ucirc','\\xDB':'Ucirc','\\u016F':'uring','\\u016E':'Uring','\\xFC':'uuml','\\xDC':'Uuml','\\u0171':'udblac','\\u0170':'Udblac','\\u0169':'utilde','\\u0168':'Utilde','\\u0173':'uogon','\\u0172':'Uogon','\\u016B':'umacr','\\u016A':'Umacr','\\uD835\\uDD33':'vfr','\\uD835\\uDD67':'vopf','\\uD835\\uDCCB':'vscr','\\uD835\\uDD19':'Vfr','\\uD835\\uDD4D':'Vopf','\\uD835\\uDCB1':'Vscr','\\uD835\\uDD68':'wopf','\\uD835\\uDCCC':'wscr','\\uD835\\uDD34':'wfr','\\uD835\\uDCB2':'Wscr','\\uD835\\uDD4E':'Wopf','\\uD835\\uDD1A':'Wfr','\\u0175':'wcirc','\\u0174':'Wcirc','\\uD835\\uDD35':'xfr','\\uD835\\uDCCD':'xscr','\\uD835\\uDD69':'xopf','\\uD835\\uDD4F':'Xopf','\\uD835\\uDD1B':'Xfr','\\uD835\\uDCB3':'Xscr','\\uD835\\uDD36':'yfr','\\uD835\\uDCCE':'yscr','\\uD835\\uDD6A':'yopf','\\uD835\\uDCB4':'Yscr','\\uD835\\uDD1C':'Yfr','\\uD835\\uDD50':'Yopf','\\xFD':'yacute','\\xDD':'Yacute','\\u0177':'ycirc','\\u0176':'Ycirc','\\xFF':'yuml','\\u0178':'Yuml','\\uD835\\uDCCF':'zscr','\\uD835\\uDD37':'zfr','\\uD835\\uDD6B':'zopf','\\u2128':'Zfr','\\u2124':'Zopf','\\uD835\\uDCB5':'Zscr','\\u017A':'zacute','\\u0179':'Zacute','\\u017E':'zcaron','\\u017D':'Zcaron','\\u017C':'zdot','\\u017B':'Zdot','\\u01B5':'imped','\\xFE':'thorn','\\xDE':'THORN','\\u0149':'napos','\\u03B1':'alpha','\\u0391':'Alpha','\\u03B2':'beta','\\u0392':'Beta','\\u03B3':'gamma','\\u0393':'Gamma','\\u03B4':'delta','\\u0394':'Delta','\\u03B5':'epsi','\\u03F5':'epsiv','\\u0395':'Epsilon','\\u03DD':'gammad','\\u03DC':'Gammad','\\u03B6':'zeta','\\u0396':'Zeta','\\u03B7':'eta','\\u0397':'Eta','\\u03B8':'theta','\\u03D1':'thetav','\\u0398':'Theta','\\u03B9':'iota','\\u0399':'Iota','\\u03BA':'kappa','\\u03F0':'kappav','\\u039A':'Kappa','\\u03BB':'lambda','\\u039B':'Lambda','\\u03BC':'mu','\\xB5':'micro','\\u039C':'Mu','\\u03BD':'nu','\\u039D':'Nu','\\u03BE':'xi','\\u039E':'Xi','\\u03BF':'omicron','\\u039F':'Omicron','\\u03C0':'pi','\\u03D6':'piv','\\u03A0':'Pi','\\u03C1':'rho','\\u03F1':'rhov','\\u03A1':'Rho','\\u03C3':'sigma','\\u03A3':'Sigma','\\u03C2':'sigmaf','\\u03C4':'tau','\\u03A4':'Tau','\\u03C5':'upsi','\\u03A5':'Upsilon','\\u03D2':'Upsi','\\u03C6':'phi','\\u03D5':'phiv','\\u03A6':'Phi','\\u03C7':'chi','\\u03A7':'Chi','\\u03C8':'psi','\\u03A8':'Psi','\\u03C9':'omega','\\u03A9':'ohm','\\u0430':'acy','\\u0410':'Acy','\\u0431':'bcy','\\u0411':'Bcy','\\u0432':'vcy','\\u0412':'Vcy','\\u0433':'gcy','\\u0413':'Gcy','\\u0453':'gjcy','\\u0403':'GJcy','\\u0434':'dcy','\\u0414':'Dcy','\\u0452':'djcy','\\u0402':'DJcy','\\u0435':'iecy','\\u0415':'IEcy','\\u0451':'iocy','\\u0401':'IOcy','\\u0454':'jukcy','\\u0404':'Jukcy','\\u0436':'zhcy','\\u0416':'ZHcy','\\u0437':'zcy','\\u0417':'Zcy','\\u0455':'dscy','\\u0405':'DScy','\\u0438':'icy','\\u0418':'Icy','\\u0456':'iukcy','\\u0406':'Iukcy','\\u0457':'yicy','\\u0407':'YIcy','\\u0439':'jcy','\\u0419':'Jcy','\\u0458':'jsercy','\\u0408':'Jsercy','\\u043A':'kcy','\\u041A':'Kcy','\\u045C':'kjcy','\\u040C':'KJcy','\\u043B':'lcy','\\u041B':'Lcy','\\u0459':'ljcy','\\u0409':'LJcy','\\u043C':'mcy','\\u041C':'Mcy','\\u043D':'ncy','\\u041D':'Ncy','\\u045A':'njcy','\\u040A':'NJcy','\\u043E':'ocy','\\u041E':'Ocy','\\u043F':'pcy','\\u041F':'Pcy','\\u0440':'rcy','\\u0420':'Rcy','\\u0441':'scy','\\u0421':'Scy','\\u0442':'tcy','\\u0422':'Tcy','\\u045B':'tshcy','\\u040B':'TSHcy','\\u0443':'ucy','\\u0423':'Ucy','\\u045E':'ubrcy','\\u040E':'Ubrcy','\\u0444':'fcy','\\u0424':'Fcy','\\u0445':'khcy','\\u0425':'KHcy','\\u0446':'tscy','\\u0426':'TScy','\\u0447':'chcy','\\u0427':'CHcy','\\u045F':'dzcy','\\u040F':'DZcy','\\u0448':'shcy','\\u0428':'SHcy','\\u0449':'shchcy','\\u0429':'SHCHcy','\\u044A':'hardcy','\\u042A':'HARDcy','\\u044B':'ycy','\\u042B':'Ycy','\\u044C':'softcy','\\u042C':'SOFTcy','\\u044D':'ecy','\\u042D':'Ecy','\\u044E':'yucy','\\u042E':'YUcy','\\u044F':'yacy','\\u042F':'YAcy','\\u2135':'aleph','\\u2136':'beth','\\u2137':'gimel','\\u2138':'daleth'};\r\n\r\n\tvar regexEscape = /[\"&'<>`]/g;\r\n\tvar escapeMap = {\r\n\t\t'\"': '&quot;',\r\n\t\t'&': '&amp;',\r\n\t\t'\\'': '&#x27;',\r\n\t\t'<': '&lt;',\r\n\t\t// See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\r\n\t\t// following is not strictly necessary unless it’s part of a tag or an\r\n\t\t// unquoted attribute value. We’re only escaping it to support those\r\n\t\t// situations, and for XML support.\r\n\t\t'>': '&gt;',\r\n\t\t// In Internet Explorer ≤ 8, the backtick character can be used\r\n\t\t// to break out of (un)quoted attribute values or HTML comments.\r\n\t\t// See http://html5sec.org/#102, http://html5sec.org/#108, and\r\n\t\t// http://html5sec.org/#133.\r\n\t\t'`': '&#x60;'\r\n\t};\r\n\r\n\tvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;\r\n\tvar regexInvalidRawCodePoint = /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\r\n\tvar regexDecode = /&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)([=a-zA-Z0-9])?/g;\r\n\tvar decodeMap = {'aacute':'\\xE1','Aacute':'\\xC1','abreve':'\\u0103','Abreve':'\\u0102','ac':'\\u223E','acd':'\\u223F','acE':'\\u223E\\u0333','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','acy':'\\u0430','Acy':'\\u0410','aelig':'\\xE6','AElig':'\\xC6','af':'\\u2061','afr':'\\uD835\\uDD1E','Afr':'\\uD835\\uDD04','agrave':'\\xE0','Agrave':'\\xC0','alefsym':'\\u2135','aleph':'\\u2135','alpha':'\\u03B1','Alpha':'\\u0391','amacr':'\\u0101','Amacr':'\\u0100','amalg':'\\u2A3F','amp':'&','AMP':'&','and':'\\u2227','And':'\\u2A53','andand':'\\u2A55','andd':'\\u2A5C','andslope':'\\u2A58','andv':'\\u2A5A','ang':'\\u2220','ange':'\\u29A4','angle':'\\u2220','angmsd':'\\u2221','angmsdaa':'\\u29A8','angmsdab':'\\u29A9','angmsdac':'\\u29AA','angmsdad':'\\u29AB','angmsdae':'\\u29AC','angmsdaf':'\\u29AD','angmsdag':'\\u29AE','angmsdah':'\\u29AF','angrt':'\\u221F','angrtvb':'\\u22BE','angrtvbd':'\\u299D','angsph':'\\u2222','angst':'\\xC5','angzarr':'\\u237C','aogon':'\\u0105','Aogon':'\\u0104','aopf':'\\uD835\\uDD52','Aopf':'\\uD835\\uDD38','ap':'\\u2248','apacir':'\\u2A6F','ape':'\\u224A','apE':'\\u2A70','apid':'\\u224B','apos':'\\'','ApplyFunction':'\\u2061','approx':'\\u2248','approxeq':'\\u224A','aring':'\\xE5','Aring':'\\xC5','ascr':'\\uD835\\uDCB6','Ascr':'\\uD835\\uDC9C','Assign':'\\u2254','ast':'*','asymp':'\\u2248','asympeq':'\\u224D','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','awconint':'\\u2233','awint':'\\u2A11','backcong':'\\u224C','backepsilon':'\\u03F6','backprime':'\\u2035','backsim':'\\u223D','backsimeq':'\\u22CD','Backslash':'\\u2216','Barv':'\\u2AE7','barvee':'\\u22BD','barwed':'\\u2305','Barwed':'\\u2306','barwedge':'\\u2305','bbrk':'\\u23B5','bbrktbrk':'\\u23B6','bcong':'\\u224C','bcy':'\\u0431','Bcy':'\\u0411','bdquo':'\\u201E','becaus':'\\u2235','because':'\\u2235','Because':'\\u2235','bemptyv':'\\u29B0','bepsi':'\\u03F6','bernou':'\\u212C','Bernoullis':'\\u212C','beta':'\\u03B2','Beta':'\\u0392','beth':'\\u2136','between':'\\u226C','bfr':'\\uD835\\uDD1F','Bfr':'\\uD835\\uDD05','bigcap':'\\u22C2','bigcirc':'\\u25EF','bigcup':'\\u22C3','bigodot':'\\u2A00','bigoplus':'\\u2A01','bigotimes':'\\u2A02','bigsqcup':'\\u2A06','bigstar':'\\u2605','bigtriangledown':'\\u25BD','bigtriangleup':'\\u25B3','biguplus':'\\u2A04','bigvee':'\\u22C1','bigwedge':'\\u22C0','bkarow':'\\u290D','blacklozenge':'\\u29EB','blacksquare':'\\u25AA','blacktriangle':'\\u25B4','blacktriangledown':'\\u25BE','blacktriangleleft':'\\u25C2','blacktriangleright':'\\u25B8','blank':'\\u2423','blk12':'\\u2592','blk14':'\\u2591','blk34':'\\u2593','block':'\\u2588','bne':'=\\u20E5','bnequiv':'\\u2261\\u20E5','bnot':'\\u2310','bNot':'\\u2AED','bopf':'\\uD835\\uDD53','Bopf':'\\uD835\\uDD39','bot':'\\u22A5','bottom':'\\u22A5','bowtie':'\\u22C8','boxbox':'\\u29C9','boxdl':'\\u2510','boxdL':'\\u2555','boxDl':'\\u2556','boxDL':'\\u2557','boxdr':'\\u250C','boxdR':'\\u2552','boxDr':'\\u2553','boxDR':'\\u2554','boxh':'\\u2500','boxH':'\\u2550','boxhd':'\\u252C','boxhD':'\\u2565','boxHd':'\\u2564','boxHD':'\\u2566','boxhu':'\\u2534','boxhU':'\\u2568','boxHu':'\\u2567','boxHU':'\\u2569','boxminus':'\\u229F','boxplus':'\\u229E','boxtimes':'\\u22A0','boxul':'\\u2518','boxuL':'\\u255B','boxUl':'\\u255C','boxUL':'\\u255D','boxur':'\\u2514','boxuR':'\\u2558','boxUr':'\\u2559','boxUR':'\\u255A','boxv':'\\u2502','boxV':'\\u2551','boxvh':'\\u253C','boxvH':'\\u256A','boxVh':'\\u256B','boxVH':'\\u256C','boxvl':'\\u2524','boxvL':'\\u2561','boxVl':'\\u2562','boxVL':'\\u2563','boxvr':'\\u251C','boxvR':'\\u255E','boxVr':'\\u255F','boxVR':'\\u2560','bprime':'\\u2035','breve':'\\u02D8','Breve':'\\u02D8','brvbar':'\\xA6','bscr':'\\uD835\\uDCB7','Bscr':'\\u212C','bsemi':'\\u204F','bsim':'\\u223D','bsime':'\\u22CD','bsol':'\\\\','bsolb':'\\u29C5','bsolhsub':'\\u27C8','bull':'\\u2022','bullet':'\\u2022','bump':'\\u224E','bumpe':'\\u224F','bumpE':'\\u2AAE','bumpeq':'\\u224F','Bumpeq':'\\u224E','cacute':'\\u0107','Cacute':'\\u0106','cap':'\\u2229','Cap':'\\u22D2','capand':'\\u2A44','capbrcup':'\\u2A49','capcap':'\\u2A4B','capcup':'\\u2A47','capdot':'\\u2A40','CapitalDifferentialD':'\\u2145','caps':'\\u2229\\uFE00','caret':'\\u2041','caron':'\\u02C7','Cayleys':'\\u212D','ccaps':'\\u2A4D','ccaron':'\\u010D','Ccaron':'\\u010C','ccedil':'\\xE7','Ccedil':'\\xC7','ccirc':'\\u0109','Ccirc':'\\u0108','Cconint':'\\u2230','ccups':'\\u2A4C','ccupssm':'\\u2A50','cdot':'\\u010B','Cdot':'\\u010A','cedil':'\\xB8','Cedilla':'\\xB8','cemptyv':'\\u29B2','cent':'\\xA2','centerdot':'\\xB7','CenterDot':'\\xB7','cfr':'\\uD835\\uDD20','Cfr':'\\u212D','chcy':'\\u0447','CHcy':'\\u0427','check':'\\u2713','checkmark':'\\u2713','chi':'\\u03C7','Chi':'\\u03A7','cir':'\\u25CB','circ':'\\u02C6','circeq':'\\u2257','circlearrowleft':'\\u21BA','circlearrowright':'\\u21BB','circledast':'\\u229B','circledcirc':'\\u229A','circleddash':'\\u229D','CircleDot':'\\u2299','circledR':'\\xAE','circledS':'\\u24C8','CircleMinus':'\\u2296','CirclePlus':'\\u2295','CircleTimes':'\\u2297','cire':'\\u2257','cirE':'\\u29C3','cirfnint':'\\u2A10','cirmid':'\\u2AEF','cirscir':'\\u29C2','ClockwiseContourIntegral':'\\u2232','CloseCurlyDoubleQuote':'\\u201D','CloseCurlyQuote':'\\u2019','clubs':'\\u2663','clubsuit':'\\u2663','colon':':','Colon':'\\u2237','colone':'\\u2254','Colone':'\\u2A74','coloneq':'\\u2254','comma':',','commat':'@','comp':'\\u2201','compfn':'\\u2218','complement':'\\u2201','complexes':'\\u2102','cong':'\\u2245','congdot':'\\u2A6D','Congruent':'\\u2261','conint':'\\u222E','Conint':'\\u222F','ContourIntegral':'\\u222E','copf':'\\uD835\\uDD54','Copf':'\\u2102','coprod':'\\u2210','Coproduct':'\\u2210','copy':'\\xA9','COPY':'\\xA9','copysr':'\\u2117','CounterClockwiseContourIntegral':'\\u2233','crarr':'\\u21B5','cross':'\\u2717','Cross':'\\u2A2F','cscr':'\\uD835\\uDCB8','Cscr':'\\uD835\\uDC9E','csub':'\\u2ACF','csube':'\\u2AD1','csup':'\\u2AD0','csupe':'\\u2AD2','ctdot':'\\u22EF','cudarrl':'\\u2938','cudarrr':'\\u2935','cuepr':'\\u22DE','cuesc':'\\u22DF','cularr':'\\u21B6','cularrp':'\\u293D','cup':'\\u222A','Cup':'\\u22D3','cupbrcap':'\\u2A48','cupcap':'\\u2A46','CupCap':'\\u224D','cupcup':'\\u2A4A','cupdot':'\\u228D','cupor':'\\u2A45','cups':'\\u222A\\uFE00','curarr':'\\u21B7','curarrm':'\\u293C','curlyeqprec':'\\u22DE','curlyeqsucc':'\\u22DF','curlyvee':'\\u22CE','curlywedge':'\\u22CF','curren':'\\xA4','curvearrowleft':'\\u21B6','curvearrowright':'\\u21B7','cuvee':'\\u22CE','cuwed':'\\u22CF','cwconint':'\\u2232','cwint':'\\u2231','cylcty':'\\u232D','dagger':'\\u2020','Dagger':'\\u2021','daleth':'\\u2138','darr':'\\u2193','dArr':'\\u21D3','Darr':'\\u21A1','dash':'\\u2010','dashv':'\\u22A3','Dashv':'\\u2AE4','dbkarow':'\\u290F','dblac':'\\u02DD','dcaron':'\\u010F','Dcaron':'\\u010E','dcy':'\\u0434','Dcy':'\\u0414','dd':'\\u2146','DD':'\\u2145','ddagger':'\\u2021','ddarr':'\\u21CA','DDotrahd':'\\u2911','ddotseq':'\\u2A77','deg':'\\xB0','Del':'\\u2207','delta':'\\u03B4','Delta':'\\u0394','demptyv':'\\u29B1','dfisht':'\\u297F','dfr':'\\uD835\\uDD21','Dfr':'\\uD835\\uDD07','dHar':'\\u2965','dharl':'\\u21C3','dharr':'\\u21C2','DiacriticalAcute':'\\xB4','DiacriticalDot':'\\u02D9','DiacriticalDoubleAcute':'\\u02DD','DiacriticalGrave':'`','DiacriticalTilde':'\\u02DC','diam':'\\u22C4','diamond':'\\u22C4','Diamond':'\\u22C4','diamondsuit':'\\u2666','diams':'\\u2666','die':'\\xA8','DifferentialD':'\\u2146','digamma':'\\u03DD','disin':'\\u22F2','div':'\\xF7','divide':'\\xF7','divideontimes':'\\u22C7','divonx':'\\u22C7','djcy':'\\u0452','DJcy':'\\u0402','dlcorn':'\\u231E','dlcrop':'\\u230D','dollar':'$','dopf':'\\uD835\\uDD55','Dopf':'\\uD835\\uDD3B','dot':'\\u02D9','Dot':'\\xA8','DotDot':'\\u20DC','doteq':'\\u2250','doteqdot':'\\u2251','DotEqual':'\\u2250','dotminus':'\\u2238','dotplus':'\\u2214','dotsquare':'\\u22A1','doublebarwedge':'\\u2306','DoubleContourIntegral':'\\u222F','DoubleDot':'\\xA8','DoubleDownArrow':'\\u21D3','DoubleLeftArrow':'\\u21D0','DoubleLeftRightArrow':'\\u21D4','DoubleLeftTee':'\\u2AE4','DoubleLongLeftArrow':'\\u27F8','DoubleLongLeftRightArrow':'\\u27FA','DoubleLongRightArrow':'\\u27F9','DoubleRightArrow':'\\u21D2','DoubleRightTee':'\\u22A8','DoubleUpArrow':'\\u21D1','DoubleUpDownArrow':'\\u21D5','DoubleVerticalBar':'\\u2225','downarrow':'\\u2193','Downarrow':'\\u21D3','DownArrow':'\\u2193','DownArrowBar':'\\u2913','DownArrowUpArrow':'\\u21F5','DownBreve':'\\u0311','downdownarrows':'\\u21CA','downharpoonleft':'\\u21C3','downharpoonright':'\\u21C2','DownLeftRightVector':'\\u2950','DownLeftTeeVector':'\\u295E','DownLeftVector':'\\u21BD','DownLeftVectorBar':'\\u2956','DownRightTeeVector':'\\u295F','DownRightVector':'\\u21C1','DownRightVectorBar':'\\u2957','DownTee':'\\u22A4','DownTeeArrow':'\\u21A7','drbkarow':'\\u2910','drcorn':'\\u231F','drcrop':'\\u230C','dscr':'\\uD835\\uDCB9','Dscr':'\\uD835\\uDC9F','dscy':'\\u0455','DScy':'\\u0405','dsol':'\\u29F6','dstrok':'\\u0111','Dstrok':'\\u0110','dtdot':'\\u22F1','dtri':'\\u25BF','dtrif':'\\u25BE','duarr':'\\u21F5','duhar':'\\u296F','dwangle':'\\u29A6','dzcy':'\\u045F','DZcy':'\\u040F','dzigrarr':'\\u27FF','eacute':'\\xE9','Eacute':'\\xC9','easter':'\\u2A6E','ecaron':'\\u011B','Ecaron':'\\u011A','ecir':'\\u2256','ecirc':'\\xEA','Ecirc':'\\xCA','ecolon':'\\u2255','ecy':'\\u044D','Ecy':'\\u042D','eDDot':'\\u2A77','edot':'\\u0117','eDot':'\\u2251','Edot':'\\u0116','ee':'\\u2147','efDot':'\\u2252','efr':'\\uD835\\uDD22','Efr':'\\uD835\\uDD08','eg':'\\u2A9A','egrave':'\\xE8','Egrave':'\\xC8','egs':'\\u2A96','egsdot':'\\u2A98','el':'\\u2A99','Element':'\\u2208','elinters':'\\u23E7','ell':'\\u2113','els':'\\u2A95','elsdot':'\\u2A97','emacr':'\\u0113','Emacr':'\\u0112','empty':'\\u2205','emptyset':'\\u2205','EmptySmallSquare':'\\u25FB','emptyv':'\\u2205','EmptyVerySmallSquare':'\\u25AB','emsp':'\\u2003','emsp13':'\\u2004','emsp14':'\\u2005','eng':'\\u014B','ENG':'\\u014A','ensp':'\\u2002','eogon':'\\u0119','Eogon':'\\u0118','eopf':'\\uD835\\uDD56','Eopf':'\\uD835\\uDD3C','epar':'\\u22D5','eparsl':'\\u29E3','eplus':'\\u2A71','epsi':'\\u03B5','epsilon':'\\u03B5','Epsilon':'\\u0395','epsiv':'\\u03F5','eqcirc':'\\u2256','eqcolon':'\\u2255','eqsim':'\\u2242','eqslantgtr':'\\u2A96','eqslantless':'\\u2A95','Equal':'\\u2A75','equals':'=','EqualTilde':'\\u2242','equest':'\\u225F','Equilibrium':'\\u21CC','equiv':'\\u2261','equivDD':'\\u2A78','eqvparsl':'\\u29E5','erarr':'\\u2971','erDot':'\\u2253','escr':'\\u212F','Escr':'\\u2130','esdot':'\\u2250','esim':'\\u2242','Esim':'\\u2A73','eta':'\\u03B7','Eta':'\\u0397','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','euro':'\\u20AC','excl':'!','exist':'\\u2203','Exists':'\\u2203','expectation':'\\u2130','exponentiale':'\\u2147','ExponentialE':'\\u2147','fallingdotseq':'\\u2252','fcy':'\\u0444','Fcy':'\\u0424','female':'\\u2640','ffilig':'\\uFB03','fflig':'\\uFB00','ffllig':'\\uFB04','ffr':'\\uD835\\uDD23','Ffr':'\\uD835\\uDD09','filig':'\\uFB01','FilledSmallSquare':'\\u25FC','FilledVerySmallSquare':'\\u25AA','fjlig':'fj','flat':'\\u266D','fllig':'\\uFB02','fltns':'\\u25B1','fnof':'\\u0192','fopf':'\\uD835\\uDD57','Fopf':'\\uD835\\uDD3D','forall':'\\u2200','ForAll':'\\u2200','fork':'\\u22D4','forkv':'\\u2AD9','Fouriertrf':'\\u2131','fpartint':'\\u2A0D','frac12':'\\xBD','frac13':'\\u2153','frac14':'\\xBC','frac15':'\\u2155','frac16':'\\u2159','frac18':'\\u215B','frac23':'\\u2154','frac25':'\\u2156','frac34':'\\xBE','frac35':'\\u2157','frac38':'\\u215C','frac45':'\\u2158','frac56':'\\u215A','frac58':'\\u215D','frac78':'\\u215E','frasl':'\\u2044','frown':'\\u2322','fscr':'\\uD835\\uDCBB','Fscr':'\\u2131','gacute':'\\u01F5','gamma':'\\u03B3','Gamma':'\\u0393','gammad':'\\u03DD','Gammad':'\\u03DC','gap':'\\u2A86','gbreve':'\\u011F','Gbreve':'\\u011E','Gcedil':'\\u0122','gcirc':'\\u011D','Gcirc':'\\u011C','gcy':'\\u0433','Gcy':'\\u0413','gdot':'\\u0121','Gdot':'\\u0120','ge':'\\u2265','gE':'\\u2267','gel':'\\u22DB','gEl':'\\u2A8C','geq':'\\u2265','geqq':'\\u2267','geqslant':'\\u2A7E','ges':'\\u2A7E','gescc':'\\u2AA9','gesdot':'\\u2A80','gesdoto':'\\u2A82','gesdotol':'\\u2A84','gesl':'\\u22DB\\uFE00','gesles':'\\u2A94','gfr':'\\uD835\\uDD24','Gfr':'\\uD835\\uDD0A','gg':'\\u226B','Gg':'\\u22D9','ggg':'\\u22D9','gimel':'\\u2137','gjcy':'\\u0453','GJcy':'\\u0403','gl':'\\u2277','gla':'\\u2AA5','glE':'\\u2A92','glj':'\\u2AA4','gnap':'\\u2A8A','gnapprox':'\\u2A8A','gne':'\\u2A88','gnE':'\\u2269','gneq':'\\u2A88','gneqq':'\\u2269','gnsim':'\\u22E7','gopf':'\\uD835\\uDD58','Gopf':'\\uD835\\uDD3E','grave':'`','GreaterEqual':'\\u2265','GreaterEqualLess':'\\u22DB','GreaterFullEqual':'\\u2267','GreaterGreater':'\\u2AA2','GreaterLess':'\\u2277','GreaterSlantEqual':'\\u2A7E','GreaterTilde':'\\u2273','gscr':'\\u210A','Gscr':'\\uD835\\uDCA2','gsim':'\\u2273','gsime':'\\u2A8E','gsiml':'\\u2A90','gt':'>','Gt':'\\u226B','GT':'>','gtcc':'\\u2AA7','gtcir':'\\u2A7A','gtdot':'\\u22D7','gtlPar':'\\u2995','gtquest':'\\u2A7C','gtrapprox':'\\u2A86','gtrarr':'\\u2978','gtrdot':'\\u22D7','gtreqless':'\\u22DB','gtreqqless':'\\u2A8C','gtrless':'\\u2277','gtrsim':'\\u2273','gvertneqq':'\\u2269\\uFE00','gvnE':'\\u2269\\uFE00','Hacek':'\\u02C7','hairsp':'\\u200A','half':'\\xBD','hamilt':'\\u210B','hardcy':'\\u044A','HARDcy':'\\u042A','harr':'\\u2194','hArr':'\\u21D4','harrcir':'\\u2948','harrw':'\\u21AD','Hat':'^','hbar':'\\u210F','hcirc':'\\u0125','Hcirc':'\\u0124','hearts':'\\u2665','heartsuit':'\\u2665','hellip':'\\u2026','hercon':'\\u22B9','hfr':'\\uD835\\uDD25','Hfr':'\\u210C','HilbertSpace':'\\u210B','hksearow':'\\u2925','hkswarow':'\\u2926','hoarr':'\\u21FF','homtht':'\\u223B','hookleftarrow':'\\u21A9','hookrightarrow':'\\u21AA','hopf':'\\uD835\\uDD59','Hopf':'\\u210D','horbar':'\\u2015','HorizontalLine':'\\u2500','hscr':'\\uD835\\uDCBD','Hscr':'\\u210B','hslash':'\\u210F','hstrok':'\\u0127','Hstrok':'\\u0126','HumpDownHump':'\\u224E','HumpEqual':'\\u224F','hybull':'\\u2043','hyphen':'\\u2010','iacute':'\\xED','Iacute':'\\xCD','ic':'\\u2063','icirc':'\\xEE','Icirc':'\\xCE','icy':'\\u0438','Icy':'\\u0418','Idot':'\\u0130','iecy':'\\u0435','IEcy':'\\u0415','iexcl':'\\xA1','iff':'\\u21D4','ifr':'\\uD835\\uDD26','Ifr':'\\u2111','igrave':'\\xEC','Igrave':'\\xCC','ii':'\\u2148','iiiint':'\\u2A0C','iiint':'\\u222D','iinfin':'\\u29DC','iiota':'\\u2129','ijlig':'\\u0133','IJlig':'\\u0132','Im':'\\u2111','imacr':'\\u012B','Imacr':'\\u012A','image':'\\u2111','ImaginaryI':'\\u2148','imagline':'\\u2110','imagpart':'\\u2111','imath':'\\u0131','imof':'\\u22B7','imped':'\\u01B5','Implies':'\\u21D2','in':'\\u2208','incare':'\\u2105','infin':'\\u221E','infintie':'\\u29DD','inodot':'\\u0131','int':'\\u222B','Int':'\\u222C','intcal':'\\u22BA','integers':'\\u2124','Integral':'\\u222B','intercal':'\\u22BA','Intersection':'\\u22C2','intlarhk':'\\u2A17','intprod':'\\u2A3C','InvisibleComma':'\\u2063','InvisibleTimes':'\\u2062','iocy':'\\u0451','IOcy':'\\u0401','iogon':'\\u012F','Iogon':'\\u012E','iopf':'\\uD835\\uDD5A','Iopf':'\\uD835\\uDD40','iota':'\\u03B9','Iota':'\\u0399','iprod':'\\u2A3C','iquest':'\\xBF','iscr':'\\uD835\\uDCBE','Iscr':'\\u2110','isin':'\\u2208','isindot':'\\u22F5','isinE':'\\u22F9','isins':'\\u22F4','isinsv':'\\u22F3','isinv':'\\u2208','it':'\\u2062','itilde':'\\u0129','Itilde':'\\u0128','iukcy':'\\u0456','Iukcy':'\\u0406','iuml':'\\xEF','Iuml':'\\xCF','jcirc':'\\u0135','Jcirc':'\\u0134','jcy':'\\u0439','Jcy':'\\u0419','jfr':'\\uD835\\uDD27','Jfr':'\\uD835\\uDD0D','jmath':'\\u0237','jopf':'\\uD835\\uDD5B','Jopf':'\\uD835\\uDD41','jscr':'\\uD835\\uDCBF','Jscr':'\\uD835\\uDCA5','jsercy':'\\u0458','Jsercy':'\\u0408','jukcy':'\\u0454','Jukcy':'\\u0404','kappa':'\\u03BA','Kappa':'\\u039A','kappav':'\\u03F0','kcedil':'\\u0137','Kcedil':'\\u0136','kcy':'\\u043A','Kcy':'\\u041A','kfr':'\\uD835\\uDD28','Kfr':'\\uD835\\uDD0E','kgreen':'\\u0138','khcy':'\\u0445','KHcy':'\\u0425','kjcy':'\\u045C','KJcy':'\\u040C','kopf':'\\uD835\\uDD5C','Kopf':'\\uD835\\uDD42','kscr':'\\uD835\\uDCC0','Kscr':'\\uD835\\uDCA6','lAarr':'\\u21DA','lacute':'\\u013A','Lacute':'\\u0139','laemptyv':'\\u29B4','lagran':'\\u2112','lambda':'\\u03BB','Lambda':'\\u039B','lang':'\\u27E8','Lang':'\\u27EA','langd':'\\u2991','langle':'\\u27E8','lap':'\\u2A85','Laplacetrf':'\\u2112','laquo':'\\xAB','larr':'\\u2190','lArr':'\\u21D0','Larr':'\\u219E','larrb':'\\u21E4','larrbfs':'\\u291F','larrfs':'\\u291D','larrhk':'\\u21A9','larrlp':'\\u21AB','larrpl':'\\u2939','larrsim':'\\u2973','larrtl':'\\u21A2','lat':'\\u2AAB','latail':'\\u2919','lAtail':'\\u291B','late':'\\u2AAD','lates':'\\u2AAD\\uFE00','lbarr':'\\u290C','lBarr':'\\u290E','lbbrk':'\\u2772','lbrace':'{','lbrack':'[','lbrke':'\\u298B','lbrksld':'\\u298F','lbrkslu':'\\u298D','lcaron':'\\u013E','Lcaron':'\\u013D','lcedil':'\\u013C','Lcedil':'\\u013B','lceil':'\\u2308','lcub':'{','lcy':'\\u043B','Lcy':'\\u041B','ldca':'\\u2936','ldquo':'\\u201C','ldquor':'\\u201E','ldrdhar':'\\u2967','ldrushar':'\\u294B','ldsh':'\\u21B2','le':'\\u2264','lE':'\\u2266','LeftAngleBracket':'\\u27E8','leftarrow':'\\u2190','Leftarrow':'\\u21D0','LeftArrow':'\\u2190','LeftArrowBar':'\\u21E4','LeftArrowRightArrow':'\\u21C6','leftarrowtail':'\\u21A2','LeftCeiling':'\\u2308','LeftDoubleBracket':'\\u27E6','LeftDownTeeVector':'\\u2961','LeftDownVector':'\\u21C3','LeftDownVectorBar':'\\u2959','LeftFloor':'\\u230A','leftharpoondown':'\\u21BD','leftharpoonup':'\\u21BC','leftleftarrows':'\\u21C7','leftrightarrow':'\\u2194','Leftrightarrow':'\\u21D4','LeftRightArrow':'\\u2194','leftrightarrows':'\\u21C6','leftrightharpoons':'\\u21CB','leftrightsquigarrow':'\\u21AD','LeftRightVector':'\\u294E','LeftTee':'\\u22A3','LeftTeeArrow':'\\u21A4','LeftTeeVector':'\\u295A','leftthreetimes':'\\u22CB','LeftTriangle':'\\u22B2','LeftTriangleBar':'\\u29CF','LeftTriangleEqual':'\\u22B4','LeftUpDownVector':'\\u2951','LeftUpTeeVector':'\\u2960','LeftUpVector':'\\u21BF','LeftUpVectorBar':'\\u2958','LeftVector':'\\u21BC','LeftVectorBar':'\\u2952','leg':'\\u22DA','lEg':'\\u2A8B','leq':'\\u2264','leqq':'\\u2266','leqslant':'\\u2A7D','les':'\\u2A7D','lescc':'\\u2AA8','lesdot':'\\u2A7F','lesdoto':'\\u2A81','lesdotor':'\\u2A83','lesg':'\\u22DA\\uFE00','lesges':'\\u2A93','lessapprox':'\\u2A85','lessdot':'\\u22D6','lesseqgtr':'\\u22DA','lesseqqgtr':'\\u2A8B','LessEqualGreater':'\\u22DA','LessFullEqual':'\\u2266','LessGreater':'\\u2276','lessgtr':'\\u2276','LessLess':'\\u2AA1','lesssim':'\\u2272','LessSlantEqual':'\\u2A7D','LessTilde':'\\u2272','lfisht':'\\u297C','lfloor':'\\u230A','lfr':'\\uD835\\uDD29','Lfr':'\\uD835\\uDD0F','lg':'\\u2276','lgE':'\\u2A91','lHar':'\\u2962','lhard':'\\u21BD','lharu':'\\u21BC','lharul':'\\u296A','lhblk':'\\u2584','ljcy':'\\u0459','LJcy':'\\u0409','ll':'\\u226A','Ll':'\\u22D8','llarr':'\\u21C7','llcorner':'\\u231E','Lleftarrow':'\\u21DA','llhard':'\\u296B','lltri':'\\u25FA','lmidot':'\\u0140','Lmidot':'\\u013F','lmoust':'\\u23B0','lmoustache':'\\u23B0','lnap':'\\u2A89','lnapprox':'\\u2A89','lne':'\\u2A87','lnE':'\\u2268','lneq':'\\u2A87','lneqq':'\\u2268','lnsim':'\\u22E6','loang':'\\u27EC','loarr':'\\u21FD','lobrk':'\\u27E6','longleftarrow':'\\u27F5','Longleftarrow':'\\u27F8','LongLeftArrow':'\\u27F5','longleftrightarrow':'\\u27F7','Longleftrightarrow':'\\u27FA','LongLeftRightArrow':'\\u27F7','longmapsto':'\\u27FC','longrightarrow':'\\u27F6','Longrightarrow':'\\u27F9','LongRightArrow':'\\u27F6','looparrowleft':'\\u21AB','looparrowright':'\\u21AC','lopar':'\\u2985','lopf':'\\uD835\\uDD5D','Lopf':'\\uD835\\uDD43','loplus':'\\u2A2D','lotimes':'\\u2A34','lowast':'\\u2217','lowbar':'_','LowerLeftArrow':'\\u2199','LowerRightArrow':'\\u2198','loz':'\\u25CA','lozenge':'\\u25CA','lozf':'\\u29EB','lpar':'(','lparlt':'\\u2993','lrarr':'\\u21C6','lrcorner':'\\u231F','lrhar':'\\u21CB','lrhard':'\\u296D','lrm':'\\u200E','lrtri':'\\u22BF','lsaquo':'\\u2039','lscr':'\\uD835\\uDCC1','Lscr':'\\u2112','lsh':'\\u21B0','Lsh':'\\u21B0','lsim':'\\u2272','lsime':'\\u2A8D','lsimg':'\\u2A8F','lsqb':'[','lsquo':'\\u2018','lsquor':'\\u201A','lstrok':'\\u0142','Lstrok':'\\u0141','lt':'<','Lt':'\\u226A','LT':'<','ltcc':'\\u2AA6','ltcir':'\\u2A79','ltdot':'\\u22D6','lthree':'\\u22CB','ltimes':'\\u22C9','ltlarr':'\\u2976','ltquest':'\\u2A7B','ltri':'\\u25C3','ltrie':'\\u22B4','ltrif':'\\u25C2','ltrPar':'\\u2996','lurdshar':'\\u294A','luruhar':'\\u2966','lvertneqq':'\\u2268\\uFE00','lvnE':'\\u2268\\uFE00','macr':'\\xAF','male':'\\u2642','malt':'\\u2720','maltese':'\\u2720','map':'\\u21A6','Map':'\\u2905','mapsto':'\\u21A6','mapstodown':'\\u21A7','mapstoleft':'\\u21A4','mapstoup':'\\u21A5','marker':'\\u25AE','mcomma':'\\u2A29','mcy':'\\u043C','Mcy':'\\u041C','mdash':'\\u2014','mDDot':'\\u223A','measuredangle':'\\u2221','MediumSpace':'\\u205F','Mellintrf':'\\u2133','mfr':'\\uD835\\uDD2A','Mfr':'\\uD835\\uDD10','mho':'\\u2127','micro':'\\xB5','mid':'\\u2223','midast':'*','midcir':'\\u2AF0','middot':'\\xB7','minus':'\\u2212','minusb':'\\u229F','minusd':'\\u2238','minusdu':'\\u2A2A','MinusPlus':'\\u2213','mlcp':'\\u2ADB','mldr':'\\u2026','mnplus':'\\u2213','models':'\\u22A7','mopf':'\\uD835\\uDD5E','Mopf':'\\uD835\\uDD44','mp':'\\u2213','mscr':'\\uD835\\uDCC2','Mscr':'\\u2133','mstpos':'\\u223E','mu':'\\u03BC','Mu':'\\u039C','multimap':'\\u22B8','mumap':'\\u22B8','nabla':'\\u2207','nacute':'\\u0144','Nacute':'\\u0143','nang':'\\u2220\\u20D2','nap':'\\u2249','napE':'\\u2A70\\u0338','napid':'\\u224B\\u0338','napos':'\\u0149','napprox':'\\u2249','natur':'\\u266E','natural':'\\u266E','naturals':'\\u2115','nbsp':'\\xA0','nbump':'\\u224E\\u0338','nbumpe':'\\u224F\\u0338','ncap':'\\u2A43','ncaron':'\\u0148','Ncaron':'\\u0147','ncedil':'\\u0146','Ncedil':'\\u0145','ncong':'\\u2247','ncongdot':'\\u2A6D\\u0338','ncup':'\\u2A42','ncy':'\\u043D','Ncy':'\\u041D','ndash':'\\u2013','ne':'\\u2260','nearhk':'\\u2924','nearr':'\\u2197','neArr':'\\u21D7','nearrow':'\\u2197','nedot':'\\u2250\\u0338','NegativeMediumSpace':'\\u200B','NegativeThickSpace':'\\u200B','NegativeThinSpace':'\\u200B','NegativeVeryThinSpace':'\\u200B','nequiv':'\\u2262','nesear':'\\u2928','nesim':'\\u2242\\u0338','NestedGreaterGreater':'\\u226B','NestedLessLess':'\\u226A','NewLine':'\\n','nexist':'\\u2204','nexists':'\\u2204','nfr':'\\uD835\\uDD2B','Nfr':'\\uD835\\uDD11','nge':'\\u2271','ngE':'\\u2267\\u0338','ngeq':'\\u2271','ngeqq':'\\u2267\\u0338','ngeqslant':'\\u2A7E\\u0338','nges':'\\u2A7E\\u0338','nGg':'\\u22D9\\u0338','ngsim':'\\u2275','ngt':'\\u226F','nGt':'\\u226B\\u20D2','ngtr':'\\u226F','nGtv':'\\u226B\\u0338','nharr':'\\u21AE','nhArr':'\\u21CE','nhpar':'\\u2AF2','ni':'\\u220B','nis':'\\u22FC','nisd':'\\u22FA','niv':'\\u220B','njcy':'\\u045A','NJcy':'\\u040A','nlarr':'\\u219A','nlArr':'\\u21CD','nldr':'\\u2025','nle':'\\u2270','nlE':'\\u2266\\u0338','nleftarrow':'\\u219A','nLeftarrow':'\\u21CD','nleftrightarrow':'\\u21AE','nLeftrightarrow':'\\u21CE','nleq':'\\u2270','nleqq':'\\u2266\\u0338','nleqslant':'\\u2A7D\\u0338','nles':'\\u2A7D\\u0338','nless':'\\u226E','nLl':'\\u22D8\\u0338','nlsim':'\\u2274','nlt':'\\u226E','nLt':'\\u226A\\u20D2','nltri':'\\u22EA','nltrie':'\\u22EC','nLtv':'\\u226A\\u0338','nmid':'\\u2224','NoBreak':'\\u2060','NonBreakingSpace':'\\xA0','nopf':'\\uD835\\uDD5F','Nopf':'\\u2115','not':'\\xAC','Not':'\\u2AEC','NotCongruent':'\\u2262','NotCupCap':'\\u226D','NotDoubleVerticalBar':'\\u2226','NotElement':'\\u2209','NotEqual':'\\u2260','NotEqualTilde':'\\u2242\\u0338','NotExists':'\\u2204','NotGreater':'\\u226F','NotGreaterEqual':'\\u2271','NotGreaterFullEqual':'\\u2267\\u0338','NotGreaterGreater':'\\u226B\\u0338','NotGreaterLess':'\\u2279','NotGreaterSlantEqual':'\\u2A7E\\u0338','NotGreaterTilde':'\\u2275','NotHumpDownHump':'\\u224E\\u0338','NotHumpEqual':'\\u224F\\u0338','notin':'\\u2209','notindot':'\\u22F5\\u0338','notinE':'\\u22F9\\u0338','notinva':'\\u2209','notinvb':'\\u22F7','notinvc':'\\u22F6','NotLeftTriangle':'\\u22EA','NotLeftTriangleBar':'\\u29CF\\u0338','NotLeftTriangleEqual':'\\u22EC','NotLess':'\\u226E','NotLessEqual':'\\u2270','NotLessGreater':'\\u2278','NotLessLess':'\\u226A\\u0338','NotLessSlantEqual':'\\u2A7D\\u0338','NotLessTilde':'\\u2274','NotNestedGreaterGreater':'\\u2AA2\\u0338','NotNestedLessLess':'\\u2AA1\\u0338','notni':'\\u220C','notniva':'\\u220C','notnivb':'\\u22FE','notnivc':'\\u22FD','NotPrecedes':'\\u2280','NotPrecedesEqual':'\\u2AAF\\u0338','NotPrecedesSlantEqual':'\\u22E0','NotReverseElement':'\\u220C','NotRightTriangle':'\\u22EB','NotRightTriangleBar':'\\u29D0\\u0338','NotRightTriangleEqual':'\\u22ED','NotSquareSubset':'\\u228F\\u0338','NotSquareSubsetEqual':'\\u22E2','NotSquareSuperset':'\\u2290\\u0338','NotSquareSupersetEqual':'\\u22E3','NotSubset':'\\u2282\\u20D2','NotSubsetEqual':'\\u2288','NotSucceeds':'\\u2281','NotSucceedsEqual':'\\u2AB0\\u0338','NotSucceedsSlantEqual':'\\u22E1','NotSucceedsTilde':'\\u227F\\u0338','NotSuperset':'\\u2283\\u20D2','NotSupersetEqual':'\\u2289','NotTilde':'\\u2241','NotTildeEqual':'\\u2244','NotTildeFullEqual':'\\u2247','NotTildeTilde':'\\u2249','NotVerticalBar':'\\u2224','npar':'\\u2226','nparallel':'\\u2226','nparsl':'\\u2AFD\\u20E5','npart':'\\u2202\\u0338','npolint':'\\u2A14','npr':'\\u2280','nprcue':'\\u22E0','npre':'\\u2AAF\\u0338','nprec':'\\u2280','npreceq':'\\u2AAF\\u0338','nrarr':'\\u219B','nrArr':'\\u21CF','nrarrc':'\\u2933\\u0338','nrarrw':'\\u219D\\u0338','nrightarrow':'\\u219B','nRightarrow':'\\u21CF','nrtri':'\\u22EB','nrtrie':'\\u22ED','nsc':'\\u2281','nsccue':'\\u22E1','nsce':'\\u2AB0\\u0338','nscr':'\\uD835\\uDCC3','Nscr':'\\uD835\\uDCA9','nshortmid':'\\u2224','nshortparallel':'\\u2226','nsim':'\\u2241','nsime':'\\u2244','nsimeq':'\\u2244','nsmid':'\\u2224','nspar':'\\u2226','nsqsube':'\\u22E2','nsqsupe':'\\u22E3','nsub':'\\u2284','nsube':'\\u2288','nsubE':'\\u2AC5\\u0338','nsubset':'\\u2282\\u20D2','nsubseteq':'\\u2288','nsubseteqq':'\\u2AC5\\u0338','nsucc':'\\u2281','nsucceq':'\\u2AB0\\u0338','nsup':'\\u2285','nsupe':'\\u2289','nsupE':'\\u2AC6\\u0338','nsupset':'\\u2283\\u20D2','nsupseteq':'\\u2289','nsupseteqq':'\\u2AC6\\u0338','ntgl':'\\u2279','ntilde':'\\xF1','Ntilde':'\\xD1','ntlg':'\\u2278','ntriangleleft':'\\u22EA','ntrianglelefteq':'\\u22EC','ntriangleright':'\\u22EB','ntrianglerighteq':'\\u22ED','nu':'\\u03BD','Nu':'\\u039D','num':'#','numero':'\\u2116','numsp':'\\u2007','nvap':'\\u224D\\u20D2','nvdash':'\\u22AC','nvDash':'\\u22AD','nVdash':'\\u22AE','nVDash':'\\u22AF','nvge':'\\u2265\\u20D2','nvgt':'>\\u20D2','nvHarr':'\\u2904','nvinfin':'\\u29DE','nvlArr':'\\u2902','nvle':'\\u2264\\u20D2','nvlt':'<\\u20D2','nvltrie':'\\u22B4\\u20D2','nvrArr':'\\u2903','nvrtrie':'\\u22B5\\u20D2','nvsim':'\\u223C\\u20D2','nwarhk':'\\u2923','nwarr':'\\u2196','nwArr':'\\u21D6','nwarrow':'\\u2196','nwnear':'\\u2927','oacute':'\\xF3','Oacute':'\\xD3','oast':'\\u229B','ocir':'\\u229A','ocirc':'\\xF4','Ocirc':'\\xD4','ocy':'\\u043E','Ocy':'\\u041E','odash':'\\u229D','odblac':'\\u0151','Odblac':'\\u0150','odiv':'\\u2A38','odot':'\\u2299','odsold':'\\u29BC','oelig':'\\u0153','OElig':'\\u0152','ofcir':'\\u29BF','ofr':'\\uD835\\uDD2C','Ofr':'\\uD835\\uDD12','ogon':'\\u02DB','ograve':'\\xF2','Ograve':'\\xD2','ogt':'\\u29C1','ohbar':'\\u29B5','ohm':'\\u03A9','oint':'\\u222E','olarr':'\\u21BA','olcir':'\\u29BE','olcross':'\\u29BB','oline':'\\u203E','olt':'\\u29C0','omacr':'\\u014D','Omacr':'\\u014C','omega':'\\u03C9','Omega':'\\u03A9','omicron':'\\u03BF','Omicron':'\\u039F','omid':'\\u29B6','ominus':'\\u2296','oopf':'\\uD835\\uDD60','Oopf':'\\uD835\\uDD46','opar':'\\u29B7','OpenCurlyDoubleQuote':'\\u201C','OpenCurlyQuote':'\\u2018','operp':'\\u29B9','oplus':'\\u2295','or':'\\u2228','Or':'\\u2A54','orarr':'\\u21BB','ord':'\\u2A5D','order':'\\u2134','orderof':'\\u2134','ordf':'\\xAA','ordm':'\\xBA','origof':'\\u22B6','oror':'\\u2A56','orslope':'\\u2A57','orv':'\\u2A5B','oS':'\\u24C8','oscr':'\\u2134','Oscr':'\\uD835\\uDCAA','oslash':'\\xF8','Oslash':'\\xD8','osol':'\\u2298','otilde':'\\xF5','Otilde':'\\xD5','otimes':'\\u2297','Otimes':'\\u2A37','otimesas':'\\u2A36','ouml':'\\xF6','Ouml':'\\xD6','ovbar':'\\u233D','OverBar':'\\u203E','OverBrace':'\\u23DE','OverBracket':'\\u23B4','OverParenthesis':'\\u23DC','par':'\\u2225','para':'\\xB6','parallel':'\\u2225','parsim':'\\u2AF3','parsl':'\\u2AFD','part':'\\u2202','PartialD':'\\u2202','pcy':'\\u043F','Pcy':'\\u041F','percnt':'%','period':'.','permil':'\\u2030','perp':'\\u22A5','pertenk':'\\u2031','pfr':'\\uD835\\uDD2D','Pfr':'\\uD835\\uDD13','phi':'\\u03C6','Phi':'\\u03A6','phiv':'\\u03D5','phmmat':'\\u2133','phone':'\\u260E','pi':'\\u03C0','Pi':'\\u03A0','pitchfork':'\\u22D4','piv':'\\u03D6','planck':'\\u210F','planckh':'\\u210E','plankv':'\\u210F','plus':'+','plusacir':'\\u2A23','plusb':'\\u229E','pluscir':'\\u2A22','plusdo':'\\u2214','plusdu':'\\u2A25','pluse':'\\u2A72','PlusMinus':'\\xB1','plusmn':'\\xB1','plussim':'\\u2A26','plustwo':'\\u2A27','pm':'\\xB1','Poincareplane':'\\u210C','pointint':'\\u2A15','popf':'\\uD835\\uDD61','Popf':'\\u2119','pound':'\\xA3','pr':'\\u227A','Pr':'\\u2ABB','prap':'\\u2AB7','prcue':'\\u227C','pre':'\\u2AAF','prE':'\\u2AB3','prec':'\\u227A','precapprox':'\\u2AB7','preccurlyeq':'\\u227C','Precedes':'\\u227A','PrecedesEqual':'\\u2AAF','PrecedesSlantEqual':'\\u227C','PrecedesTilde':'\\u227E','preceq':'\\u2AAF','precnapprox':'\\u2AB9','precneqq':'\\u2AB5','precnsim':'\\u22E8','precsim':'\\u227E','prime':'\\u2032','Prime':'\\u2033','primes':'\\u2119','prnap':'\\u2AB9','prnE':'\\u2AB5','prnsim':'\\u22E8','prod':'\\u220F','Product':'\\u220F','profalar':'\\u232E','profline':'\\u2312','profsurf':'\\u2313','prop':'\\u221D','Proportion':'\\u2237','Proportional':'\\u221D','propto':'\\u221D','prsim':'\\u227E','prurel':'\\u22B0','pscr':'\\uD835\\uDCC5','Pscr':'\\uD835\\uDCAB','psi':'\\u03C8','Psi':'\\u03A8','puncsp':'\\u2008','qfr':'\\uD835\\uDD2E','Qfr':'\\uD835\\uDD14','qint':'\\u2A0C','qopf':'\\uD835\\uDD62','Qopf':'\\u211A','qprime':'\\u2057','qscr':'\\uD835\\uDCC6','Qscr':'\\uD835\\uDCAC','quaternions':'\\u210D','quatint':'\\u2A16','quest':'?','questeq':'\\u225F','quot':'\"','QUOT':'\"','rAarr':'\\u21DB','race':'\\u223D\\u0331','racute':'\\u0155','Racute':'\\u0154','radic':'\\u221A','raemptyv':'\\u29B3','rang':'\\u27E9','Rang':'\\u27EB','rangd':'\\u2992','range':'\\u29A5','rangle':'\\u27E9','raquo':'\\xBB','rarr':'\\u2192','rArr':'\\u21D2','Rarr':'\\u21A0','rarrap':'\\u2975','rarrb':'\\u21E5','rarrbfs':'\\u2920','rarrc':'\\u2933','rarrfs':'\\u291E','rarrhk':'\\u21AA','rarrlp':'\\u21AC','rarrpl':'\\u2945','rarrsim':'\\u2974','rarrtl':'\\u21A3','Rarrtl':'\\u2916','rarrw':'\\u219D','ratail':'\\u291A','rAtail':'\\u291C','ratio':'\\u2236','rationals':'\\u211A','rbarr':'\\u290D','rBarr':'\\u290F','RBarr':'\\u2910','rbbrk':'\\u2773','rbrace':'}','rbrack':']','rbrke':'\\u298C','rbrksld':'\\u298E','rbrkslu':'\\u2990','rcaron':'\\u0159','Rcaron':'\\u0158','rcedil':'\\u0157','Rcedil':'\\u0156','rceil':'\\u2309','rcub':'}','rcy':'\\u0440','Rcy':'\\u0420','rdca':'\\u2937','rdldhar':'\\u2969','rdquo':'\\u201D','rdquor':'\\u201D','rdsh':'\\u21B3','Re':'\\u211C','real':'\\u211C','realine':'\\u211B','realpart':'\\u211C','reals':'\\u211D','rect':'\\u25AD','reg':'\\xAE','REG':'\\xAE','ReverseElement':'\\u220B','ReverseEquilibrium':'\\u21CB','ReverseUpEquilibrium':'\\u296F','rfisht':'\\u297D','rfloor':'\\u230B','rfr':'\\uD835\\uDD2F','Rfr':'\\u211C','rHar':'\\u2964','rhard':'\\u21C1','rharu':'\\u21C0','rharul':'\\u296C','rho':'\\u03C1','Rho':'\\u03A1','rhov':'\\u03F1','RightAngleBracket':'\\u27E9','rightarrow':'\\u2192','Rightarrow':'\\u21D2','RightArrow':'\\u2192','RightArrowBar':'\\u21E5','RightArrowLeftArrow':'\\u21C4','rightarrowtail':'\\u21A3','RightCeiling':'\\u2309','RightDoubleBracket':'\\u27E7','RightDownTeeVector':'\\u295D','RightDownVector':'\\u21C2','RightDownVectorBar':'\\u2955','RightFloor':'\\u230B','rightharpoondown':'\\u21C1','rightharpoonup':'\\u21C0','rightleftarrows':'\\u21C4','rightleftharpoons':'\\u21CC','rightrightarrows':'\\u21C9','rightsquigarrow':'\\u219D','RightTee':'\\u22A2','RightTeeArrow':'\\u21A6','RightTeeVector':'\\u295B','rightthreetimes':'\\u22CC','RightTriangle':'\\u22B3','RightTriangleBar':'\\u29D0','RightTriangleEqual':'\\u22B5','RightUpDownVector':'\\u294F','RightUpTeeVector':'\\u295C','RightUpVector':'\\u21BE','RightUpVectorBar':'\\u2954','RightVector':'\\u21C0','RightVectorBar':'\\u2953','ring':'\\u02DA','risingdotseq':'\\u2253','rlarr':'\\u21C4','rlhar':'\\u21CC','rlm':'\\u200F','rmoust':'\\u23B1','rmoustache':'\\u23B1','rnmid':'\\u2AEE','roang':'\\u27ED','roarr':'\\u21FE','robrk':'\\u27E7','ropar':'\\u2986','ropf':'\\uD835\\uDD63','Ropf':'\\u211D','roplus':'\\u2A2E','rotimes':'\\u2A35','RoundImplies':'\\u2970','rpar':')','rpargt':'\\u2994','rppolint':'\\u2A12','rrarr':'\\u21C9','Rrightarrow':'\\u21DB','rsaquo':'\\u203A','rscr':'\\uD835\\uDCC7','Rscr':'\\u211B','rsh':'\\u21B1','Rsh':'\\u21B1','rsqb':']','rsquo':'\\u2019','rsquor':'\\u2019','rthree':'\\u22CC','rtimes':'\\u22CA','rtri':'\\u25B9','rtrie':'\\u22B5','rtrif':'\\u25B8','rtriltri':'\\u29CE','RuleDelayed':'\\u29F4','ruluhar':'\\u2968','rx':'\\u211E','sacute':'\\u015B','Sacute':'\\u015A','sbquo':'\\u201A','sc':'\\u227B','Sc':'\\u2ABC','scap':'\\u2AB8','scaron':'\\u0161','Scaron':'\\u0160','sccue':'\\u227D','sce':'\\u2AB0','scE':'\\u2AB4','scedil':'\\u015F','Scedil':'\\u015E','scirc':'\\u015D','Scirc':'\\u015C','scnap':'\\u2ABA','scnE':'\\u2AB6','scnsim':'\\u22E9','scpolint':'\\u2A13','scsim':'\\u227F','scy':'\\u0441','Scy':'\\u0421','sdot':'\\u22C5','sdotb':'\\u22A1','sdote':'\\u2A66','searhk':'\\u2925','searr':'\\u2198','seArr':'\\u21D8','searrow':'\\u2198','sect':'\\xA7','semi':';','seswar':'\\u2929','setminus':'\\u2216','setmn':'\\u2216','sext':'\\u2736','sfr':'\\uD835\\uDD30','Sfr':'\\uD835\\uDD16','sfrown':'\\u2322','sharp':'\\u266F','shchcy':'\\u0449','SHCHcy':'\\u0429','shcy':'\\u0448','SHcy':'\\u0428','ShortDownArrow':'\\u2193','ShortLeftArrow':'\\u2190','shortmid':'\\u2223','shortparallel':'\\u2225','ShortRightArrow':'\\u2192','ShortUpArrow':'\\u2191','shy':'\\xAD','sigma':'\\u03C3','Sigma':'\\u03A3','sigmaf':'\\u03C2','sigmav':'\\u03C2','sim':'\\u223C','simdot':'\\u2A6A','sime':'\\u2243','simeq':'\\u2243','simg':'\\u2A9E','simgE':'\\u2AA0','siml':'\\u2A9D','simlE':'\\u2A9F','simne':'\\u2246','simplus':'\\u2A24','simrarr':'\\u2972','slarr':'\\u2190','SmallCircle':'\\u2218','smallsetminus':'\\u2216','smashp':'\\u2A33','smeparsl':'\\u29E4','smid':'\\u2223','smile':'\\u2323','smt':'\\u2AAA','smte':'\\u2AAC','smtes':'\\u2AAC\\uFE00','softcy':'\\u044C','SOFTcy':'\\u042C','sol':'/','solb':'\\u29C4','solbar':'\\u233F','sopf':'\\uD835\\uDD64','Sopf':'\\uD835\\uDD4A','spades':'\\u2660','spadesuit':'\\u2660','spar':'\\u2225','sqcap':'\\u2293','sqcaps':'\\u2293\\uFE00','sqcup':'\\u2294','sqcups':'\\u2294\\uFE00','Sqrt':'\\u221A','sqsub':'\\u228F','sqsube':'\\u2291','sqsubset':'\\u228F','sqsubseteq':'\\u2291','sqsup':'\\u2290','sqsupe':'\\u2292','sqsupset':'\\u2290','sqsupseteq':'\\u2292','squ':'\\u25A1','square':'\\u25A1','Square':'\\u25A1','SquareIntersection':'\\u2293','SquareSubset':'\\u228F','SquareSubsetEqual':'\\u2291','SquareSuperset':'\\u2290','SquareSupersetEqual':'\\u2292','SquareUnion':'\\u2294','squarf':'\\u25AA','squf':'\\u25AA','srarr':'\\u2192','sscr':'\\uD835\\uDCC8','Sscr':'\\uD835\\uDCAE','ssetmn':'\\u2216','ssmile':'\\u2323','sstarf':'\\u22C6','star':'\\u2606','Star':'\\u22C6','starf':'\\u2605','straightepsilon':'\\u03F5','straightphi':'\\u03D5','strns':'\\xAF','sub':'\\u2282','Sub':'\\u22D0','subdot':'\\u2ABD','sube':'\\u2286','subE':'\\u2AC5','subedot':'\\u2AC3','submult':'\\u2AC1','subne':'\\u228A','subnE':'\\u2ACB','subplus':'\\u2ABF','subrarr':'\\u2979','subset':'\\u2282','Subset':'\\u22D0','subseteq':'\\u2286','subseteqq':'\\u2AC5','SubsetEqual':'\\u2286','subsetneq':'\\u228A','subsetneqq':'\\u2ACB','subsim':'\\u2AC7','subsub':'\\u2AD5','subsup':'\\u2AD3','succ':'\\u227B','succapprox':'\\u2AB8','succcurlyeq':'\\u227D','Succeeds':'\\u227B','SucceedsEqual':'\\u2AB0','SucceedsSlantEqual':'\\u227D','SucceedsTilde':'\\u227F','succeq':'\\u2AB0','succnapprox':'\\u2ABA','succneqq':'\\u2AB6','succnsim':'\\u22E9','succsim':'\\u227F','SuchThat':'\\u220B','sum':'\\u2211','Sum':'\\u2211','sung':'\\u266A','sup':'\\u2283','Sup':'\\u22D1','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','supdot':'\\u2ABE','supdsub':'\\u2AD8','supe':'\\u2287','supE':'\\u2AC6','supedot':'\\u2AC4','Superset':'\\u2283','SupersetEqual':'\\u2287','suphsol':'\\u27C9','suphsub':'\\u2AD7','suplarr':'\\u297B','supmult':'\\u2AC2','supne':'\\u228B','supnE':'\\u2ACC','supplus':'\\u2AC0','supset':'\\u2283','Supset':'\\u22D1','supseteq':'\\u2287','supseteqq':'\\u2AC6','supsetneq':'\\u228B','supsetneqq':'\\u2ACC','supsim':'\\u2AC8','supsub':'\\u2AD4','supsup':'\\u2AD6','swarhk':'\\u2926','swarr':'\\u2199','swArr':'\\u21D9','swarrow':'\\u2199','swnwar':'\\u292A','szlig':'\\xDF','Tab':'\\t','target':'\\u2316','tau':'\\u03C4','Tau':'\\u03A4','tbrk':'\\u23B4','tcaron':'\\u0165','Tcaron':'\\u0164','tcedil':'\\u0163','Tcedil':'\\u0162','tcy':'\\u0442','Tcy':'\\u0422','tdot':'\\u20DB','telrec':'\\u2315','tfr':'\\uD835\\uDD31','Tfr':'\\uD835\\uDD17','there4':'\\u2234','therefore':'\\u2234','Therefore':'\\u2234','theta':'\\u03B8','Theta':'\\u0398','thetasym':'\\u03D1','thetav':'\\u03D1','thickapprox':'\\u2248','thicksim':'\\u223C','ThickSpace':'\\u205F\\u200A','thinsp':'\\u2009','ThinSpace':'\\u2009','thkap':'\\u2248','thksim':'\\u223C','thorn':'\\xFE','THORN':'\\xDE','tilde':'\\u02DC','Tilde':'\\u223C','TildeEqual':'\\u2243','TildeFullEqual':'\\u2245','TildeTilde':'\\u2248','times':'\\xD7','timesb':'\\u22A0','timesbar':'\\u2A31','timesd':'\\u2A30','tint':'\\u222D','toea':'\\u2928','top':'\\u22A4','topbot':'\\u2336','topcir':'\\u2AF1','topf':'\\uD835\\uDD65','Topf':'\\uD835\\uDD4B','topfork':'\\u2ADA','tosa':'\\u2929','tprime':'\\u2034','trade':'\\u2122','TRADE':'\\u2122','triangle':'\\u25B5','triangledown':'\\u25BF','triangleleft':'\\u25C3','trianglelefteq':'\\u22B4','triangleq':'\\u225C','triangleright':'\\u25B9','trianglerighteq':'\\u22B5','tridot':'\\u25EC','trie':'\\u225C','triminus':'\\u2A3A','TripleDot':'\\u20DB','triplus':'\\u2A39','trisb':'\\u29CD','tritime':'\\u2A3B','trpezium':'\\u23E2','tscr':'\\uD835\\uDCC9','Tscr':'\\uD835\\uDCAF','tscy':'\\u0446','TScy':'\\u0426','tshcy':'\\u045B','TSHcy':'\\u040B','tstrok':'\\u0167','Tstrok':'\\u0166','twixt':'\\u226C','twoheadleftarrow':'\\u219E','twoheadrightarrow':'\\u21A0','uacute':'\\xFA','Uacute':'\\xDA','uarr':'\\u2191','uArr':'\\u21D1','Uarr':'\\u219F','Uarrocir':'\\u2949','ubrcy':'\\u045E','Ubrcy':'\\u040E','ubreve':'\\u016D','Ubreve':'\\u016C','ucirc':'\\xFB','Ucirc':'\\xDB','ucy':'\\u0443','Ucy':'\\u0423','udarr':'\\u21C5','udblac':'\\u0171','Udblac':'\\u0170','udhar':'\\u296E','ufisht':'\\u297E','ufr':'\\uD835\\uDD32','Ufr':'\\uD835\\uDD18','ugrave':'\\xF9','Ugrave':'\\xD9','uHar':'\\u2963','uharl':'\\u21BF','uharr':'\\u21BE','uhblk':'\\u2580','ulcorn':'\\u231C','ulcorner':'\\u231C','ulcrop':'\\u230F','ultri':'\\u25F8','umacr':'\\u016B','Umacr':'\\u016A','uml':'\\xA8','UnderBar':'_','UnderBrace':'\\u23DF','UnderBracket':'\\u23B5','UnderParenthesis':'\\u23DD','Union':'\\u22C3','UnionPlus':'\\u228E','uogon':'\\u0173','Uogon':'\\u0172','uopf':'\\uD835\\uDD66','Uopf':'\\uD835\\uDD4C','uparrow':'\\u2191','Uparrow':'\\u21D1','UpArrow':'\\u2191','UpArrowBar':'\\u2912','UpArrowDownArrow':'\\u21C5','updownarrow':'\\u2195','Updownarrow':'\\u21D5','UpDownArrow':'\\u2195','UpEquilibrium':'\\u296E','upharpoonleft':'\\u21BF','upharpoonright':'\\u21BE','uplus':'\\u228E','UpperLeftArrow':'\\u2196','UpperRightArrow':'\\u2197','upsi':'\\u03C5','Upsi':'\\u03D2','upsih':'\\u03D2','upsilon':'\\u03C5','Upsilon':'\\u03A5','UpTee':'\\u22A5','UpTeeArrow':'\\u21A5','upuparrows':'\\u21C8','urcorn':'\\u231D','urcorner':'\\u231D','urcrop':'\\u230E','uring':'\\u016F','Uring':'\\u016E','urtri':'\\u25F9','uscr':'\\uD835\\uDCCA','Uscr':'\\uD835\\uDCB0','utdot':'\\u22F0','utilde':'\\u0169','Utilde':'\\u0168','utri':'\\u25B5','utrif':'\\u25B4','uuarr':'\\u21C8','uuml':'\\xFC','Uuml':'\\xDC','uwangle':'\\u29A7','vangrt':'\\u299C','varepsilon':'\\u03F5','varkappa':'\\u03F0','varnothing':'\\u2205','varphi':'\\u03D5','varpi':'\\u03D6','varpropto':'\\u221D','varr':'\\u2195','vArr':'\\u21D5','varrho':'\\u03F1','varsigma':'\\u03C2','varsubsetneq':'\\u228A\\uFE00','varsubsetneqq':'\\u2ACB\\uFE00','varsupsetneq':'\\u228B\\uFE00','varsupsetneqq':'\\u2ACC\\uFE00','vartheta':'\\u03D1','vartriangleleft':'\\u22B2','vartriangleright':'\\u22B3','vBar':'\\u2AE8','Vbar':'\\u2AEB','vBarv':'\\u2AE9','vcy':'\\u0432','Vcy':'\\u0412','vdash':'\\u22A2','vDash':'\\u22A8','Vdash':'\\u22A9','VDash':'\\u22AB','Vdashl':'\\u2AE6','vee':'\\u2228','Vee':'\\u22C1','veebar':'\\u22BB','veeeq':'\\u225A','vellip':'\\u22EE','verbar':'|','Verbar':'\\u2016','vert':'|','Vert':'\\u2016','VerticalBar':'\\u2223','VerticalLine':'|','VerticalSeparator':'\\u2758','VerticalTilde':'\\u2240','VeryThinSpace':'\\u200A','vfr':'\\uD835\\uDD33','Vfr':'\\uD835\\uDD19','vltri':'\\u22B2','vnsub':'\\u2282\\u20D2','vnsup':'\\u2283\\u20D2','vopf':'\\uD835\\uDD67','Vopf':'\\uD835\\uDD4D','vprop':'\\u221D','vrtri':'\\u22B3','vscr':'\\uD835\\uDCCB','Vscr':'\\uD835\\uDCB1','vsubne':'\\u228A\\uFE00','vsubnE':'\\u2ACB\\uFE00','vsupne':'\\u228B\\uFE00','vsupnE':'\\u2ACC\\uFE00','Vvdash':'\\u22AA','vzigzag':'\\u299A','wcirc':'\\u0175','Wcirc':'\\u0174','wedbar':'\\u2A5F','wedge':'\\u2227','Wedge':'\\u22C0','wedgeq':'\\u2259','weierp':'\\u2118','wfr':'\\uD835\\uDD34','Wfr':'\\uD835\\uDD1A','wopf':'\\uD835\\uDD68','Wopf':'\\uD835\\uDD4E','wp':'\\u2118','wr':'\\u2240','wreath':'\\u2240','wscr':'\\uD835\\uDCCC','Wscr':'\\uD835\\uDCB2','xcap':'\\u22C2','xcirc':'\\u25EF','xcup':'\\u22C3','xdtri':'\\u25BD','xfr':'\\uD835\\uDD35','Xfr':'\\uD835\\uDD1B','xharr':'\\u27F7','xhArr':'\\u27FA','xi':'\\u03BE','Xi':'\\u039E','xlarr':'\\u27F5','xlArr':'\\u27F8','xmap':'\\u27FC','xnis':'\\u22FB','xodot':'\\u2A00','xopf':'\\uD835\\uDD69','Xopf':'\\uD835\\uDD4F','xoplus':'\\u2A01','xotime':'\\u2A02','xrarr':'\\u27F6','xrArr':'\\u27F9','xscr':'\\uD835\\uDCCD','Xscr':'\\uD835\\uDCB3','xsqcup':'\\u2A06','xuplus':'\\u2A04','xutri':'\\u25B3','xvee':'\\u22C1','xwedge':'\\u22C0','yacute':'\\xFD','Yacute':'\\xDD','yacy':'\\u044F','YAcy':'\\u042F','ycirc':'\\u0177','Ycirc':'\\u0176','ycy':'\\u044B','Ycy':'\\u042B','yen':'\\xA5','yfr':'\\uD835\\uDD36','Yfr':'\\uD835\\uDD1C','yicy':'\\u0457','YIcy':'\\u0407','yopf':'\\uD835\\uDD6A','Yopf':'\\uD835\\uDD50','yscr':'\\uD835\\uDCCE','Yscr':'\\uD835\\uDCB4','yucy':'\\u044E','YUcy':'\\u042E','yuml':'\\xFF','Yuml':'\\u0178','zacute':'\\u017A','Zacute':'\\u0179','zcaron':'\\u017E','Zcaron':'\\u017D','zcy':'\\u0437','Zcy':'\\u0417','zdot':'\\u017C','Zdot':'\\u017B','zeetrf':'\\u2128','ZeroWidthSpace':'\\u200B','zeta':'\\u03B6','Zeta':'\\u0396','zfr':'\\uD835\\uDD37','Zfr':'\\u2128','zhcy':'\\u0436','ZHcy':'\\u0416','zigrarr':'\\u21DD','zopf':'\\uD835\\uDD6B','Zopf':'\\u2124','zscr':'\\uD835\\uDCCF','Zscr':'\\uD835\\uDCB5','zwj':'\\u200D','zwnj':'\\u200C'};\r\n\tvar decodeMapLegacy = {'aacute':'\\xE1','Aacute':'\\xC1','acirc':'\\xE2','Acirc':'\\xC2','acute':'\\xB4','aelig':'\\xE6','AElig':'\\xC6','agrave':'\\xE0','Agrave':'\\xC0','amp':'&','AMP':'&','aring':'\\xE5','Aring':'\\xC5','atilde':'\\xE3','Atilde':'\\xC3','auml':'\\xE4','Auml':'\\xC4','brvbar':'\\xA6','ccedil':'\\xE7','Ccedil':'\\xC7','cedil':'\\xB8','cent':'\\xA2','copy':'\\xA9','COPY':'\\xA9','curren':'\\xA4','deg':'\\xB0','divide':'\\xF7','eacute':'\\xE9','Eacute':'\\xC9','ecirc':'\\xEA','Ecirc':'\\xCA','egrave':'\\xE8','Egrave':'\\xC8','eth':'\\xF0','ETH':'\\xD0','euml':'\\xEB','Euml':'\\xCB','frac12':'\\xBD','frac14':'\\xBC','frac34':'\\xBE','gt':'>','GT':'>','iacute':'\\xED','Iacute':'\\xCD','icirc':'\\xEE','Icirc':'\\xCE','iexcl':'\\xA1','igrave':'\\xEC','Igrave':'\\xCC','iquest':'\\xBF','iuml':'\\xEF','Iuml':'\\xCF','laquo':'\\xAB','lt':'<','LT':'<','macr':'\\xAF','micro':'\\xB5','middot':'\\xB7','nbsp':'\\xA0','not':'\\xAC','ntilde':'\\xF1','Ntilde':'\\xD1','oacute':'\\xF3','Oacute':'\\xD3','ocirc':'\\xF4','Ocirc':'\\xD4','ograve':'\\xF2','Ograve':'\\xD2','ordf':'\\xAA','ordm':'\\xBA','oslash':'\\xF8','Oslash':'\\xD8','otilde':'\\xF5','Otilde':'\\xD5','ouml':'\\xF6','Ouml':'\\xD6','para':'\\xB6','plusmn':'\\xB1','pound':'\\xA3','quot':'\"','QUOT':'\"','raquo':'\\xBB','reg':'\\xAE','REG':'\\xAE','sect':'\\xA7','shy':'\\xAD','sup1':'\\xB9','sup2':'\\xB2','sup3':'\\xB3','szlig':'\\xDF','thorn':'\\xFE','THORN':'\\xDE','times':'\\xD7','uacute':'\\xFA','Uacute':'\\xDA','ucirc':'\\xFB','Ucirc':'\\xDB','ugrave':'\\xF9','Ugrave':'\\xD9','uml':'\\xA8','uuml':'\\xFC','Uuml':'\\xDC','yacute':'\\xFD','Yacute':'\\xDD','yen':'\\xA5','yuml':'\\xFF'};\r\n\tvar decodeMapNumeric = {'0':'\\uFFFD','128':'\\u20AC','130':'\\u201A','131':'\\u0192','132':'\\u201E','133':'\\u2026','134':'\\u2020','135':'\\u2021','136':'\\u02C6','137':'\\u2030','138':'\\u0160','139':'\\u2039','140':'\\u0152','142':'\\u017D','145':'\\u2018','146':'\\u2019','147':'\\u201C','148':'\\u201D','149':'\\u2022','150':'\\u2013','151':'\\u2014','152':'\\u02DC','153':'\\u2122','154':'\\u0161','155':'\\u203A','156':'\\u0153','158':'\\u017E','159':'\\u0178'};\r\n\tvar invalidReferenceCodePoints = [1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65000,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];\r\n\r\n\t/*--------------------------------------------------------------------------*/\r\n\r\n\tvar stringFromCharCode = String.fromCharCode;\r\n\r\n\tvar object = {};\r\n\tvar hasOwnProperty = object.hasOwnProperty;\r\n\tvar has = function(object, propertyName) {\r\n\t\treturn hasOwnProperty.call(object, propertyName);\r\n\t};\r\n\r\n\tvar contains = function(array, value) {\r\n\t\tvar index = -1;\r\n\t\tvar length = array.length;\r\n\t\twhile (++index < length) {\r\n\t\t\tif (array[index] == value) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\r\n\tvar merge = function(options, defaults) {\r\n\t\tif (!options) {\r\n\t\t\treturn defaults;\r\n\t\t}\r\n\t\tvar result = {};\r\n\t\tvar key;\r\n\t\tfor (key in defaults) {\r\n\t\t\t// A `hasOwnProperty` check is not needed here, since only recognized\r\n\t\t\t// option names are used anyway. Any others are ignored.\r\n\t\t\tresult[key] = has(options, key) ? options[key] : defaults[key];\r\n\t\t}\r\n\t\treturn result;\r\n\t};\r\n\r\n\t// Modified version of `ucs2encode`; see https://mths.be/punycode.\r\n\tvar codePointToSymbol = function(codePoint, strict) {\r\n\t\tvar output = '';\r\n\t\tif ((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF) {\r\n\t\t\t// See issue #4:\r\n\t\t\t// “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\r\n\t\t\t// greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\r\n\t\t\t// REPLACEMENT CHARACTER.”\r\n\t\t\tif (strict) {\r\n\t\t\t\tparseError('character reference outside the permissible Unicode range');\r\n\t\t\t}\r\n\t\t\treturn '\\uFFFD';\r\n\t\t}\r\n\t\tif (has(decodeMapNumeric, codePoint)) {\r\n\t\t\tif (strict) {\r\n\t\t\t\tparseError('disallowed character reference');\r\n\t\t\t}\r\n\t\t\treturn decodeMapNumeric[codePoint];\r\n\t\t}\r\n\t\tif (strict && contains(invalidReferenceCodePoints, codePoint)) {\r\n\t\t\tparseError('disallowed character reference');\r\n\t\t}\r\n\t\tif (codePoint > 0xFFFF) {\r\n\t\t\tcodePoint -= 0x10000;\r\n\t\t\toutput += stringFromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);\r\n\t\t\tcodePoint = 0xDC00 | codePoint & 0x3FF;\r\n\t\t}\r\n\t\toutput += stringFromCharCode(codePoint);\r\n\t\treturn output;\r\n\t};\r\n\r\n\tvar hexEscape = function(codePoint) {\r\n\t\treturn '&#x' + codePoint.toString(16).toUpperCase() + ';';\r\n\t};\r\n\r\n\tvar decEscape = function(codePoint) {\r\n\t\treturn '&#' + codePoint + ';';\r\n\t};\r\n\r\n\tvar parseError = function(message) {\r\n\t\tthrow Error('Parse error: ' + message);\r\n\t};\r\n\r\n\t/*--------------------------------------------------------------------------*/\r\n\r\n\tvar encode = function(string, options) {\r\n\t\toptions = merge(options, encode.options);\r\n\t\tvar strict = options.strict;\r\n\t\tif (strict && regexInvalidRawCodePoint.test(string)) {\r\n\t\t\tparseError('forbidden code point');\r\n\t\t}\r\n\t\tvar encodeEverything = options.encodeEverything;\r\n\t\tvar useNamedReferences = options.useNamedReferences;\r\n\t\tvar allowUnsafeSymbols = options.allowUnsafeSymbols;\r\n\t\tvar escapeCodePoint = options.decimal ? decEscape : hexEscape;\r\n\r\n\t\tvar escapeBmpSymbol = function(symbol) {\r\n\t\t\treturn escapeCodePoint(symbol.charCodeAt(0));\r\n\t\t};\r\n\r\n\t\tif (encodeEverything) {\r\n\t\t\t// Encode ASCII symbols.\r\n\t\t\tstring = string.replace(regexAsciiWhitelist, function(symbol) {\r\n\t\t\t\t// Use named references if requested & possible.\r\n\t\t\t\tif (useNamedReferences && has(encodeMap, symbol)) {\r\n\t\t\t\t\treturn '&' + encodeMap[symbol] + ';';\r\n\t\t\t\t}\r\n\t\t\t\treturn escapeBmpSymbol(symbol);\r\n\t\t\t});\r\n\t\t\t// Shorten a few escapes that represent two symbols, of which at least one\r\n\t\t\t// is within the ASCII range.\r\n\t\t\tif (useNamedReferences) {\r\n\t\t\t\tstring = string\r\n\t\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\r\n\t\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;')\r\n\t\t\t\t\t.replace(/&#x66;&#x6A;/g, '&fjlig;');\r\n\t\t\t}\r\n\t\t\t// Encode non-ASCII symbols.\r\n\t\t\tif (useNamedReferences) {\r\n\t\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\r\n\t\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\r\n\t\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\r\n\t\t\t\t\treturn '&' + encodeMap[string] + ';';\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// Note: any remaining non-ASCII symbols are handled outside of the `if`.\r\n\t\t} else if (useNamedReferences) {\r\n\t\t\t// Apply named character references.\r\n\t\t\t// Encode `<>\"'&` using named character references.\r\n\t\t\tif (!allowUnsafeSymbols) {\r\n\t\t\t\tstring = string.replace(regexEscape, function(string) {\r\n\t\t\t\t\treturn '&' + encodeMap[string] + ';'; // no need to check `has()` here\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t// Shorten escapes that represent two symbols, of which at least one is\r\n\t\t\t// `<>\"'&`.\r\n\t\t\tstring = string\r\n\t\t\t\t.replace(/&gt;\\u20D2/g, '&nvgt;')\r\n\t\t\t\t.replace(/&lt;\\u20D2/g, '&nvlt;');\r\n\t\t\t// Encode non-ASCII symbols that can be replaced with a named reference.\r\n\t\t\tstring = string.replace(regexEncodeNonAscii, function(string) {\r\n\t\t\t\t// Note: there is no need to check `has(encodeMap, string)` here.\r\n\t\t\t\treturn '&' + encodeMap[string] + ';';\r\n\t\t\t});\r\n\t\t} else if (!allowUnsafeSymbols) {\r\n\t\t\t// Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\r\n\t\t\t// using named character references.\r\n\t\t\tstring = string.replace(regexEscape, escapeBmpSymbol);\r\n\t\t}\r\n\t\treturn string\r\n\t\t\t// Encode astral symbols.\r\n\t\t\t.replace(regexAstralSymbols, function($0) {\r\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\r\n\t\t\t\tvar high = $0.charCodeAt(0);\r\n\t\t\t\tvar low = $0.charCodeAt(1);\r\n\t\t\t\tvar codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;\r\n\t\t\t\treturn escapeCodePoint(codePoint);\r\n\t\t\t})\r\n\t\t\t// Encode any remaining BMP symbols that are not printable ASCII symbols\r\n\t\t\t// using a hexadecimal escape.\r\n\t\t\t.replace(regexBmpWhitelist, escapeBmpSymbol);\r\n\t};\r\n\t// Expose default options (so they can be overridden globally).\r\n\tencode.options = {\r\n\t\t'allowUnsafeSymbols': false,\r\n\t\t'encodeEverything': false,\r\n\t\t'strict': false,\r\n\t\t'useNamedReferences': false,\r\n\t\t'decimal' : false\r\n\t};\r\n\r\n\tvar decode = function(html, options) {\r\n\t\toptions = merge(options, decode.options);\r\n\t\tvar strict = options.strict;\r\n\t\tif (strict && regexInvalidEntity.test(html)) {\r\n\t\t\tparseError('malformed character reference');\r\n\t\t}\r\n\t\treturn html.replace(regexDecode, function($0, $1, $2, $3, $4, $5, $6, $7) {\r\n\t\t\tvar codePoint;\r\n\t\t\tvar semicolon;\r\n\t\t\tvar decDigits;\r\n\t\t\tvar hexDigits;\r\n\t\t\tvar reference;\r\n\t\t\tvar next;\r\n\t\t\tif ($1) {\r\n\t\t\t\t// Decode decimal escapes, e.g. `&#119558;`.\r\n\t\t\t\tdecDigits = $1;\r\n\t\t\t\tsemicolon = $2;\r\n\t\t\t\tif (strict && !semicolon) {\r\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\r\n\t\t\t\t}\r\n\t\t\t\tcodePoint = parseInt(decDigits, 10);\r\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\r\n\t\t\t}\r\n\t\t\tif ($3) {\r\n\t\t\t\t// Decode hexadecimal escapes, e.g. `&#x1D306;`.\r\n\t\t\t\thexDigits = $3;\r\n\t\t\t\tsemicolon = $4;\r\n\t\t\t\tif (strict && !semicolon) {\r\n\t\t\t\t\tparseError('character reference was not terminated by a semicolon');\r\n\t\t\t\t}\r\n\t\t\t\tcodePoint = parseInt(hexDigits, 16);\r\n\t\t\t\treturn codePointToSymbol(codePoint, strict);\r\n\t\t\t}\r\n\t\t\tif ($5) {\r\n\t\t\t\t// Decode named character references with trailing `;`, e.g. `&copy;`.\r\n\t\t\t\treference = $5;\r\n\t\t\t\tif (has(decodeMap, reference)) {\r\n\t\t\t\t\treturn decodeMap[reference];\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Ambiguous ampersand. https://mths.be/notes/ambiguous-ampersands\r\n\t\t\t\t\tif (strict) {\r\n\t\t\t\t\t\tparseError(\r\n\t\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If we’re still here, it’s a legacy reference for sure. No need for an\r\n\t\t\t// extra `if` check.\r\n\t\t\t// Decode named character references without trailing `;`, e.g. `&amp`\r\n\t\t\t// This is only a parse error if it gets converted to `&`, or if it is\r\n\t\t\t// followed by `=` in an attribute context.\r\n\t\t\treference = $6;\r\n\t\t\tnext = $7;\r\n\t\t\tif (next && options.isAttributeValue) {\r\n\t\t\t\tif (strict && next == '=') {\r\n\t\t\t\t\tparseError('`&` did not start a character reference');\r\n\t\t\t\t}\r\n\t\t\t\treturn $0;\r\n\t\t\t} else {\r\n\t\t\t\tif (strict) {\r\n\t\t\t\t\tparseError(\r\n\t\t\t\t\t\t'named character reference was not terminated by a semicolon'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\t// Note: there is no need to check `has(decodeMapLegacy, reference)`.\r\n\t\t\t\treturn decodeMapLegacy[reference] + (next || '');\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\t// Expose default options (so they can be overridden globally).\r\n\tdecode.options = {\r\n\t\t'isAttributeValue': false,\r\n\t\t'strict': false\r\n\t};\r\n\r\n\tvar escape = function(string) {\r\n\t\treturn string.replace(regexEscape, function($0) {\r\n\t\t\t// Note: there is no need to check `has(escapeMap, $0)` here.\r\n\t\t\treturn escapeMap[$0];\r\n\t\t});\r\n\t};\r\n\r\n\t/*--------------------------------------------------------------------------*/\r\n\r\n\tvar he = {\r\n\t\t'version': '1.1.1',\r\n\t\t'encode': encode,\r\n\t\t'decode': decode,\r\n\t\t'escape': escape,\r\n\t\t'unescape': decode\r\n\t};\r\n\r\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\r\n\t// like the following:\r\n\tif (\r\n\t\ttypeof define == 'function' &&\r\n\t\ttypeof define.amd == 'object' &&\r\n\t\tdefine.amd\r\n\t) {\r\n\t\tdefine(function() {\r\n\t\t\treturn he;\r\n\t\t});\r\n\t}\telse if (freeExports && !freeExports.nodeType) {\r\n\t\tif (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+\r\n\t\t\tfreeModule.exports = he;\r\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\r\n\t\t\tfor (var key in he) {\r\n\t\t\t\thas(he, key) && (freeExports[key] = he[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t} else { // in Rhino or a web browser\r\n\t\troot.he = he;\r\n\t}\r\n\r\n}(this));\r\n"},2440:function(e,n){e.exports='// Released under MIT license\r\n// Copyright (c) 2009-2010 Dominic Baggott\r\n// Copyright (c) 2009-2010 Ash Berlin\r\n// Copyright (c) 2011 Christoph Dorn <christoph@christophdorn.com> (http://www.christophdorn.com)\r\n\r\n/*jshint browser:true, devel:true */\r\n\r\n(function( expose ) {\r\n\r\n/**\r\n *  class Markdown\r\n *\r\n *  Markdown processing in Javascript done right. We have very particular views\r\n *  on what constitutes \'right\' which include:\r\n *\r\n *  - produces well-formed HTML (this means that em and strong nesting is\r\n *    important)\r\n *\r\n *  - has an intermediate representation to allow processing of parsed data (We\r\n *    in fact have two, both as [JsonML]: a markdown tree and an HTML tree).\r\n *\r\n *  - is easily extensible to add new dialects without having to rewrite the\r\n *    entire parsing mechanics\r\n *\r\n *  - has a good test suite\r\n *\r\n *  This implementation fulfills all of these (except that the test suite could\r\n *  do with expanding to automatically run all the fixtures from other Markdown\r\n *  implementations.)\r\n *\r\n *  ##### Intermediate Representation\r\n *\r\n *  *TODO* Talk about this :) Its JsonML, but document the node names we use.\r\n *\r\n *  [JsonML]: http://jsonml.org/ "JSON Markup Language"\r\n **/\r\nvar Markdown = expose.Markdown = function(dialect) {\r\n  switch (typeof dialect) {\r\n    case "undefined":\r\n      this.dialect = Markdown.dialects.Gruber;\r\n      break;\r\n    case "object":\r\n      this.dialect = dialect;\r\n      break;\r\n    default:\r\n      if ( dialect in Markdown.dialects ) {\r\n        this.dialect = Markdown.dialects[dialect];\r\n      }\r\n      else {\r\n        throw new Error("Unknown Markdown dialect \'" + String(dialect) + "\'");\r\n      }\r\n      break;\r\n  }\r\n  this.em_state = [];\r\n  this.strong_state = [];\r\n  this.debug_indent = "";\r\n};\r\n\r\n/**\r\n *  parse( markdown, [dialect] ) -> JsonML\r\n *  - markdown (String): markdown string to parse\r\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\r\n *\r\n *  Parse `markdown` and return a markdown document as a Markdown.JsonML tree.\r\n **/\r\nexpose.parse = function( source, dialect ) {\r\n  // dialect will default if undefined\r\n  var md = new Markdown( dialect );\r\n  return md.toTree( source );\r\n};\r\n\r\n/**\r\n *  toHTML( markdown, [dialect]  ) -> String\r\n *  toHTML( md_tree ) -> String\r\n *  - markdown (String): markdown string to parse\r\n *  - md_tree (Markdown.JsonML): parsed markdown tree\r\n *\r\n *  Take markdown (either as a string or as a JsonML tree) and run it through\r\n *  [[toHTMLTree]] then turn it into a well-formated HTML fragment.\r\n **/\r\nexpose.toHTML = function toHTML( source , dialect , options ) {\r\n  var input = expose.toHTMLTree( source , dialect , options );\r\n\r\n  return expose.renderJsonML( input );\r\n};\r\n\r\n/**\r\n *  toHTMLTree( markdown, [dialect] ) -> JsonML\r\n *  toHTMLTree( md_tree ) -> JsonML\r\n *  - markdown (String): markdown string to parse\r\n *  - dialect (String | Dialect): the dialect to use, defaults to gruber\r\n *  - md_tree (Markdown.JsonML): parsed markdown tree\r\n *\r\n *  Turn markdown into HTML, represented as a JsonML tree. If a string is given\r\n *  to this function, it is first parsed into a markdown tree by calling\r\n *  [[parse]].\r\n **/\r\nexpose.toHTMLTree = function toHTMLTree( input, dialect , options ) {\r\n  // convert string input to an MD tree\r\n  if ( typeof input ==="string" ) input = this.parse( input, dialect );\r\n\r\n  // Now convert the MD tree to an HTML tree\r\n\r\n  // remove references from the tree\r\n  var attrs = extract_attr( input ),\r\n      refs = {};\r\n\r\n  if ( attrs && attrs.references ) {\r\n    refs = attrs.references;\r\n  }\r\n\r\n  var html = convert_tree_to_html( input, refs , options );\r\n  merge_text_nodes( html );\r\n  return html;\r\n};\r\n\r\n// For Spidermonkey based engines\r\nfunction mk_block_toSource() {\r\n  return "Markdown.mk_block( " +\r\n          uneval(this.toString()) +\r\n          ", " +\r\n          uneval(this.trailing) +\r\n          ", " +\r\n          uneval(this.lineNumber) +\r\n          " )";\r\n}\r\n\r\n// node\r\nfunction mk_block_inspect() {\r\n  var util = require("util");\r\n  return "Markdown.mk_block( " +\r\n          util.inspect(this.toString()) +\r\n          ", " +\r\n          util.inspect(this.trailing) +\r\n          ", " +\r\n          util.inspect(this.lineNumber) +\r\n          " )";\r\n\r\n}\r\n\r\nvar mk_block = Markdown.mk_block = function(block, trail, line) {\r\n  // Be helpful for default case in tests.\r\n  if ( arguments.length == 1 ) trail = "\\n\\n";\r\n\r\n  var s = new String(block);\r\n  s.trailing = trail;\r\n  // To make it clear its not just a string\r\n  s.inspect = mk_block_inspect;\r\n  s.toSource = mk_block_toSource;\r\n\r\n  if ( line != undefined )\r\n    s.lineNumber = line;\r\n\r\n  return s;\r\n};\r\n\r\nfunction count_lines( str ) {\r\n  var n = 0, i = -1;\r\n  while ( ( i = str.indexOf("\\n", i + 1) ) !== -1 ) n++;\r\n  return n;\r\n}\r\n\r\n// Internal - split source into rough blocks\r\nMarkdown.prototype.split_blocks = function splitBlocks( input, startLine ) {\r\n  input = input.replace(/(\\r\\n|\\n|\\r)/g, "\\n");\r\n  // [\\s\\S] matches _anything_ (newline or space)\r\n  // [^] is equivalent but doesn\'t work in IEs.\r\n  var re = /([\\s\\S]+?)($|\\n#|\\n(?:\\s*\\n|$)+)/g,\r\n      blocks = [],\r\n      m;\r\n\r\n  var line_no = 1;\r\n\r\n  if ( ( m = /^(\\s*\\n)/.exec(input) ) != null ) {\r\n    // skip (but count) leading blank lines\r\n    line_no += count_lines( m[0] );\r\n    re.lastIndex = m[0].length;\r\n  }\r\n\r\n  while ( ( m = re.exec(input) ) !== null ) {\r\n    if (m[2] == "\\n#") {\r\n      m[2] = "\\n";\r\n      re.lastIndex--;\r\n    }\r\n    blocks.push( mk_block( m[1], m[2], line_no ) );\r\n    line_no += count_lines( m[0] );\r\n  }\r\n\r\n  return blocks;\r\n};\r\n\r\n/**\r\n *  Markdown#processBlock( block, next ) -> undefined | [ JsonML, ... ]\r\n *  - block (String): the block to process\r\n *  - next (Array): the following blocks\r\n *\r\n * Process `block` and return an array of JsonML nodes representing `block`.\r\n *\r\n * It does this by asking each block level function in the dialect to process\r\n * the block until one can. Succesful handling is indicated by returning an\r\n * array (with zero or more JsonML nodes), failure by a false value.\r\n *\r\n * Blocks handlers are responsible for calling [[Markdown#processInline]]\r\n * themselves as appropriate.\r\n *\r\n * If the blocks were split incorrectly or adjacent blocks need collapsing you\r\n * can adjust `next` in place using shift/splice etc.\r\n *\r\n * If any of this default behaviour is not right for the dialect, you can\r\n * define a `__call__` method on the dialect that will get invoked to handle\r\n * the block processing.\r\n */\r\nMarkdown.prototype.processBlock = function processBlock( block, next ) {\r\n  var cbs = this.dialect.block,\r\n      ord = cbs.__order__;\r\n\r\n  if ( "__call__" in cbs ) {\r\n    return cbs.__call__.call(this, block, next);\r\n  }\r\n\r\n  for ( var i = 0; i < ord.length; i++ ) {\r\n    //D:this.debug( "Testing", ord[i] );\r\n    var res = cbs[ ord[i] ].call( this, block, next );\r\n    if ( res ) {\r\n      //D:this.debug("  matched");\r\n      if ( !isArray(res) || ( res.length > 0 && !( isArray(res[0]) ) ) )\r\n        this.debug(ord[i], "didn\'t return a proper array");\r\n      //D:this.debug( "" );\r\n      return res;\r\n    }\r\n  }\r\n\r\n  // Uhoh! no match! Should we throw an error?\r\n  return [];\r\n};\r\n\r\nMarkdown.prototype.processInline = function processInline( block ) {\r\n  return this.dialect.inline.__call__.call( this, String( block ) );\r\n};\r\n\r\n/**\r\n *  Markdown#toTree( source ) -> JsonML\r\n *  - source (String): markdown source to parse\r\n *\r\n *  Parse `source` into a JsonML tree representing the markdown document.\r\n **/\r\n// custom_tree means set this.tree to `custom_tree` and restore old value on return\r\nMarkdown.prototype.toTree = function toTree( source, custom_root ) {\r\n  var blocks = source instanceof Array ? source : this.split_blocks( source );\r\n\r\n  // Make tree a member variable so its easier to mess with in extensions\r\n  var old_tree = this.tree;\r\n  try {\r\n    this.tree = custom_root || this.tree || [ "markdown" ];\r\n\r\n    blocks:\r\n    while ( blocks.length ) {\r\n      var b = this.processBlock( blocks.shift(), blocks );\r\n\r\n      // Reference blocks and the like won\'t return any content\r\n      if ( !b.length ) continue blocks;\r\n\r\n      this.tree.push.apply( this.tree, b );\r\n    }\r\n    return this.tree;\r\n  }\r\n  finally {\r\n    if ( custom_root ) {\r\n      this.tree = old_tree;\r\n    }\r\n  }\r\n};\r\n\r\n// Noop by default\r\nMarkdown.prototype.debug = function () {\r\n  var args = Array.prototype.slice.call( arguments);\r\n  args.unshift(this.debug_indent);\r\n  if ( typeof print !== "undefined" )\r\n      print.apply( print, args );\r\n  if ( typeof console !== "undefined" && typeof console.log !== "undefined" )\r\n      console.log.apply( null, args );\r\n}\r\n\r\nMarkdown.prototype.loop_re_over_block = function( re, block, cb ) {\r\n  // Dont use /g regexps with this\r\n  var m,\r\n      b = block.valueOf();\r\n\r\n  while ( b.length && (m = re.exec(b) ) != null ) {\r\n    b = b.substr( m[0].length );\r\n    cb.call(this, m);\r\n  }\r\n  return b;\r\n};\r\n\r\n/**\r\n * Markdown.dialects\r\n *\r\n * Namespace of built-in dialects.\r\n **/\r\nMarkdown.dialects = {};\r\n\r\n/**\r\n * Markdown.dialects.Gruber\r\n *\r\n * The default dialect that follows the rules set out by John Gruber\'s\r\n * markdown.pl as closely as possible. Well actually we follow the behaviour of\r\n * that script which in some places is not exactly what the syntax web page\r\n * says.\r\n **/\r\nMarkdown.dialects.Gruber = {\r\n  block: {\r\n    atxHeader: function atxHeader( block, next ) {\r\n      var m = block.match( /^(#{1,6})\\s*(.*?)\\s*#*\\s*(?:\\n|$)/ );\r\n\r\n      if ( !m ) return undefined;\r\n\r\n      var header = [ "header", { level: m[ 1 ].length } ];\r\n      Array.prototype.push.apply(header, this.processInline(m[ 2 ]));\r\n\r\n      if ( m[0].length < block.length )\r\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\r\n\r\n      return [ header ];\r\n    },\r\n\r\n    setextHeader: function setextHeader( block, next ) {\r\n      var m = block.match( /^(.*)\\n([-=])\\2\\2+(?:\\n|$)/ );\r\n\r\n      if ( !m ) return undefined;\r\n\r\n      var level = ( m[ 2 ] === "=" ) ? 1 : 2;\r\n      var header = [ "header", { level : level }, m[ 1 ] ];\r\n\r\n      if ( m[0].length < block.length )\r\n        next.unshift( mk_block( block.substr( m[0].length ), block.trailing, block.lineNumber + 2 ) );\r\n\r\n      return [ header ];\r\n    },\r\n\r\n    code: function code( block, next ) {\r\n      // |    Foo\r\n      // |bar\r\n      // should be a code block followed by a paragraph. Fun\r\n      //\r\n      // There might also be adjacent code block to merge.\r\n\r\n      var ret = [],\r\n          re = /^(?: {0,3}\\t| {4})(.*)\\n?/,\r\n          lines;\r\n\r\n      // 4 spaces + content\r\n      if ( !block.match( re ) ) return undefined;\r\n\r\n      block_search:\r\n      do {\r\n        // Now pull out the rest of the lines\r\n        var b = this.loop_re_over_block(\r\n                  re, block.valueOf(), function( m ) { ret.push( m[1] ); } );\r\n\r\n        if ( b.length ) {\r\n          // Case alluded to in first comment. push it back on as a new block\r\n          next.unshift( mk_block(b, block.trailing) );\r\n          break block_search;\r\n        }\r\n        else if ( next.length ) {\r\n          // Check the next block - it might be code too\r\n          if ( !next[0].match( re ) ) break block_search;\r\n\r\n          // Pull how how many blanks lines follow - minus two to account for .join\r\n          ret.push ( block.trailing.replace(/[^\\n]/g, "").substring(2) );\r\n\r\n          block = next.shift();\r\n        }\r\n        else {\r\n          break block_search;\r\n        }\r\n      } while ( true );\r\n\r\n      return [ [ "code_block", ret.join("\\n") ] ];\r\n    },\r\n\r\n    horizRule: function horizRule( block, next ) {\r\n      // this needs to find any hr in the block to handle abutting blocks\r\n      var m = block.match( /^(?:([\\s\\S]*?)\\n)?[ \\t]*([-_*])(?:[ \\t]*\\2){2,}[ \\t]*(?:\\n([\\s\\S]*))?$/ );\r\n\r\n      if ( !m ) {\r\n        return undefined;\r\n      }\r\n\r\n      var jsonml = [ [ "hr" ] ];\r\n\r\n      // if there\'s a leading abutting block, process it\r\n      if ( m[ 1 ] ) {\r\n        jsonml.unshift.apply( jsonml, this.processBlock( m[ 1 ], [] ) );\r\n      }\r\n\r\n      // if there\'s a trailing abutting block, stick it into next\r\n      if ( m[ 3 ] ) {\r\n        next.unshift( mk_block( m[ 3 ] ) );\r\n      }\r\n\r\n      return jsonml;\r\n    },\r\n\r\n    // There are two types of lists. Tight and loose. Tight lists have no whitespace\r\n    // between the items (and result in text just in the <li>) and loose lists,\r\n    // which have an empty line between list items, resulting in (one or more)\r\n    // paragraphs inside the <li>.\r\n    //\r\n    // There are all sorts weird edge cases about the original markdown.pl\'s\r\n    // handling of lists:\r\n    //\r\n    // * Nested lists are supposed to be indented by four chars per level. But\r\n    //   if they aren\'t, you can get a nested list by indenting by less than\r\n    //   four so long as the indent doesn\'t match an indent of an existing list\r\n    //   item in the \'nest stack\'.\r\n    //\r\n    // * The type of the list (bullet or number) is controlled just by the\r\n    //    first item at the indent. Subsequent changes are ignored unless they\r\n    //    are for nested lists\r\n    //\r\n    lists: (function( ) {\r\n      // Use a closure to hide a few variables.\r\n      var any_list = "[*+-]|\\\\d+\\\\.",\r\n          bullet_list = /[*+-]/,\r\n          number_list = /\\d+\\./,\r\n          // Capture leading indent as it matters for determining nested lists.\r\n          is_list_re = new RegExp( "^( {0,3})(" + any_list + ")[ \\t]+" ),\r\n          indent_re = "(?: {0,3}\\\\t| {4})";\r\n\r\n      // TODO: Cache this regexp for certain depths.\r\n      // Create a regexp suitable for matching an li for a given stack depth\r\n      function regex_for_depth( depth ) {\r\n\r\n        return new RegExp(\r\n          // m[1] = indent, m[2] = list_type\r\n          "(?:^(" + indent_re + "{0," + depth + "} {0,3})(" + any_list + ")\\\\s+)|" +\r\n          // m[3] = cont\r\n          "(^" + indent_re + "{0," + (depth-1) + "}[ ]{0,4})"\r\n        );\r\n      }\r\n      function expand_tab( input ) {\r\n        return input.replace( / {0,3}\\t/g, "    " );\r\n      }\r\n\r\n      // Add inline content `inline` to `li`. inline comes from processInline\r\n      // so is an array of content\r\n      function add(li, loose, inline, nl) {\r\n        if ( loose ) {\r\n          li.push( [ "para" ].concat(inline) );\r\n          return;\r\n        }\r\n        // Hmmm, should this be any block level element or just paras?\r\n        var add_to = li[li.length -1] instanceof Array && li[li.length - 1][0] == "para"\r\n                   ? li[li.length -1]\r\n                   : li;\r\n\r\n        // If there is already some content in this list, add the new line in\r\n        if ( nl && li.length > 1 ) inline.unshift(nl);\r\n\r\n        for ( var i = 0; i < inline.length; i++ ) {\r\n          var what = inline[i],\r\n              is_str = typeof what == "string";\r\n          if ( is_str && add_to.length > 1 && typeof add_to[add_to.length-1] == "string" ) {\r\n            add_to[ add_to.length-1 ] += what;\r\n          }\r\n          else {\r\n            add_to.push( what );\r\n          }\r\n        }\r\n      }\r\n\r\n      // contained means have an indent greater than the current one. On\r\n      // *every* line in the block\r\n      function get_contained_blocks( depth, blocks ) {\r\n\r\n        var re = new RegExp( "^(" + indent_re + "{" + depth + "}.*?\\\\n?)*$" ),\r\n            replace = new RegExp("^" + indent_re + "{" + depth + "}", "gm"),\r\n            ret = [];\r\n\r\n        while ( blocks.length > 0 ) {\r\n          if ( re.exec( blocks[0] ) ) {\r\n            var b = blocks.shift(),\r\n                // Now remove that indent\r\n                x = b.replace( replace, "");\r\n\r\n            ret.push( mk_block( x, b.trailing, b.lineNumber ) );\r\n          }\r\n          else {\r\n            break;\r\n          }\r\n        }\r\n        return ret;\r\n      }\r\n\r\n      // passed to stack.forEach to turn list items up the stack into paras\r\n      function paragraphify(s, i, stack) {\r\n        var list = s.list;\r\n        var last_li = list[list.length-1];\r\n\r\n        if ( last_li[1] instanceof Array && last_li[1][0] == "para" ) {\r\n          return;\r\n        }\r\n        if ( i + 1 == stack.length ) {\r\n          // Last stack frame\r\n          // Keep the same array, but replace the contents\r\n          last_li.push( ["para"].concat( last_li.splice(1, last_li.length - 1) ) );\r\n        }\r\n        else {\r\n          var sublist = last_li.pop();\r\n          last_li.push( ["para"].concat( last_li.splice(1, last_li.length - 1) ), sublist );\r\n        }\r\n      }\r\n\r\n      // The matcher function\r\n      return function( block, next ) {\r\n        var m = block.match( is_list_re );\r\n        if ( !m ) return undefined;\r\n\r\n        function make_list( m ) {\r\n          var list = bullet_list.exec( m[2] )\r\n                   ? ["bulletlist"]\r\n                   : ["numberlist"];\r\n\r\n          stack.push( { list: list, indent: m[1] } );\r\n          return list;\r\n        }\r\n\r\n\r\n        var stack = [], // Stack of lists for nesting.\r\n            list = make_list( m ),\r\n            last_li,\r\n            loose = false,\r\n            ret = [ stack[0].list ],\r\n            i;\r\n\r\n        // Loop to search over block looking for inner block elements and loose lists\r\n        loose_search:\r\n        while ( true ) {\r\n          // Split into lines preserving new lines at end of line\r\n          var lines = block.split( /(?=\\n)/ );\r\n\r\n          // We have to grab all lines for a li and call processInline on them\r\n          // once as there are some inline things that can span lines.\r\n          var li_accumulate = "";\r\n\r\n          // Loop over the lines in this block looking for tight lists.\r\n          tight_search:\r\n          for ( var line_no = 0; line_no < lines.length; line_no++ ) {\r\n            var nl = "",\r\n                l = lines[line_no].replace(/^\\n/, function(n) { nl = n; return ""; });\r\n\r\n            // TODO: really should cache this\r\n            var line_re = regex_for_depth( stack.length );\r\n\r\n            m = l.match( line_re );\r\n            //print( "line:", uneval(l), "\\nline match:", uneval(m) );\r\n\r\n            // We have a list item\r\n            if ( m[1] !== undefined ) {\r\n              // Process the previous list item, if any\r\n              if ( li_accumulate.length ) {\r\n                add( last_li, loose, this.processInline( li_accumulate ), nl );\r\n                // Loose mode will have been dealt with. Reset it\r\n                loose = false;\r\n                li_accumulate = "";\r\n              }\r\n\r\n              m[1] = expand_tab( m[1] );\r\n              var wanted_depth = Math.floor(m[1].length/4)+1;\r\n              //print( "want:", wanted_depth, "stack:", stack.length);\r\n              if ( wanted_depth > stack.length ) {\r\n                // Deep enough for a nested list outright\r\n                //print ( "new nested list" );\r\n                list = make_list( m );\r\n                last_li.push( list );\r\n                last_li = list[1] = [ "listitem" ];\r\n              }\r\n              else {\r\n                // We aren\'t deep enough to be strictly a new level. This is\r\n                // where Md.pl goes nuts. If the indent matches a level in the\r\n                // stack, put it there, else put it one deeper then the\r\n                // wanted_depth deserves.\r\n                var found = false;\r\n                for ( i = 0; i < stack.length; i++ ) {\r\n                  if ( stack[ i ].indent != m[1] ) continue;\r\n                  list = stack[ i ].list;\r\n                  stack.splice( i+1, stack.length - (i+1) );\r\n                  found = true;\r\n                  break;\r\n                }\r\n\r\n                if (!found) {\r\n                  //print("not found. l:", uneval(l));\r\n                  wanted_depth++;\r\n                  if ( wanted_depth <= stack.length ) {\r\n                    stack.splice(wanted_depth, stack.length - wanted_depth);\r\n                    //print("Desired depth now", wanted_depth, "stack:", stack.length);\r\n                    list = stack[wanted_depth-1].list;\r\n                    //print("list:", uneval(list) );\r\n                  }\r\n                  else {\r\n                    //print ("made new stack for messy indent");\r\n                    list = make_list(m);\r\n                    last_li.push(list);\r\n                  }\r\n                }\r\n\r\n                //print( uneval(list), "last", list === stack[stack.length-1].list );\r\n                last_li = [ "listitem" ];\r\n                list.push(last_li);\r\n              } // end depth of shenegains\r\n              nl = "";\r\n            }\r\n\r\n            // Add content\r\n            if ( l.length > m[0].length ) {\r\n              li_accumulate += nl + l.substr( m[0].length );\r\n            }\r\n          } // tight_search\r\n\r\n          if ( li_accumulate.length ) {\r\n            add( last_li, loose, this.processInline( li_accumulate ), nl );\r\n            // Loose mode will have been dealt with. Reset it\r\n            loose = false;\r\n            li_accumulate = "";\r\n          }\r\n\r\n          // Look at the next block - we might have a loose list. Or an extra\r\n          // paragraph for the current li\r\n          var contained = get_contained_blocks( stack.length, next );\r\n\r\n          // Deal with code blocks or properly nested lists\r\n          if ( contained.length > 0 ) {\r\n            // Make sure all listitems up the stack are paragraphs\r\n            forEach( stack, paragraphify, this);\r\n\r\n            last_li.push.apply( last_li, this.toTree( contained, [] ) );\r\n          }\r\n\r\n          var next_block = next[0] && next[0].valueOf() || "";\r\n\r\n          if ( next_block.match(is_list_re) || next_block.match( /^ / ) ) {\r\n            block = next.shift();\r\n\r\n            // Check for an HR following a list: features/lists/hr_abutting\r\n            var hr = this.dialect.block.horizRule( block, next );\r\n\r\n            if ( hr ) {\r\n              ret.push.apply(ret, hr);\r\n              break;\r\n            }\r\n\r\n            // Make sure all listitems up the stack are paragraphs\r\n            forEach( stack, paragraphify, this);\r\n\r\n            loose = true;\r\n            continue loose_search;\r\n          }\r\n          break;\r\n        } // loose_search\r\n\r\n        return ret;\r\n      };\r\n    })(),\r\n\r\n    blockquote: function blockquote( block, next ) {\r\n      if ( !block.match( /^>/m ) )\r\n        return undefined;\r\n\r\n      var jsonml = [];\r\n\r\n      // separate out the leading abutting block, if any. I.e. in this case:\r\n      //\r\n      //  a\r\n      //  > b\r\n      //\r\n      if ( block[ 0 ] != ">" ) {\r\n        var lines = block.split( /\\n/ ),\r\n            prev = [],\r\n            line_no = block.lineNumber;\r\n\r\n        // keep shifting lines until you find a crotchet\r\n        while ( lines.length && lines[ 0 ][ 0 ] != ">" ) {\r\n            prev.push( lines.shift() );\r\n            line_no++;\r\n        }\r\n\r\n        var abutting = mk_block( prev.join( "\\n" ), "\\n", block.lineNumber );\r\n        jsonml.push.apply( jsonml, this.processBlock( abutting, [] ) );\r\n        // reassemble new block of just block quotes!\r\n        block = mk_block( lines.join( "\\n" ), block.trailing, line_no );\r\n      }\r\n\r\n\r\n      // if the next block is also a blockquote merge it in\r\n      while ( next.length && next[ 0 ][ 0 ] == ">" ) {\r\n        var b = next.shift();\r\n        block = mk_block( block + block.trailing + b, b.trailing, block.lineNumber );\r\n      }\r\n\r\n      // Strip off the leading "> " and re-process as a block.\r\n      var input = block.replace( /^> ?/gm, "" ),\r\n          old_tree = this.tree,\r\n          processedBlock = this.toTree( input, [ "blockquote" ] ),\r\n          attr = extract_attr( processedBlock );\r\n\r\n      // If any link references were found get rid of them\r\n      if ( attr && attr.references ) {\r\n        delete attr.references;\r\n        // And then remove the attribute object if it\'s empty\r\n        if ( isEmpty( attr ) ) {\r\n          processedBlock.splice( 1, 1 );\r\n        }\r\n      }\r\n\r\n      jsonml.push( processedBlock );\r\n      return jsonml;\r\n    },\r\n\r\n    referenceDefn: function referenceDefn( block, next) {\r\n      var re = /^\\s*\\[(.*?)\\]:\\s*(\\S+)(?:\\s+(?:([\'"])(.*?)\\3|\\((.*?)\\)))?\\n?/;\r\n      // interesting matches are [ , ref_id, url, , title, title ]\r\n\r\n      if ( !block.match(re) )\r\n        return undefined;\r\n\r\n      // make an attribute node if it doesn\'t exist\r\n      if ( !extract_attr( this.tree ) ) {\r\n        this.tree.splice( 1, 0, {} );\r\n      }\r\n\r\n      var attrs = extract_attr( this.tree );\r\n\r\n      // make a references hash if it doesn\'t exist\r\n      if ( attrs.references === undefined ) {\r\n        attrs.references = {};\r\n      }\r\n\r\n      var b = this.loop_re_over_block(re, block, function( m ) {\r\n\r\n        if ( m[2] && m[2][0] == "<" && m[2][m[2].length-1] == ">" )\r\n          m[2] = m[2].substring( 1, m[2].length - 1 );\r\n\r\n        var ref = attrs.references[ m[1].toLowerCase() ] = {\r\n          href: m[2]\r\n        };\r\n\r\n        if ( m[4] !== undefined )\r\n          ref.title = m[4];\r\n        else if ( m[5] !== undefined )\r\n          ref.title = m[5];\r\n\r\n      } );\r\n\r\n      if ( b.length )\r\n        next.unshift( mk_block( b, block.trailing ) );\r\n\r\n      return [];\r\n    },\r\n\r\n    para: function para( block, next ) {\r\n      // everything\'s a para!\r\n      return [ ["para"].concat( this.processInline( block ) ) ];\r\n    }\r\n  }\r\n};\r\n\r\nMarkdown.dialects.Gruber.inline = {\r\n\r\n    __oneElement__: function oneElement( text, patterns_or_re, previous_nodes ) {\r\n      var m,\r\n          res,\r\n          lastIndex = 0;\r\n\r\n      patterns_or_re = patterns_or_re || this.dialect.inline.__patterns__;\r\n      var re = new RegExp( "([\\\\s\\\\S]*?)(" + (patterns_or_re.source || patterns_or_re) + ")" );\r\n\r\n      m = re.exec( text );\r\n      if (!m) {\r\n        // Just boring text\r\n        return [ text.length, text ];\r\n      }\r\n      else if ( m[1] ) {\r\n        // Some un-interesting text matched. Return that first\r\n        return [ m[1].length, m[1] ];\r\n      }\r\n\r\n      var res;\r\n      if ( m[2] in this.dialect.inline ) {\r\n        res = this.dialect.inline[ m[2] ].call(\r\n                  this,\r\n                  text.substr( m.index ), m, previous_nodes || [] );\r\n      }\r\n      // Default for now to make dev easier. just slurp special and output it.\r\n      res = res || [ m[2].length, m[2] ];\r\n      return res;\r\n    },\r\n\r\n    __call__: function inline( text, patterns ) {\r\n\r\n      var out = [],\r\n          res;\r\n\r\n      function add(x) {\r\n        //D:self.debug("  adding output", uneval(x));\r\n        if ( typeof x == "string" && typeof out[out.length-1] == "string" )\r\n          out[ out.length-1 ] += x;\r\n        else\r\n          out.push(x);\r\n      }\r\n\r\n      while ( text.length > 0 ) {\r\n        res = this.dialect.inline.__oneElement__.call(this, text, patterns, out );\r\n        text = text.substr( res.shift() );\r\n        forEach(res, add )\r\n      }\r\n\r\n      return out;\r\n    },\r\n\r\n    // These characters are intersting elsewhere, so have rules for them so that\r\n    // chunks of plain text blocks don\'t include them\r\n    "]": function () {},\r\n    "}": function () {},\r\n\r\n    __escape__ : /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-]/,\r\n\r\n    "\\\\": function escaped( text ) {\r\n      // [ length of input processed, node/children to add... ]\r\n      // Only esacape: \\ ` * _ { } [ ] ( ) # * + - . !\r\n      if ( this.dialect.inline.__escape__.exec( text ) )\r\n        return [ 2, text.charAt( 1 ) ];\r\n      else\r\n        // Not an esacpe\r\n        return [ 1, "\\\\" ];\r\n    },\r\n\r\n    "![": function image( text ) {\r\n\r\n      // Unlike images, alt text is plain text only. no other elements are\r\n      // allowed in there\r\n\r\n      // ![Alt text](/path/to/img.jpg "Optional title")\r\n      //      1          2            3       4         <--- captures\r\n      var m = text.match( /^!\\[(.*?)\\][ \\t]*\\([ \\t]*([^")]*?)(?:[ \\t]+(["\'])(.*?)\\3)?[ \\t]*\\)/ );\r\n\r\n      if ( m ) {\r\n        if ( m[2] && m[2][0] == "<" && m[2][m[2].length-1] == ">" )\r\n          m[2] = m[2].substring( 1, m[2].length - 1 );\r\n\r\n        m[2] = this.dialect.inline.__call__.call( this, m[2], /\\\\/ )[0];\r\n\r\n        var attrs = { alt: m[1], href: m[2] || "" };\r\n        if ( m[4] !== undefined)\r\n          attrs.title = m[4];\r\n\r\n        return [ m[0].length, [ "img", attrs ] ];\r\n      }\r\n\r\n      // ![Alt text][id]\r\n      m = text.match( /^!\\[(.*?)\\][ \\t]*\\[(.*?)\\]/ );\r\n\r\n      if ( m ) {\r\n        // We can\'t check if the reference is known here as it likely wont be\r\n        // found till after. Check it in md tree->hmtl tree conversion\r\n        return [ m[0].length, [ "img_ref", { alt: m[1], ref: m[2].toLowerCase(), original: m[0] } ] ];\r\n      }\r\n\r\n      // Just consume the \'![\'\r\n      return [ 2, "![" ];\r\n    },\r\n\r\n    "[": function link( text ) {\r\n\r\n      var orig = String(text);\r\n      // Inline content is possible inside `link text`\r\n      var res = Markdown.DialectHelpers.inline_until_char.call( this, text.substr(1), "]" );\r\n\r\n      // No closing \']\' found. Just consume the [\r\n      if ( !res ) return [ 1, "[" ];\r\n\r\n      var consumed = 1 + res[ 0 ],\r\n          children = res[ 1 ],\r\n          link,\r\n          attrs;\r\n\r\n      // At this point the first [...] has been parsed. See what follows to find\r\n      // out which kind of link we are (reference or direct url)\r\n      text = text.substr( consumed );\r\n\r\n      // [link text](/path/to/img.jpg "Optional title")\r\n      //                 1            2       3         <--- captures\r\n      // This will capture up to the last paren in the block. We then pull\r\n      // back based on if there a matching ones in the url\r\n      //    ([here](/url/(test))\r\n      // The parens have to be balanced\r\n      var m = text.match( /^\\s*\\([ \\t]*([^"\']*)(?:[ \\t]+(["\'])(.*?)\\2)?[ \\t]*\\)/ );\r\n      if ( m ) {\r\n        var url = m[1];\r\n        consumed += m[0].length;\r\n\r\n        if ( url && url[0] == "<" && url[url.length-1] == ">" )\r\n          url = url.substring( 1, url.length - 1 );\r\n\r\n        // If there is a title we don\'t have to worry about parens in the url\r\n        if ( !m[3] ) {\r\n          var open_parens = 1; // One open that isn\'t in the capture\r\n          for ( var len = 0; len < url.length; len++ ) {\r\n            switch ( url[len] ) {\r\n            case "(":\r\n              open_parens++;\r\n              break;\r\n            case ")":\r\n              if ( --open_parens == 0) {\r\n                consumed -= url.length - len;\r\n                url = url.substring(0, len);\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Process escapes only\r\n        url = this.dialect.inline.__call__.call( this, url, /\\\\/ )[0];\r\n\r\n        attrs = { href: url || "" };\r\n        if ( m[3] !== undefined)\r\n          attrs.title = m[3];\r\n\r\n        link = [ "link", attrs ].concat( children );\r\n        return [ consumed, link ];\r\n      }\r\n\r\n      // [Alt text][id]\r\n      // [Alt text] [id]\r\n      m = text.match( /^\\s*\\[(.*?)\\]/ );\r\n\r\n      if ( m ) {\r\n\r\n        consumed += m[ 0 ].length;\r\n\r\n        // [links][] uses links as its reference\r\n        attrs = { ref: ( m[ 1 ] || String(children) ).toLowerCase(),  original: orig.substr( 0, consumed ) };\r\n\r\n        link = [ "link_ref", attrs ].concat( children );\r\n\r\n        // We can\'t check if the reference is known here as it likely wont be\r\n        // found till after. Check it in md tree->hmtl tree conversion.\r\n        // Store the original so that conversion can revert if the ref isn\'t found.\r\n        return [ consumed, link ];\r\n      }\r\n\r\n      // [id]\r\n      // Only if id is plain (no formatting.)\r\n      if ( children.length == 1 && typeof children[0] == "string" ) {\r\n\r\n        attrs = { ref: children[0].toLowerCase(),  original: orig.substr( 0, consumed ) };\r\n        link = [ "link_ref", attrs, children[0] ];\r\n        return [ consumed, link ];\r\n      }\r\n\r\n      // Just consume the "["\r\n      return [ 1, "[" ];\r\n    },\r\n\r\n\r\n    "<": function autoLink( text ) {\r\n      var m;\r\n\r\n      if ( ( m = text.match( /^<(?:((https?|ftp|mailto):[^>]+)|(.*?@.*?\\.[a-zA-Z]+))>/ ) ) != null ) {\r\n        if ( m[3] ) {\r\n          return [ m[0].length, [ "link", { href: "mailto:" + m[3] }, m[3] ] ];\r\n\r\n        }\r\n        else if ( m[2] == "mailto" ) {\r\n          return [ m[0].length, [ "link", { href: m[1] }, m[1].substr("mailto:".length ) ] ];\r\n        }\r\n        else\r\n          return [ m[0].length, [ "link", { href: m[1] }, m[1] ] ];\r\n      }\r\n\r\n      return [ 1, "<" ];\r\n    },\r\n\r\n    "`": function inlineCode( text ) {\r\n      // Inline code block. as many backticks as you like to start it\r\n      // Always skip over the opening ticks.\r\n      var m = text.match( /(`+)(([\\s\\S]*?)\\1)/ );\r\n\r\n      if ( m && m[2] )\r\n        return [ m[1].length + m[2].length, [ "inlinecode", m[3] ] ];\r\n      else {\r\n        // TODO: No matching end code found - warn!\r\n        return [ 1, "`" ];\r\n      }\r\n    },\r\n\r\n    "  \\n": function lineBreak( text ) {\r\n      return [ 3, [ "linebreak" ] ];\r\n    }\r\n\r\n};\r\n\r\n// Meta Helper/generator method for em and strong handling\r\nfunction strong_em( tag, md ) {\r\n\r\n  var state_slot = tag + "_state",\r\n      other_slot = tag == "strong" ? "em_state" : "strong_state";\r\n\r\n  function CloseTag(len) {\r\n    this.len_after = len;\r\n    this.name = "close_" + md;\r\n  }\r\n\r\n  return function ( text, orig_match ) {\r\n\r\n    if ( this[state_slot][0] == md ) {\r\n      // Most recent em is of this type\r\n      //D:this.debug("closing", md);\r\n      this[state_slot].shift();\r\n\r\n      // "Consume" everything to go back to the recrusion in the else-block below\r\n      return[ text.length, new CloseTag(text.length-md.length) ];\r\n    }\r\n    else {\r\n      // Store a clone of the em/strong states\r\n      var other = this[other_slot].slice(),\r\n          state = this[state_slot].slice();\r\n\r\n      this[state_slot].unshift(md);\r\n\r\n      //D:this.debug_indent += "  ";\r\n\r\n      // Recurse\r\n      var res = this.processInline( text.substr( md.length ) );\r\n      //D:this.debug_indent = this.debug_indent.substr(2);\r\n\r\n      var last = res[res.length - 1];\r\n\r\n      //D:this.debug("processInline from", tag + ": ", uneval( res ) );\r\n\r\n      var check = this[state_slot].shift();\r\n      if ( last instanceof CloseTag ) {\r\n        res.pop();\r\n        // We matched! Huzzah.\r\n        var consumed = text.length - last.len_after;\r\n        return [ consumed, [ tag ].concat(res) ];\r\n      }\r\n      else {\r\n        // Restore the state of the other kind. We might have mistakenly closed it.\r\n        this[other_slot] = other;\r\n        this[state_slot] = state;\r\n\r\n        // We can\'t reuse the processed result as it could have wrong parsing contexts in it.\r\n        return [ md.length, md ];\r\n      }\r\n    }\r\n  }; // End returned function\r\n}\r\n\r\nMarkdown.dialects.Gruber.inline["**"] = strong_em("strong", "**");\r\nMarkdown.dialects.Gruber.inline["__"] = strong_em("strong", "__");\r\nMarkdown.dialects.Gruber.inline["*"]  = strong_em("em", "*");\r\nMarkdown.dialects.Gruber.inline["_"]  = strong_em("em", "_");\r\n\r\n\r\n// Build default order from insertion order.\r\nMarkdown.buildBlockOrder = function(d) {\r\n  var ord = [];\r\n  for ( var i in d ) {\r\n    if ( i == "__order__" || i == "__call__" ) continue;\r\n    ord.push( i );\r\n  }\r\n  d.__order__ = ord;\r\n};\r\n\r\n// Build patterns for inline matcher\r\nMarkdown.buildInlinePatterns = function(d) {\r\n  var patterns = [];\r\n\r\n  for ( var i in d ) {\r\n    // __foo__ is reserved and not a pattern\r\n    if ( i.match( /^__.*__$/) ) continue;\r\n    var l = i.replace( /([\\\\.*+?|()\\[\\]{}])/g, "\\\\$1" )\r\n             .replace( /\\n/, "\\\\n" );\r\n    patterns.push( i.length == 1 ? l : "(?:" + l + ")" );\r\n  }\r\n\r\n  patterns = patterns.join("|");\r\n  d.__patterns__ = patterns;\r\n  //print("patterns:", uneval( patterns ) );\r\n\r\n  var fn = d.__call__;\r\n  d.__call__ = function(text, pattern) {\r\n    if ( pattern != undefined ) {\r\n      return fn.call(this, text, pattern);\r\n    }\r\n    else\r\n    {\r\n      return fn.call(this, text, patterns);\r\n    }\r\n  };\r\n};\r\n\r\nMarkdown.DialectHelpers = {};\r\nMarkdown.DialectHelpers.inline_until_char = function( text, want ) {\r\n  var consumed = 0,\r\n      nodes = [];\r\n\r\n  while ( true ) {\r\n    if ( text.charAt( consumed ) == want ) {\r\n      // Found the character we were looking for\r\n      consumed++;\r\n      return [ consumed, nodes ];\r\n    }\r\n\r\n    if ( consumed >= text.length ) {\r\n      // No closing char found. Abort.\r\n      return null;\r\n    }\r\n\r\n    var res = this.dialect.inline.__oneElement__.call(this, text.substr( consumed ) );\r\n    consumed += res[ 0 ];\r\n    // Add any returned nodes.\r\n    nodes.push.apply( nodes, res.slice( 1 ) );\r\n  }\r\n}\r\n\r\n// Helper function to make sub-classing a dialect easier\r\nMarkdown.subclassDialect = function( d ) {\r\n  function Block() {}\r\n  Block.prototype = d.block;\r\n  function Inline() {}\r\n  Inline.prototype = d.inline;\r\n\r\n  return { block: new Block(), inline: new Inline() };\r\n};\r\n\r\nMarkdown.buildBlockOrder ( Markdown.dialects.Gruber.block );\r\nMarkdown.buildInlinePatterns( Markdown.dialects.Gruber.inline );\r\n\r\nMarkdown.dialects.Maruku = Markdown.subclassDialect( Markdown.dialects.Gruber );\r\n\r\nMarkdown.dialects.Maruku.processMetaHash = function processMetaHash( meta_string ) {\r\n  var meta = split_meta_hash( meta_string ),\r\n      attr = {};\r\n\r\n  for ( var i = 0; i < meta.length; ++i ) {\r\n    // id: #foo\r\n    if ( /^#/.test( meta[ i ] ) ) {\r\n      attr.id = meta[ i ].substring( 1 );\r\n    }\r\n    // class: .foo\r\n    else if ( /^\\./.test( meta[ i ] ) ) {\r\n      // if class already exists, append the new one\r\n      if ( attr["class"] ) {\r\n        attr["class"] = attr["class"] + meta[ i ].replace( /./, " " );\r\n      }\r\n      else {\r\n        attr["class"] = meta[ i ].substring( 1 );\r\n      }\r\n    }\r\n    // attribute: foo=bar\r\n    else if ( /\\=/.test( meta[ i ] ) ) {\r\n      var s = meta[ i ].split( /\\=/ );\r\n      attr[ s[ 0 ] ] = s[ 1 ];\r\n    }\r\n  }\r\n\r\n  return attr;\r\n}\r\n\r\nfunction split_meta_hash( meta_string ) {\r\n  var meta = meta_string.split( "" ),\r\n      parts = [ "" ],\r\n      in_quotes = false;\r\n\r\n  while ( meta.length ) {\r\n    var letter = meta.shift();\r\n    switch ( letter ) {\r\n      case " " :\r\n        // if we\'re in a quoted section, keep it\r\n        if ( in_quotes ) {\r\n          parts[ parts.length - 1 ] += letter;\r\n        }\r\n        // otherwise make a new part\r\n        else {\r\n          parts.push( "" );\r\n        }\r\n        break;\r\n      case "\'" :\r\n      case \'"\' :\r\n        // reverse the quotes and move straight on\r\n        in_quotes = !in_quotes;\r\n        break;\r\n      case "\\\\" :\r\n        // shift off the next letter to be used straight away.\r\n        // it was escaped so we\'ll keep it whatever it is\r\n        letter = meta.shift();\r\n      default :\r\n        parts[ parts.length - 1 ] += letter;\r\n        break;\r\n    }\r\n  }\r\n\r\n  return parts;\r\n}\r\n\r\nMarkdown.dialects.Maruku.block.document_meta = function document_meta( block, next ) {\r\n  // we\'re only interested in the first block\r\n  if ( block.lineNumber > 1 ) return undefined;\r\n\r\n  // document_meta blocks consist of one or more lines of `Key: Value\\n`\r\n  if ( ! block.match( /^(?:\\w+:.*\\n)*\\w+:.*$/ ) ) return undefined;\r\n\r\n  // make an attribute node if it doesn\'t exist\r\n  if ( !extract_attr( this.tree ) ) {\r\n    this.tree.splice( 1, 0, {} );\r\n  }\r\n\r\n  var pairs = block.split( /\\n/ );\r\n  for ( p in pairs ) {\r\n    var m = pairs[ p ].match( /(\\w+):\\s*(.*)$/ ),\r\n        key = m[ 1 ].toLowerCase(),\r\n        value = m[ 2 ];\r\n\r\n    this.tree[ 1 ][ key ] = value;\r\n  }\r\n\r\n  // document_meta produces no content!\r\n  return [];\r\n};\r\n\r\nMarkdown.dialects.Maruku.block.block_meta = function block_meta( block, next ) {\r\n  // check if the last line of the block is an meta hash\r\n  var m = block.match( /(^|\\n) {0,3}\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}$/ );\r\n  if ( !m ) return undefined;\r\n\r\n  // process the meta hash\r\n  var attr = this.dialect.processMetaHash( m[ 2 ] );\r\n\r\n  var hash;\r\n\r\n  // if we matched ^ then we need to apply meta to the previous block\r\n  if ( m[ 1 ] === "" ) {\r\n    var node = this.tree[ this.tree.length - 1 ];\r\n    hash = extract_attr( node );\r\n\r\n    // if the node is a string (rather than JsonML), bail\r\n    if ( typeof node === "string" ) return undefined;\r\n\r\n    // create the attribute hash if it doesn\'t exist\r\n    if ( !hash ) {\r\n      hash = {};\r\n      node.splice( 1, 0, hash );\r\n    }\r\n\r\n    // add the attributes in\r\n    for ( a in attr ) {\r\n      hash[ a ] = attr[ a ];\r\n    }\r\n\r\n    // return nothing so the meta hash is removed\r\n    return [];\r\n  }\r\n\r\n  // pull the meta hash off the block and process what\'s left\r\n  var b = block.replace( /\\n.*$/, "" ),\r\n      result = this.processBlock( b, [] );\r\n\r\n  // get or make the attributes hash\r\n  hash = extract_attr( result[ 0 ] );\r\n  if ( !hash ) {\r\n    hash = {};\r\n    result[ 0 ].splice( 1, 0, hash );\r\n  }\r\n\r\n  // attach the attributes to the block\r\n  for ( a in attr ) {\r\n    hash[ a ] = attr[ a ];\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nMarkdown.dialects.Maruku.block.definition_list = function definition_list( block, next ) {\r\n  // one or more terms followed by one or more definitions, in a single block\r\n  var tight = /^((?:[^\\s:].*\\n)+):\\s+([\\s\\S]+)$/,\r\n      list = [ "dl" ],\r\n      i, m;\r\n\r\n  // see if we\'re dealing with a tight or loose block\r\n  if ( ( m = block.match( tight ) ) ) {\r\n    // pull subsequent tight DL blocks out of `next`\r\n    var blocks = [ block ];\r\n    while ( next.length && tight.exec( next[ 0 ] ) ) {\r\n      blocks.push( next.shift() );\r\n    }\r\n\r\n    for ( var b = 0; b < blocks.length; ++b ) {\r\n      var m = blocks[ b ].match( tight ),\r\n          terms = m[ 1 ].replace( /\\n$/, "" ).split( /\\n/ ),\r\n          defns = m[ 2 ].split( /\\n:\\s+/ );\r\n\r\n      // print( uneval( m ) );\r\n\r\n      for ( i = 0; i < terms.length; ++i ) {\r\n        list.push( [ "dt", terms[ i ] ] );\r\n      }\r\n\r\n      for ( i = 0; i < defns.length; ++i ) {\r\n        // run inline processing over the definition\r\n        list.push( [ "dd" ].concat( this.processInline( defns[ i ].replace( /(\\n)\\s+/, "$1" ) ) ) );\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    return undefined;\r\n  }\r\n\r\n  return [ list ];\r\n};\r\n\r\n// splits on unescaped instances of @ch. If @ch is not a character the result\r\n// can be unpredictable\r\n\r\nMarkdown.dialects.Maruku.block.table = function table (block, next) {\r\n\r\n    var _split_on_unescaped = function(s, ch) {\r\n        ch = ch || \'\\\\s\';\r\n        if (ch.match(/^[\\\\|\\[\\]{}?*.+^$]$/)) { ch = \'\\\\\' + ch; }\r\n        var res = [ ],\r\n            r = new RegExp(\'^((?:\\\\\\\\.|[^\\\\\\\\\' + ch + \'])*)\' + ch + \'(.*)\'),\r\n            m;\r\n        while(m = s.match(r)) {\r\n            res.push(m[1]);\r\n            s = m[2];\r\n        }\r\n        res.push(s);\r\n        return res;\r\n    }\r\n\r\n    var leading_pipe = /^ {0,3}\\|(.+)\\n {0,3}\\|\\s*([\\-:]+[\\-| :]*)\\n((?:\\s*\\|.*(?:\\n|$))*)(?=\\n|$)/,\r\n        // find at least an unescaped pipe in each line\r\n        no_leading_pipe = /^ {0,3}(\\S(?:\\\\.|[^\\\\|])*\\|.*)\\n {0,3}([\\-:]+\\s*\\|[\\-| :]*)\\n((?:(?:\\\\.|[^\\\\|])*\\|.*(?:\\n|$))*)(?=\\n|$)/,\r\n        i, m;\r\n    if (m = block.match(leading_pipe)) {\r\n        // remove leading pipes in contents\r\n        // (header and horizontal rule already have the leading pipe left out)\r\n        m[3] = m[3].replace(/^\\s*\\|/gm, \'\');\r\n    } else if (! ( m = block.match(no_leading_pipe))) {\r\n        return undefined;\r\n    }\r\n\r\n    var table = [ "table", [ "thead", [ "tr" ] ], [ "tbody" ] ];\r\n\r\n    // remove trailing pipes, then split on pipes\r\n    // (no escaped pipes are allowed in horizontal rule)\r\n    m[2] = m[2].replace(/\\|\\s*$/, \'\').split(\'|\');\r\n\r\n    // process alignment\r\n    var html_attrs = [ ];\r\n    forEach (m[2], function (s) {\r\n        if (s.match(/^\\s*-+:\\s*$/))       html_attrs.push({align: "right"});\r\n        else if (s.match(/^\\s*:-+\\s*$/))  html_attrs.push({align: "left"});\r\n        else if (s.match(/^\\s*:-+:\\s*$/)) html_attrs.push({align: "center"});\r\n        else                              html_attrs.push({});\r\n    });\r\n\r\n    // now for the header, avoid escaped pipes\r\n    m[1] = _split_on_unescaped(m[1].replace(/\\|\\s*$/, \'\'), \'|\');\r\n    for (i = 0; i < m[1].length; i++) {\r\n        table[1][1].push([\'th\', html_attrs[i] || {}].concat(\r\n            this.processInline(m[1][i].trim())));\r\n    }\r\n\r\n    // now for body contents\r\n    forEach (m[3].replace(/\\|\\s*$/mg, \'\').split(\'\\n\'), function (row) {\r\n        var html_row = [\'tr\'];\r\n        row = _split_on_unescaped(row, \'|\');\r\n        for (i = 0; i < row.length; i++) {\r\n            html_row.push([\'td\', html_attrs[i] || {}].concat(this.processInline(row[i].trim())));\r\n        }\r\n        table[2].push(html_row);\r\n    }, this);\r\n\r\n    return [table];\r\n}\r\n\r\nMarkdown.dialects.Maruku.inline[ "{:" ] = function inline_meta( text, matches, out ) {\r\n  if ( !out.length ) {\r\n    return [ 2, "{:" ];\r\n  }\r\n\r\n  // get the preceeding element\r\n  var before = out[ out.length - 1 ];\r\n\r\n  if ( typeof before === "string" ) {\r\n    return [ 2, "{:" ];\r\n  }\r\n\r\n  // match a meta hash\r\n  var m = text.match( /^\\{:\\s*((?:\\\\\\}|[^\\}])*)\\s*\\}/ );\r\n\r\n  // no match, false alarm\r\n  if ( !m ) {\r\n    return [ 2, "{:" ];\r\n  }\r\n\r\n  // attach the attributes to the preceeding element\r\n  var meta = this.dialect.processMetaHash( m[ 1 ] ),\r\n      attr = extract_attr( before );\r\n\r\n  if ( !attr ) {\r\n    attr = {};\r\n    before.splice( 1, 0, attr );\r\n  }\r\n\r\n  for ( var k in meta ) {\r\n    attr[ k ] = meta[ k ];\r\n  }\r\n\r\n  // cut out the string and replace it with nothing\r\n  return [ m[ 0 ].length, "" ];\r\n};\r\n\r\nMarkdown.dialects.Maruku.inline.__escape__ = /^\\\\[\\\\`\\*_{}\\[\\]()#\\+.!\\-|:]/;\r\n\r\nMarkdown.buildBlockOrder ( Markdown.dialects.Maruku.block );\r\nMarkdown.buildInlinePatterns( Markdown.dialects.Maruku.inline );\r\n\r\nvar isArray = Array.isArray || function(obj) {\r\n  return Object.prototype.toString.call(obj) == "[object Array]";\r\n};\r\n\r\nvar forEach;\r\n// Don\'t mess with Array.prototype. Its not friendly\r\nif ( Array.prototype.forEach ) {\r\n  forEach = function( arr, cb, thisp ) {\r\n    return arr.forEach( cb, thisp );\r\n  };\r\n}\r\nelse {\r\n  forEach = function(arr, cb, thisp) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      cb.call(thisp || arr, arr[i], i, arr);\r\n    }\r\n  }\r\n}\r\n\r\nvar isEmpty = function( obj ) {\r\n  for ( var key in obj ) {\r\n    if ( hasOwnProperty.call( obj, key ) ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction extract_attr( jsonml ) {\r\n  return isArray(jsonml)\r\n      && jsonml.length > 1\r\n      && typeof jsonml[ 1 ] === "object"\r\n      && !( isArray(jsonml[ 1 ]) )\r\n      ? jsonml[ 1 ]\r\n      : undefined;\r\n}\r\n\r\n\r\n\r\n/**\r\n *  renderJsonML( jsonml[, options] ) -> String\r\n *  - jsonml (Array): JsonML array to render to XML\r\n *  - options (Object): options\r\n *\r\n *  Converts the given JsonML into well-formed XML.\r\n *\r\n *  The options currently understood are:\r\n *\r\n *  - root (Boolean): wether or not the root node should be included in the\r\n *    output, or just its children. The default `false` is to not include the\r\n *    root itself.\r\n */\r\nexpose.renderJsonML = function( jsonml, options ) {\r\n  options = options || {};\r\n  // include the root element in the rendered output?\r\n  options.root = options.root || false;\r\n\r\n  var content = [];\r\n\r\n  if ( options.root ) {\r\n    content.push( render_tree( jsonml ) );\r\n  }\r\n  else {\r\n    jsonml.shift(); // get rid of the tag\r\n    if ( jsonml.length && typeof jsonml[ 0 ] === "object" && !( jsonml[ 0 ] instanceof Array ) ) {\r\n      jsonml.shift(); // get rid of the attributes\r\n    }\r\n\r\n    while ( jsonml.length ) {\r\n      content.push( render_tree( jsonml.shift() ) );\r\n    }\r\n  }\r\n\r\n  return content.join( "\\n\\n" );\r\n};\r\n\r\nfunction escapeHTML( text ) {\r\n  return text.replace( /&/g, "&amp;" )\r\n             .replace( /</g, "&lt;" )\r\n             .replace( />/g, "&gt;" )\r\n             .replace( /"/g, "&quot;" )\r\n             .replace( /\'/g, "&#39;" );\r\n}\r\n\r\nfunction render_tree( jsonml ) {\r\n  // basic case\r\n  if ( typeof jsonml === "string" ) {\r\n    return escapeHTML( jsonml );\r\n  }\r\n\r\n  var tag = jsonml.shift(),\r\n      attributes = {},\r\n      content = [];\r\n\r\n  if ( jsonml.length && typeof jsonml[ 0 ] === "object" && !( jsonml[ 0 ] instanceof Array ) ) {\r\n    attributes = jsonml.shift();\r\n  }\r\n\r\n  while ( jsonml.length ) {\r\n    content.push( render_tree( jsonml.shift() ) );\r\n  }\r\n\r\n  var tag_attrs = "";\r\n  for ( var a in attributes ) {\r\n    tag_attrs += " " + a + \'="\' + escapeHTML( attributes[ a ] ) + \'"\';\r\n  }\r\n\r\n  // be careful about adding whitespace here for inline elements\r\n  if ( tag == "img" || tag == "br" || tag == "hr" ) {\r\n    return "<"+ tag + tag_attrs + "/>";\r\n  }\r\n  else {\r\n    return "<"+ tag + tag_attrs + ">" + content.join( "" ) + "</" + tag + ">";\r\n  }\r\n}\r\n\r\nfunction convert_tree_to_html( tree, references, options ) {\r\n  var i;\r\n  options = options || {};\r\n\r\n  // shallow clone\r\n  var jsonml = tree.slice( 0 );\r\n\r\n  if ( typeof options.preprocessTreeNode === "function" ) {\r\n      jsonml = options.preprocessTreeNode(jsonml, references);\r\n  }\r\n\r\n  // Clone attributes if they exist\r\n  var attrs = extract_attr( jsonml );\r\n  if ( attrs ) {\r\n    jsonml[ 1 ] = {};\r\n    for ( i in attrs ) {\r\n      jsonml[ 1 ][ i ] = attrs[ i ];\r\n    }\r\n    attrs = jsonml[ 1 ];\r\n  }\r\n\r\n  // basic case\r\n  if ( typeof jsonml === "string" ) {\r\n    return jsonml;\r\n  }\r\n\r\n  // convert this node\r\n  switch ( jsonml[ 0 ] ) {\r\n    case "header":\r\n      jsonml[ 0 ] = "h" + jsonml[ 1 ].level;\r\n      delete jsonml[ 1 ].level;\r\n      break;\r\n    case "bulletlist":\r\n      jsonml[ 0 ] = "ul";\r\n      break;\r\n    case "numberlist":\r\n      jsonml[ 0 ] = "ol";\r\n      break;\r\n    case "listitem":\r\n      jsonml[ 0 ] = "li";\r\n      break;\r\n    case "para":\r\n      jsonml[ 0 ] = "p";\r\n      break;\r\n    case "markdown":\r\n      jsonml[ 0 ] = "html";\r\n      if ( attrs ) delete attrs.references;\r\n      break;\r\n    case "code_block":\r\n      jsonml[ 0 ] = "pre";\r\n      i = attrs ? 2 : 1;\r\n      var code = [ "code" ];\r\n      code.push.apply( code, jsonml.splice( i, jsonml.length - i ) );\r\n      jsonml[ i ] = code;\r\n      break;\r\n    case "inlinecode":\r\n      jsonml[ 0 ] = "code";\r\n      break;\r\n    case "img":\r\n      jsonml[ 1 ].src = jsonml[ 1 ].href;\r\n      delete jsonml[ 1 ].href;\r\n      break;\r\n    case "linebreak":\r\n      jsonml[ 0 ] = "br";\r\n    break;\r\n    case "link":\r\n      jsonml[ 0 ] = "a";\r\n      break;\r\n    case "link_ref":\r\n      jsonml[ 0 ] = "a";\r\n\r\n      // grab this ref and clean up the attribute node\r\n      var ref = references[ attrs.ref ];\r\n\r\n      // if the reference exists, make the link\r\n      if ( ref ) {\r\n        delete attrs.ref;\r\n\r\n        // add in the href and title, if present\r\n        attrs.href = ref.href;\r\n        if ( ref.title ) {\r\n          attrs.title = ref.title;\r\n        }\r\n\r\n        // get rid of the unneeded original text\r\n        delete attrs.original;\r\n      }\r\n      // the reference doesn\'t exist, so revert to plain text\r\n      else {\r\n        return attrs.original;\r\n      }\r\n      break;\r\n    case "img_ref":\r\n      jsonml[ 0 ] = "img";\r\n\r\n      // grab this ref and clean up the attribute node\r\n      var ref = references[ attrs.ref ];\r\n\r\n      // if the reference exists, make the link\r\n      if ( ref ) {\r\n        delete attrs.ref;\r\n\r\n        // add in the href and title, if present\r\n        attrs.src = ref.href;\r\n        if ( ref.title ) {\r\n          attrs.title = ref.title;\r\n        }\r\n\r\n        // get rid of the unneeded original text\r\n        delete attrs.original;\r\n      }\r\n      // the reference doesn\'t exist, so revert to plain text\r\n      else {\r\n        return attrs.original;\r\n      }\r\n      break;\r\n  }\r\n\r\n  // convert all the children\r\n  i = 1;\r\n\r\n  // deal with the attribute node, if it exists\r\n  if ( attrs ) {\r\n    // if there are keys, skip over it\r\n    for ( var key in jsonml[ 1 ] ) {\r\n        i = 2;\r\n        break;\r\n    }\r\n    // if there aren\'t, remove it\r\n    if ( i === 1 ) {\r\n      jsonml.splice( i, 1 );\r\n    }\r\n  }\r\n\r\n  for ( ; i < jsonml.length; ++i ) {\r\n    jsonml[ i ] = convert_tree_to_html( jsonml[ i ], references, options );\r\n  }\r\n\r\n  return jsonml;\r\n}\r\n\r\n\r\n// merges adjacent text nodes into a single node\r\nfunction merge_text_nodes( jsonml ) {\r\n  // skip the tag name and attribute hash\r\n  var i = extract_attr( jsonml ) ? 2 : 1;\r\n\r\n  while ( i < jsonml.length ) {\r\n    // if it\'s a string check the next item too\r\n    if ( typeof jsonml[ i ] === "string" ) {\r\n      if ( i + 1 < jsonml.length && typeof jsonml[ i + 1 ] === "string" ) {\r\n        // merge the second string into the first and remove it\r\n        jsonml[ i ] += jsonml.splice( i + 1, 1 )[ 0 ];\r\n      }\r\n      else {\r\n        ++i;\r\n      }\r\n    }\r\n    // if it\'s not a string recurse\r\n    else {\r\n      merge_text_nodes( jsonml[ i ] );\r\n      ++i;\r\n    }\r\n  }\r\n}\r\n\r\n} )( (function() {\r\n  if ( typeof exports === "undefined" ) {\r\n    window.markdown = {};\r\n    return window.markdown;\r\n  }\r\n  else {\r\n    return exports;\r\n  }\r\n} )() );\r\n'},2446:function(e,n){e.exports='/*! Summernote v0.8.4 | (c) 2013- Alan Hong and other contributors | MIT license */\r\n\r\n!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof module&&module.exports?module.exports=a(require("jquery")):a(window.jQuery)}(function($){"use strict";var isSupportAmd="function"==typeof define&&define.amd,isFontInstalled=function(a){var b="Comic Sans MS"===a?"Courier New":"Comic Sans MS",c=$("<div>").css({position:"absolute",left:"-9999px",top:"-9999px",fontSize:"200px"}).text("mmmmmmmmmwwwwwww").appendTo(document.body),d=c.css("fontFamily",b).width(),e=c.css("fontFamily",a+","+b).width();return c.remove(),d!==e},userAgent=navigator.userAgent,isMSIE=/MSIE|Trident/i.test(userAgent),browserVersion;if(isMSIE){var matches=/MSIE (\\d+[.]\\d+)/.exec(userAgent);matches&&(browserVersion=parseFloat(matches[1])),matches=/Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(userAgent),matches&&(browserVersion=parseFloat(matches[1]))}var isEdge=/Edge\\/\\d+/.test(userAgent),hasCodeMirror=!!window.CodeMirror;if(!hasCodeMirror&&isSupportAmd&&"undefined"!=typeof require)if(void 0!==require.resolve)try{require.resolve("codemirror"),hasCodeMirror=!0}catch(a){}else void 0!==eval("require").specified&&(hasCodeMirror=eval("require").specified("codemirror"));var isSupportTouch="ontouchstart"in window||navigator.MaxTouchPoints>0||navigator.msMaxTouchPoints>0,agent={isMac:navigator.appVersion.indexOf("Mac")>-1,isMSIE:isMSIE,isEdge:isEdge,isFF:!isEdge&&/firefox/i.test(userAgent),isPhantom:/PhantomJS/i.test(userAgent),isWebkit:!isEdge&&/webkit/i.test(userAgent),isChrome:!isEdge&&/chrome/i.test(userAgent),isSafari:!isEdge&&/safari/i.test(userAgent),browserVersion:browserVersion,jqueryVersion:parseFloat($.fn.jquery),isSupportAmd:isSupportAmd,isSupportTouch:isSupportTouch,hasCodeMirror:hasCodeMirror,isFontInstalled:isFontInstalled,isW3CRangeSupport:!!document.createRange},func=function(){var a=function(a){return function(b){return a===b}},b=function(a,b){return a===b},c=function(a){return function(b,c){return b[a]===c[a]}},d=function(){return!0},e=function(){return!1},f=function(a){return function(){return!a.apply(a,arguments)}},g=function(a,b){return function(c){return a(c)&&b(c)}},h=0;return{eq:a,eq2:b,peq2:c,ok:d,fail:e,self:function(a){return a},not:f,and:g,invoke:function(a,b){return function(){return a[b].apply(a,arguments)}},uniqueId:function(a){var b=++h+"";return a?a+b:b},rect2bnd:function(a){var b=$(document);return{top:a.top+b.scrollTop(),left:a.left+b.scrollLeft(),width:a.right-a.left,height:a.bottom-a.top}},invertObject:function(a){var b={};for(var c in a)a.hasOwnProperty(c)&&(b[a[c]]=c);return b},namespaceToCamel:function(a,b){return(b=b||"")+a.split(".").map(function(a){return a.substring(0,1).toUpperCase()+a.substring(1)}).join("")},debounce:function(a,b,c){var d;return function(){var e=this,f=arguments,g=function(){d=null,c||a.apply(e,f)},h=c&&!d;clearTimeout(d),d=setTimeout(g,b),h&&a.apply(e,f)}}}}(),list=function(){var a=function(a){return a[0]},b=function(a){return a[a.length-1]},c=function(a){return a.slice(0,a.length-1)},d=function(a){return a.slice(1)},e=function(a,b){for(var c=0,d=a.length;c<d;c++){var e=a[c];if(b(e))return e}},f=function(a,b){for(var c=0,d=a.length;c<d;c++)if(!b(a[c]))return!1;return!0},g=function(a,b){return $.inArray(b,a)},h=function(a,b){return-1!==g(a,b)},i=function(a,b){return b=b||func.self,a.reduce(function(a,c){return a+b(c)},0)},j=function(a){for(var b=[],c=-1,d=a.length;++c<d;)b[c]=a[c];return b},k=function(a){return!a||!a.length},l=function(c,e){return c.length?d(c).reduce(function(a,c){var d=b(a);return e(b(d),c)?d[d.length]=c:a[a.length]=[c],a},[[a(c)]]):[]},m=function(a){for(var b=[],c=0,d=a.length;c<d;c++)a[c]&&b.push(a[c]);return b},n=function(a){for(var b=[],c=0,d=a.length;c<d;c++)h(b,a[c])||b.push(a[c]);return b},o=function(a,b){var c=g(a,b);return-1===c?null:a[c+1]};return{head:a,last:b,initial:c,tail:d,prev:function(a,b){var c=g(a,b);return-1===c?null:a[c-1]},next:o,find:e,contains:h,all:f,sum:i,from:j,isEmpty:k,clusterBy:l,compact:m,unique:n}}(),NBSP_CHAR=String.fromCharCode(160),ZERO_WIDTH_NBSP_CHAR="\\ufeff",dom=function(){var a=function(a){return a&&$(a).hasClass("note-editable")},b=function(a){return a&&$(a).hasClass("note-control-sizing")},c=function(a){return a=a.toUpperCase(),function(b){return b&&b.nodeName.toUpperCase()===a}},d=function(a){return a&&3===a.nodeType},e=function(a){return a&&1===a.nodeType},f=function(a){return a&&/^BR|^IMG|^HR|^IFRAME|^BUTTON/.test(a.nodeName.toUpperCase())},g=function(b){return!a(b)&&(b&&/^DIV|^P|^LI|^H[1-7]/.test(b.nodeName.toUpperCase()))},h=function(a){return a&&/^H[1-7]/.test(a.nodeName.toUpperCase())},i=c("PRE"),j=c("LI"),k=function(a){return g(a)&&!j(a)},l=c("TABLE"),m=c("DATA"),n=function(a){return!(s(a)||o(a)||p(a)||g(a)||l(a)||r(a)||m(a))},o=function(a){return a&&/^UL|^OL/.test(a.nodeName.toUpperCase())},p=c("HR"),q=function(a){return a&&/^TD|^TH/.test(a.nodeName.toUpperCase())},r=c("BLOCKQUOTE"),s=function(b){return q(b)||r(b)||a(b)},t=c("A"),u=function(a){return n(a)&&!!D(a,g)},v=function(a){return n(a)&&!D(a,g)},w=c("BODY"),x=function(a,b){return a.nextSibling===b||a.previousSibling===b},y=function(a,b){b=b||func.ok;var c=[];return a.previousSibling&&b(a.previousSibling)&&c.push(a.previousSibling),c.push(a),a.nextSibling&&b(a.nextSibling)&&c.push(a.nextSibling),c},z=agent.isMSIE&&agent.browserVersion<11?"&nbsp;":"<br>",A=function(a){return d(a)?a.nodeValue.length:a?a.childNodes.length:0},B=function(a){var b=A(a);return 0===b||(!d(a)&&1===b&&a.innerHTML===z||!(!list.all(a.childNodes,d)||""!==a.innerHTML))},C=function(a){f(a)||A(a)||(a.innerHTML=z)},D=function(b,c){for(;b;){if(c(b))return b;if(a(b))break;b=b.parentNode}return null},E=function(b,c){for(b=b.parentNode;b&&1===A(b);){if(c(b))return b;if(a(b))break;b=b.parentNode}return null},F=function(b,c){c=c||func.fail;var d=[];return D(b,function(b){return a(b)||d.push(b),c(b)}),d},G=function(a,b){var c=F(a);return list.last(c.filter(b))},H=function(a,b){for(var c=F(a),d=b;d;d=d.parentNode)if($.inArray(d,c)>-1)return d;return null},I=function(a,b){b=b||func.fail;for(var c=[];a&&!b(a);)c.push(a),a=a.previousSibling;return c},J=function(a,b){b=b||func.fail;for(var c=[];a&&!b(a);)c.push(a),a=a.nextSibling;return c},K=function(a,b){var c=[];return b=b||func.ok,function d(e){a!==e&&b(e)&&c.push(e);for(var f=0,g=e.childNodes.length;f<g;f++)d(e.childNodes[f])}(a),c},L=function(a,b){var c=a.parentNode,d=$("<"+b+">")[0];return c.insertBefore(d,a),d.appendChild(a),d},M=function(a,b){var c=b.nextSibling,d=b.parentNode;return c?d.insertBefore(a,c):d.appendChild(a),a},N=function(a,b){return $.each(b,function(b,c){a.appendChild(c)}),a},O=function(a){return 0===a.offset},P=function(a){return a.offset===A(a.node)},Q=function(a){return O(a)||P(a)},R=function(a,b){for(;a&&a!==b;){if(0!==V(a))return!1;a=a.parentNode}return!0},S=function(a,b){if(!b)return!1;for(;a&&a!==b;){if(V(a)!==A(a.parentNode)-1)return!1;a=a.parentNode}return!0},T=function(a,b){return O(a)&&R(a.node,b)},U=function(a,b){return P(a)&&S(a.node,b)},V=function(a){for(var b=0;a=a.previousSibling;)b+=1;return b},W=function(a){return!!(a&&a.childNodes&&a.childNodes.length)},X=function(b,c){var d,e;if(0===b.offset){if(a(b.node))return null;d=b.node.parentNode,e=V(b.node)}else W(b.node)?(d=b.node.childNodes[b.offset-1],e=A(d)):(d=b.node,e=c?0:b.offset-1);return{node:d,offset:e}},Y=function(b,c){var d,e;if(A(b.node)===b.offset){if(a(b.node))return null;d=b.node.parentNode,e=V(b.node)+1}else W(b.node)?(d=b.node.childNodes[b.offset],e=0):(d=b.node,e=c?A(b.node):b.offset+1);return{node:d,offset:e}},Z=function(a,b){return a.node===b.node&&a.offset===b.offset},_=function(a){if(d(a.node)||!W(a.node)||B(a.node))return!0;var b=a.node.childNodes[a.offset-1],c=a.node.childNodes[a.offset];return!(b&&!f(b)||c&&!f(c))},aa=function(a,b){for(;a;){if(b(a))return a;a=X(a)}return null},ba=function(a,b){for(;a;){if(b(a))return a;a=Y(a)}return null},ca=function(a){if(!d(a.node))return!1;var b=a.node.nodeValue.charAt(a.offset-1);return b&&" "!==b&&b!==NBSP_CHAR},da=function(a,b,c,d){for(var e=a;e&&(c(e),!Z(e,b));){var f=d&&a.node!==e.node&&b.node!==e.node;e=Y(e,f)}},ea=function(a,b){return F(b,func.eq(a)).map(V).reverse()},fa=function(a,b){for(var c=a,d=0,e=b.length;d<e;d++)c=c.childNodes.length<=b[d]?c.childNodes[c.childNodes.length-1]:c.childNodes[b[d]];return c},ga=function(a,b){var c=b&&b.isSkipPaddingBlankHTML,e=b&&b.isNotSplitEdgePoint;if(Q(a)&&(d(a.node)||e)){if(O(a))return a.node;if(P(a))return a.node.nextSibling}if(d(a.node))return a.node.splitText(a.offset);var f=a.node.childNodes[a.offset],g=M(a.node.cloneNode(!1),a.node);return N(g,J(f)),c||(C(a.node),C(g)),g},ha=function(a,b,c){var d=F(b.node,func.eq(a));return d.length?1===d.length?ga(b,c):d.reduce(function(a,d){return a===b.node&&(a=ga(b,c)),ga({node:d,offset:a?dom.position(a):A(d)},c)}):null},ia=function(a,b){var c,d,e=b?g:s,f=F(a.node,e),h=list.last(f)||a.node;e(h)?(c=f[f.length-2],d=h):(c=h,d=c.parentNode);var i=c&&ha(c,a,{isSkipPaddingBlankHTML:b,isNotSplitEdgePoint:b});return i||d!==a.node||(i=a.node.childNodes[a.offset]),{rightNode:i,container:d}},ja=function(a){return document.createElement(a)},ka=function(a){return document.createTextNode(a)},la=function(a,b){if(a&&a.parentNode){if(a.removeNode)return a.removeNode(b);var c=a.parentNode;if(!b){var d,e,f=[];for(d=0,e=a.childNodes.length;d<e;d++)f.push(a.childNodes[d]);for(d=0,e=f.length;d<e;d++)c.insertBefore(f[d],a)}c.removeChild(a)}},ma=function(b,c){for(;b&&!a(b)&&c(b);){var d=b.parentNode;la(b),b=d}},na=function(a,b){if(a.nodeName.toUpperCase()===b.toUpperCase())return a;var c=ja(b);return a.style.cssText&&(c.style.cssText=a.style.cssText),N(c,list.from(a.childNodes)),M(c,a),la(a),c},oa=c("TEXTAREA"),pa=function(a,b){var c=oa(a[0])?a.val():a.html();return b?c.replace(/[\\n\\r]/g,""):c},qa=function(a,b){var c=pa(a);if(b){c=c.replace(/<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g,function(a,b,c){c=c.toUpperCase();var d=/^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(c)&&!!b,e=/^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(c);return a+(d||e?"\\n":"")}),c=$.trim(c)}return c},ra=function(a){var b=$(a),c=b.offset(),d=b.outerHeight(!0);return{left:c.left,top:c.top+d}},sa=function(a,b){Object.keys(b).forEach(function(c){a.on(c,b[c])})},ta=function(a,b){Object.keys(b).forEach(function(c){a.off(c,b[c])})},ua=function(a){return a&&!dom.isText(a)&&list.contains(a.classList,"note-styletag")};return{NBSP_CHAR:NBSP_CHAR,ZERO_WIDTH_NBSP_CHAR:"\\ufeff",blank:z,emptyPara:"<p>"+z+"</p>",makePredByNodeName:c,isEditable:a,isControlSizing:b,isText:d,isElement:e,isVoid:f,isPara:g,isPurePara:k,isHeading:h,isInline:n,isBlock:func.not(n),isBodyInline:v,isBody:w,isParaInline:u,isPre:i,isList:o,isTable:l,isData:m,isCell:q,isBlockquote:r,isBodyContainer:s,isAnchor:t,isDiv:c("DIV"),isLi:j,isBR:c("BR"),isSpan:c("SPAN"),isB:c("B"),isU:c("U"),isS:c("S"),isI:c("I"),isImg:c("IMG"),isTextarea:oa,isEmpty:B,isEmptyAnchor:func.and(t,B),isClosestSibling:x,withClosestSiblings:y,nodeLength:A,isLeftEdgePoint:O,isRightEdgePoint:P,isEdgePoint:Q,isLeftEdgeOf:R,isRightEdgeOf:S,isLeftEdgePointOf:T,isRightEdgePointOf:U,prevPoint:X,nextPoint:Y,isSamePoint:Z,isVisiblePoint:_,prevPointUntil:aa,nextPointUntil:ba,isCharPoint:ca,walkPoint:da,ancestor:D,singleChildAncestor:E,listAncestor:F,lastAncestor:G,listNext:J,listPrev:I,listDescendant:K,commonAncestor:H,wrap:L,insertAfter:M,appendChildNodes:N,position:V,hasChildren:W,makeOffsetPath:ea,fromOffsetPath:fa,splitTree:ha,splitPoint:ia,create:ja,createText:ka,remove:la,removeWhile:ma,replace:na,html:qa,value:pa,posFromPlaceholder:ra,attachEvents:sa,detachEvents:ta,isCustomStyleTag:ua}}(),Context=function(a,b){var c=this,d=$.summernote.ui;return this.memos={},this.modules={},this.layoutInfo={},this.options=b,this.initialize=function(){return this.layoutInfo=d.createLayout(a,b),this._initialize(),a.hide(),this},this.destroy=function(){this._destroy(),a.removeData("summernote"),d.removeLayout(a,this.layoutInfo)},this.reset=function(){var a=c.isDisabled();this.code(dom.emptyPara),this._destroy(),this._initialize(),a&&c.disable()},this._initialize=function(){var a=$.extend({},this.options.buttons);Object.keys(a).forEach(function(b){c.memo("button."+b,a[b])});var b=$.extend({},this.options.modules,$.summernote.plugins||{});Object.keys(b).forEach(function(a){c.module(a,b[a],!0)}),Object.keys(this.modules).forEach(function(a){c.initializeModule(a)})},this._destroy=function(){Object.keys(this.modules).reverse().forEach(function(a){c.removeModule(a)}),Object.keys(this.memos).forEach(function(a){c.removeMemo(a)}),this.triggerEvent("destroy",this)},this.code=function(b){var c=this.invoke("codeview.isActivated");if(void 0===b)return this.invoke("codeview.sync"),c?this.layoutInfo.codable.val():this.layoutInfo.editable.html();c?this.layoutInfo.codable.val(b):this.layoutInfo.editable.html(b),a.val(b),this.triggerEvent("change",b)},this.isDisabled=function(){return"false"===this.layoutInfo.editable.attr("contenteditable")},this.enable=function(){this.layoutInfo.editable.attr("contenteditable",!0),this.invoke("toolbar.activate",!0)},this.disable=function(){this.invoke("codeview.isActivated")&&this.invoke("codeview.deactivate"),this.layoutInfo.editable.attr("contenteditable",!1),this.invoke("toolbar.deactivate",!0)},this.triggerEvent=function(){var b=list.head(arguments),c=list.tail(list.from(arguments)),d=this.options.callbacks[func.namespaceToCamel(b,"on")];d&&d.apply(a[0],c),a.trigger("summernote."+b,c)},this.initializeModule=function(b){var c=this.modules[b];c.shouldInitialize=c.shouldInitialize||func.ok,c.shouldInitialize()&&(c.initialize&&c.initialize(),c.events&&dom.attachEvents(a,c.events))},this.module=function(a,b,c){if(1===arguments.length)return this.modules[a];this.modules[a]=new b(this),c||this.initializeModule(a)},this.removeModule=function(b){var c=this.modules[b];c.shouldInitialize()&&(c.events&&dom.detachEvents(a,c.events),c.destroy&&c.destroy()),delete this.modules[b]},this.memo=function(a,b){if(1===arguments.length)return this.memos[a];this.memos[a]=b},this.removeMemo=function(a){this.memos[a]&&this.memos[a].destroy&&this.memos[a].destroy(),delete this.memos[a]},this.createInvokeHandlerAndUpdateState=function(a,b){return function(d){c.createInvokeHandler(a,b)(d),c.invoke("buttons.updateCurrentStyle")}},this.createInvokeHandler=function(a,b){return function(d){d.preventDefault();var e=$(d.target);c.invoke(a,b||e.closest("[data-value]").data("value"),e)}},this.invoke=function(){var a=list.head(arguments),b=list.tail(list.from(arguments)),c=a.split("."),d=c.length>1,e=d&&list.head(c),f=d?list.last(c):list.head(c),g=this.modules[e||"editor"];return!e&&this[f]?this[f].apply(this,b):g&&g[f]&&g.shouldInitialize()?g[f].apply(g,b):void 0},this.initialize()};$.fn.extend({summernote:function(){var a=$.type(list.head(arguments)),b="string"===a,c="object"===a,d=c?list.head(arguments):{};d=$.extend({},$.summernote.options,d),d.langInfo=$.extend(!0,{},$.summernote.lang["en-US"],$.summernote.lang[d.lang]),d.icons=$.extend(!0,{},$.summernote.options.icons,d.icons),d.tooltip="auto"===d.tooltip?!agent.isSupportTouch:d.tooltip,this.each(function(a,b){var c=$(b);if(!c.data("summernote")){var e=new Context(c,d);c.data("summernote",e),c.data("summernote").triggerEvent("init",e.layoutInfo)}});var e=this.first();if(e.length){var f=e.data("summernote");if(b)return f.invoke.apply(f,list.from(arguments));d.focus&&f.invoke("editor.focus")}return this}});var Renderer=function(a,b,c,d){this.render=function(e){var f=$(a);if(c&&c.contents&&f.html(c.contents),c&&c.className&&f.addClass(c.className),c&&c.data&&$.each(c.data,function(a,b){f.attr("data-"+a,b)}),c&&c.click&&f.on("click",c.click),b){var g=f.find(".note-children-container");b.forEach(function(a){a.render(g.length?g:f)})}return d&&d(f,c),c&&c.callback&&c.callback(f),e&&e.append(f),f}},renderer={create:function(a,b){return function(){var c=$.isArray(arguments[0])?arguments[0]:[],d="object"==typeof arguments[1]?arguments[1]:arguments[0];return d&&d.children&&(c=d.children),new Renderer(a,c,d,b)}}},editor=renderer.create(\'<div class="note-editor note-frame panel panel-default"/>\'),toolbar=renderer.create(\'<div class="note-toolbar panel-heading"/>\'),editingArea=renderer.create(\'<div class="note-editing-area"/>\'),codable=renderer.create(\'<textarea class="note-codable"/>\'),editable=renderer.create(\'<div class="note-editable panel-body" contentEditable="true"/>\'),statusbar=renderer.create([\'<div class="note-statusbar">\',\'  <div class="note-resizebar">\',\'    <div class="note-icon-bar"/>\',\'    <div class="note-icon-bar"/>\',\'    <div class="note-icon-bar"/>\',"  </div>","</div>"].join("")),airEditor=renderer.create(\'<div class="note-editor"/>\'),airEditable=renderer.create(\'<div class="note-editable" contentEditable="true"/>\'),buttonGroup=renderer.create(\'<div class="note-btn-group btn-group">\'),dropdown=renderer.create(\'<div class="dropdown-menu">\',function(a,b){var c=$.isArray(b.items)?b.items.map(function(a){var c="string"==typeof a?a:a.value||"",d=b.template?b.template(a):a,e="object"==typeof a?a.option:void 0;return\'<li><a href="#" data-value="\'+c+\'"\'+(void 0!==e?\' data-option="\'+e+\'"\':"")+">"+d+"</a></li>"}).join(""):b.items;a.html(c)}),dropdownCheck=renderer.create(\'<div class="dropdown-menu note-check">\',function(a,b){var c=$.isArray(b.items)?b.items.map(function(a){var c="string"==typeof a?a:a.value||"",d=b.template?b.template(a):a;return\'<li><a href="#" data-value="\'+c+\'">\'+icon(b.checkClassName)+" "+d+"</a></li>"}).join(""):b.items;a.html(c)}),palette=renderer.create(\'<div class="note-color-palette"/>\',function(a,b){for(var c=[],d=0,e=b.colors.length;d<e;d++){for(var f=b.eventName,g=b.colors[d],h=[],i=0,j=g.length;i<j;i++){var k=g[i];h.push([\'<button type="button" class="note-color-btn"\',\'style="background-color:\',k,\'" \',\'data-event="\',f,\'" \',\'data-value="\',k,\'" \',\'title="\',k,\'" \',\'data-toggle="button" tabindex="-1"></button>\'].join(""))}c.push(\'<div class="note-color-row">\'+h.join("")+"</div>")}a.html(c.join("")),a.find(".note-color-btn").tooltip({container:"body",trigger:"hover",placement:"bottom"})}),dialog=renderer.create(\'<div class="modal" aria-hidden="false" tabindex="-1"/>\',function(a,b){b.fade&&a.addClass("fade"),a.html([\'<div class="modal-dialog">\',\'  <div class="modal-content">\',b.title?\'    <div class="modal-header">      <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>      <h4 class="modal-title">\'+b.title+"</h4>    </div>":"",\'    <div class="modal-body">\'+b.body+"</div>",b.footer?\'    <div class="modal-footer">\'+b.footer+"</div>":"","  </div>","</div>"].join(""))}),popover=renderer.create([\'<div class="note-popover popover in">\',\'  <div class="arrow"/>\',\'  <div class="popover-content note-children-container"/>\',"</div>"].join(""),function(a,b){var c=void 0!==b.direction?b.direction:"bottom";a.addClass(c),b.hideArrow&&a.find(".arrow").hide()}),icon=function(a,b){return"<"+(b=b||"i")+\' class="\'+a+\'"/>\'},ui={editor:editor,toolbar:toolbar,editingArea:editingArea,codable:codable,editable:editable,statusbar:statusbar,airEditor:airEditor,airEditable:airEditable,buttonGroup:buttonGroup,dropdown:dropdown,dropdownCheck:dropdownCheck,palette:palette,dialog:dialog,popover:popover,icon:icon,options:{},button:function(a,b){return renderer.create(\'<button type="button" class="note-btn btn btn-default btn-sm" tabindex="-1">\',function(a,b){b&&b.tooltip&&self.options.tooltip&&a.attr({title:b.tooltip}).tooltip({container:"body",trigger:"hover",placement:"bottom"})})(a,b)},toggleBtn:function(a,b){a.toggleClass("disabled",!b),a.attr("disabled",!b)},toggleBtnActive:function(a,b){a.toggleClass("active",b)},onDialogShown:function(a,b){a.one("shown.bs.modal",b)},onDialogHidden:function(a,b){a.one("hidden.bs.modal",b)},showDialog:function(a){a.modal("show")},hideDialog:function(a){a.modal("hide")},createLayout:function(a,b){self.options=b;var c=(b.airMode?ui.airEditor([ui.editingArea([ui.airEditable()])]):ui.editor([ui.toolbar(),ui.editingArea([ui.codable(),ui.editable()]),ui.statusbar()])).render();return c.insertAfter(a),{note:a,editor:c,toolbar:c.find(".note-toolbar"),editingArea:c.find(".note-editing-area"),editable:c.find(".note-editable"),codable:c.find(".note-codable"),statusbar:c.find(".note-statusbar")}},removeLayout:function(a,b){a.html(b.editable.html()),b.editor.remove(),a.show()}};$.summernote=$.summernote||{lang:{}},$.extend($.summernote.lang,{"en-US":{font:{bold:"Bold",italic:"Italic",underline:"Underline",clear:"Remove Font Style",height:"Line Height",name:"Font Family",strikethrough:"Strikethrough",subscript:"Subscript",superscript:"Superscript",size:"Font Size"},image:{image:"Picture",insert:"Insert Image",resizeFull:"Resize Full",resizeHalf:"Resize Half",resizeQuarter:"Resize Quarter",floatLeft:"Float Left",floatRight:"Float Right",floatNone:"Float None",shapeRounded:"Shape: Rounded",shapeCircle:"Shape: Circle",shapeThumbnail:"Shape: Thumbnail",shapeNone:"Shape: None",dragImageHere:"Drag image or text here",dropImage:"Drop image or Text",selectFromFiles:"Select from files",maximumFileSize:"Maximum file size",maximumFileSizeError:"Maximum file size exceeded.",url:"Image URL",remove:"Remove Image"},video:{video:"Video",videoLink:"Video Link",insert:"Insert Video",url:"Video URL?",providers:"(YouTube, Vimeo, Vine, Instagram, DailyMotion or Youku)"},link:{link:"Link",insert:"Insert Link",unlink:"Unlink",edit:"Edit",textToDisplay:"Text to display",url:"To what URL should this link go?",openInNewWindow:"Open in new window"},table:{table:"Table"},hr:{insert:"Insert Horizontal Rule"},style:{style:"Style",p:"Normal",blockquote:"Quote",pre:"Code",h1:"Header 1",h2:"Header 2",h3:"Header 3",h4:"Header 4",h5:"Header 5",h6:"Header 6"},lists:{unordered:"Unordered list",ordered:"Ordered list"},options:{help:"Help",fullscreen:"Full Screen",codeview:"Code View"},paragraph:{paragraph:"Paragraph",outdent:"Outdent",indent:"Indent",left:"Align left",center:"Align center",right:"Align right",justify:"Justify full"},color:{recent:"Recent Color",more:"More Color",background:"Background Color",foreground:"Foreground Color",transparent:"Transparent",setTransparent:"Set transparent",reset:"Reset",resetToDefault:"Reset to default"},shortcut:{shortcuts:"Keyboard shortcuts",close:"Close",textFormatting:"Text formatting",action:"Action",paragraphFormatting:"Paragraph formatting",documentStyle:"Document Style",extraKeys:"Extra keys"},help:{insertParagraph:"Insert Paragraph",undo:"Undoes the last command",redo:"Redoes the last command",tab:"Tab",untab:"Untab",bold:"Set a bold style",italic:"Set a italic style",underline:"Set a underline style",strikethrough:"Set a strikethrough style",removeFormat:"Clean a style",justifyLeft:"Set left align",justifyCenter:"Set center align",justifyRight:"Set right align",justifyFull:"Set full align",insertUnorderedList:"Toggle unordered list",insertOrderedList:"Toggle ordered list",outdent:"Outdent on current paragraph",indent:"Indent on current paragraph",formatPara:"Change current block\'s format as a paragraph(P tag)",formatH1:"Change current block\'s format as H1",formatH2:"Change current block\'s format as H2",formatH3:"Change current block\'s format as H3",formatH4:"Change current block\'s format as H4",formatH5:"Change current block\'s format as H5",formatH6:"Change current block\'s format as H6",insertHorizontalRule:"Insert horizontal rule","linkDialog.show":"Show Link Dialog"},history:{undo:"Undo",redo:"Redo"},specialChar:{specialChar:"SPECIAL CHARACTERS",select:"Select Special characters"}}});var key=function(){var a={BACKSPACE:8,TAB:9,ENTER:13,SPACE:32,LEFT:37,UP:38,RIGHT:39,DOWN:40,NUM0:48,NUM1:49,NUM2:50,NUM3:51,NUM4:52,NUM5:53,NUM6:54,NUM7:55,NUM8:56,B:66,E:69,I:73,J:74,K:75,L:76,R:82,S:83,U:85,V:86,Y:89,Z:90,SLASH:191,LEFTBRACKET:219,BACKSLASH:220,RIGHTBRACKET:221};return{isEdit:function(b){return list.contains([a.BACKSPACE,a.TAB,a.ENTER,a.SPACE],b)},isMove:function(b){return list.contains([a.LEFT,a.UP,a.RIGHT,a.DOWN],b)},nameFromCode:func.invertObject(a),code:a}}(),range=function(){var a=function(a,b){var c,d,e=a.parentElement(),f=document.body.createTextRange(),g=list.from(e.childNodes);for(c=0;c<g.length;c++)if(!dom.isText(g[c])){if(f.moveToElementText(g[c]),f.compareEndPoints("StartToStart",a)>=0)break;d=g[c]}if(0!==c&&dom.isText(g[c-1])){var h=document.body.createTextRange(),i=null;h.moveToElementText(d||e),h.collapse(!d),i=d?d.nextSibling:e.firstChild;var j=a.duplicate();j.setEndPoint("StartToStart",h);for(var k=j.text.replace(/[\\r\\n]/g,"").length;k>i.nodeValue.length&&i.nextSibling;)k-=i.nodeValue.length,i=i.nextSibling;i.nodeValue;b&&i.nextSibling&&dom.isText(i.nextSibling)&&k===i.nodeValue.length&&(k-=i.nodeValue.length,i=i.nextSibling),e=i,c=k}return{cont:e,offset:c}},b=function(a){var b=function(a,c){var d,e;if(dom.isText(a)){var f=dom.listPrev(a,func.not(dom.isText)),g=list.last(f).previousSibling;d=g||a.parentNode,c+=list.sum(list.tail(f),dom.nodeLength),e=!g}else{if(d=a.childNodes[c]||a,dom.isText(d))return b(d,0);c=0,e=!1}return{node:d,collapseToStart:e,offset:c}},c=document.body.createTextRange(),d=b(a.node,a.offset);return c.moveToElementText(d.node),c.collapse(d.collapseToStart),c.moveStart("character",d.offset),c},c=function(a,d,e,f){this.sc=a,this.so=d,this.ec=e,this.eo=f;var g=function(){if(agent.isW3CRangeSupport){var c=document.createRange();return c.setStart(a,d),c.setEnd(e,f),c}var g=b({node:a,offset:d});return g.setEndPoint("EndToEnd",b({node:e,offset:f})),g};this.getPoints=function(){return{sc:a,so:d,ec:e,eo:f}},this.getStartPoint=function(){return{node:a,offset:d}},this.getEndPoint=function(){return{node:e,offset:f}},this.select=function(){var a=g();if(agent.isW3CRangeSupport){var b=document.getSelection();b.rangeCount>0&&b.removeAllRanges(),b.addRange(a)}else a.select();return this},this.scrollIntoView=function(a){var b=$(a).height();return a.scrollTop+b<this.sc.offsetTop&&(a.scrollTop+=Math.abs(a.scrollTop+b-this.sc.offsetTop)),this},this.normalize=function(){var a=function(a,b){if(dom.isVisiblePoint(a)&&!dom.isEdgePoint(a)||dom.isVisiblePoint(a)&&dom.isRightEdgePoint(a)&&!b||dom.isVisiblePoint(a)&&dom.isLeftEdgePoint(a)&&b||dom.isVisiblePoint(a)&&dom.isBlock(a.node)&&dom.isEmpty(a.node))return a;var c=dom.ancestor(a.node,dom.isBlock);if((dom.isLeftEdgePointOf(a,c)||dom.isVoid(dom.prevPoint(a).node))&&!b||(dom.isRightEdgePointOf(a,c)||dom.isVoid(dom.nextPoint(a).node))&&b){if(dom.isVisiblePoint(a))return a;b=!b}return(b?dom.nextPointUntil(dom.nextPoint(a),dom.isVisiblePoint):dom.prevPointUntil(dom.prevPoint(a),dom.isVisiblePoint))||a},b=a(this.getEndPoint(),!1),d=this.isCollapsed()?b:a(this.getStartPoint(),!0);return new c(d.node,d.offset,b.node,b.offset)},this.nodes=function(a,b){a=a||func.ok;var c=b&&b.includeAncestor,d=b&&b.fullyContains,e=this.getStartPoint(),f=this.getEndPoint(),g=[],h=[];return dom.walkPoint(e,f,function(b){if(!dom.isEditable(b.node)){var e;d?(dom.isLeftEdgePoint(b)&&h.push(b.node),dom.isRightEdgePoint(b)&&list.contains(h,b.node)&&(e=b.node)):e=c?dom.ancestor(b.node,a):b.node,e&&a(e)&&g.push(e)}},!0),list.unique(g)},this.commonAncestor=function(){return dom.commonAncestor(a,e)},this.expand=function(b){var g=dom.ancestor(a,b),h=dom.ancestor(e,b);if(!g&&!h)return new c(a,d,e,f);var i=this.getPoints();return g&&(i.sc=g,i.so=0),h&&(i.ec=h,i.eo=dom.nodeLength(h)),new c(i.sc,i.so,i.ec,i.eo)},this.collapse=function(b){return b?new c(a,d,a,d):new c(e,f,e,f)},this.splitText=function(){var b=a===e,g=this.getPoints();return dom.isText(e)&&!dom.isEdgePoint(this.getEndPoint())&&e.splitText(f),dom.isText(a)&&!dom.isEdgePoint(this.getStartPoint())&&(g.sc=a.splitText(d),g.so=0,b&&(g.ec=g.sc,g.eo=f-d)),new c(g.sc,g.so,g.ec,g.eo)},this.deleteContents=function(){if(this.isCollapsed())return this;var a=this.splitText(),b=a.nodes(null,{fullyContains:!0}),d=dom.prevPointUntil(a.getStartPoint(),function(a){return!list.contains(b,a.node)}),e=[];return $.each(b,function(a,b){var c=b.parentNode;d.node!==c&&1===dom.nodeLength(c)&&e.push(c),dom.remove(b,!1)}),$.each(e,function(a,b){dom.remove(b,!1)}),new c(d.node,d.offset,d.node,d.offset).normalize()};var h=function(b){return function(){var c=dom.ancestor(a,b);return!!c&&c===dom.ancestor(e,b)}};this.isOnEditable=h(dom.isEditable),this.isOnList=h(dom.isList),this.isOnAnchor=h(dom.isAnchor),this.isOnCell=h(dom.isCell),this.isOnData=h(dom.isData),this.isLeftEdgeOf=function(a){if(!dom.isLeftEdgePoint(this.getStartPoint()))return!1;var b=dom.ancestor(this.sc,a);return b&&dom.isLeftEdgeOf(this.sc,b)},this.isCollapsed=function(){return a===e&&d===f},this.wrapBodyInlineWithPara=function(){if(dom.isBodyContainer(a)&&dom.isEmpty(a))return a.innerHTML=dom.emptyPara,new c(a.firstChild,0,a.firstChild,0);var b=this.normalize();if(dom.isParaInline(a)||dom.isPara(a))return b;var d;if(dom.isInline(b.sc)){var e=dom.listAncestor(b.sc,func.not(dom.isInline));d=list.last(e),dom.isInline(d)||(d=e[e.length-2]||b.sc.childNodes[b.so])}else d=b.sc.childNodes[b.so>0?b.so-1:0];var f=dom.listPrev(d,dom.isParaInline).reverse();if(f=f.concat(dom.listNext(d.nextSibling,dom.isParaInline)),f.length){var g=dom.wrap(list.head(f),"p");dom.appendChildNodes(g,list.tail(f))}return this.normalize()},this.insertNode=function(a){var b=this.wrapBodyInlineWithPara().deleteContents(),c=dom.splitPoint(b.getStartPoint(),dom.isInline(a));return c.rightNode?c.rightNode.parentNode.insertBefore(a,c.rightNode):c.container.appendChild(a),a},this.pasteHTML=function(a){var b=$("<div></div>").html(a)[0],c=list.from(b.childNodes),d=this.wrapBodyInlineWithPara().deleteContents();return c.reverse().map(function(a){return d.insertNode(a)}).reverse()},this.toString=function(){var a=g();return agent.isW3CRangeSupport?a.toString():a.text},this.getWordRange=function(a){var b=this.getEndPoint();if(!dom.isCharPoint(b))return this;var d=dom.prevPointUntil(b,function(a){return!dom.isCharPoint(a)});return a&&(b=dom.nextPointUntil(b,function(a){return!dom.isCharPoint(a)})),new c(d.node,d.offset,b.node,b.offset)},this.bookmark=function(b){return{s:{path:dom.makeOffsetPath(b,a),offset:d},e:{path:dom.makeOffsetPath(b,e),offset:f}}},this.paraBookmark=function(b){return{s:{path:list.tail(dom.makeOffsetPath(list.head(b),a)),offset:d},e:{path:list.tail(dom.makeOffsetPath(list.last(b),e)),offset:f}}},this.getClientRects=function(){return g().getClientRects()}};return{create:function(a,b,d,e){if(4===arguments.length)return new c(a,b,d,e);if(2===arguments.length)return d=a,e=b,new c(a,b,d,e);var f=this.createFromSelection();return f||1!==arguments.length?f:(f=this.createFromNode(arguments[0]),f.collapse(dom.emptyPara===arguments[0].innerHTML))},createFromSelection:function(){var b,d,e,f;if(agent.isW3CRangeSupport){var g=document.getSelection();if(!g||0===g.rangeCount)return null;if(dom.isBody(g.anchorNode))return null;var h=g.getRangeAt(0);b=h.startContainer,d=h.startOffset,e=h.endContainer,f=h.endOffset}else{var i=document.selection.createRange(),j=i.duplicate();j.collapse(!1);var k=i;k.collapse(!0);var l=a(k,!0),m=a(j,!1);dom.isText(l.node)&&dom.isLeftEdgePoint(l)&&dom.isTextNode(m.node)&&dom.isRightEdgePoint(m)&&m.node.nextSibling===l.node&&(l=m),b=l.cont,d=l.offset,e=m.cont,f=m.offset}return new c(b,d,e,f)},createFromNode:function(a){var b=a,c=0,d=a,e=dom.nodeLength(d);return dom.isVoid(b)&&(c=dom.listPrev(b).length-1,b=b.parentNode),dom.isBR(d)?(e=dom.listPrev(d).length-1,d=d.parentNode):dom.isVoid(d)&&(e=dom.listPrev(d).length,d=d.parentNode),this.create(b,c,d,e)},createFromNodeBefore:function(a){return this.createFromNode(a).collapse(!0)},createFromNodeAfter:function(a){return this.createFromNode(a).collapse()},createFromBookmark:function(a,b){var d=dom.fromOffsetPath(a,b.s.path),e=b.s.offset,f=dom.fromOffsetPath(a,b.e.path),g=b.e.offset;return new c(d,e,f,g)},createFromParaBookmark:function(a,b){var d=a.s.offset,e=a.e.offset,f=dom.fromOffsetPath(list.head(b),a.s.path),g=dom.fromOffsetPath(list.last(b),a.e.path);return new c(f,d,g,e)}}}(),async=function(){return{\r\nreadFileAsDataURL:function(a){return $.Deferred(function(b){$.extend(new FileReader,{onload:function(a){var c=a.target.result;b.resolve(c)},onerror:function(){b.reject(this)}}).readAsDataURL(a)}).promise()},createImage:function(a){return $.Deferred(function(b){var c=$("<img>");c.one("load",function(){c.off("error abort"),b.resolve(c)}).one("error abort",function(){c.off("load").detach(),b.reject(c)}).css({display:"none"}).appendTo(document.body).attr("src",a)}).promise()}}}(),History=function(a){var b=[],c=-1,d=a[0],e=function(){var b=range.create(d),c={s:{path:[],offset:0},e:{path:[],offset:0}};return{contents:a.html(),bookmark:b?b.bookmark(d):c}},f=function(b){null!==b.contents&&a.html(b.contents),null!==b.bookmark&&range.createFromBookmark(d,b.bookmark).select()};this.rewind=function(){a.html()!==b[c].contents&&this.recordUndo(),c=0,f(b[c])},this.reset=function(){b=[],c=-1,a.html(""),this.recordUndo()},this.undo=function(){a.html()!==b[c].contents&&this.recordUndo(),0<c&&(c--,f(b[c]))},this.redo=function(){b.length-1>c&&(c++,f(b[c]))},this.recordUndo=function(){c++,b.length>c&&(b=b.slice(0,c)),b.push(e())}},Style=function(){var a=function(a,b){if(agent.jqueryVersion<1.9){var c={};return $.each(b,function(b,d){c[d]=a.css(d)}),c}return a.css.call(a,b)};this.fromNode=function(b){var c=["font-family","font-size","text-align","list-style-type","line-height"],d=a(b,c)||{};return d["font-size"]=parseInt(d["font-size"],10),d},this.stylePara=function(a,b){$.each(a.nodes(dom.isPara,{includeAncestor:!0}),function(a,c){$(c).css(b)})},this.styleNodes=function(a,b){a=a.splitText();var c=b&&b.nodeName||"SPAN",d=!(!b||!b.expandClosestSibling),e=!(!b||!b.onlyPartialContains);if(a.isCollapsed())return[a.insertNode(dom.create(c))];var f=dom.makePredByNodeName(c),g=a.nodes(dom.isText,{fullyContains:!0}).map(function(a){return dom.singleChildAncestor(a,f)||dom.wrap(a,c)});if(d){if(e){var h=a.nodes();f=func.and(f,function(a){return list.contains(h,a)})}return g.map(function(a){var b=dom.withClosestSiblings(a,f),c=list.head(b),d=list.tail(b);return $.each(d,function(a,b){dom.appendChildNodes(c,b.childNodes),dom.remove(b)}),list.head(b)})}return g},this.current=function(a){var b=$(dom.isElement(a.sc)?a.sc:a.sc.parentNode),c=this.fromNode(b);try{c=$.extend(c,{"font-bold":document.queryCommandState("bold")?"bold":"normal","font-italic":document.queryCommandState("italic")?"italic":"normal","font-underline":document.queryCommandState("underline")?"underline":"normal","font-subscript":document.queryCommandState("subscript")?"subscript":"normal","font-superscript":document.queryCommandState("superscript")?"superscript":"normal","font-strikethrough":document.queryCommandState("strikethrough")?"strikethrough":"normal","font-family":document.queryCommandValue("fontname")||c["font-family"]})}catch(a){}if(a.isOnList()){var d=["circle","disc","disc-leading-zero","square"],e=$.inArray(c["list-style-type"],d)>-1;c["list-style"]=e?"unordered":"ordered"}else c["list-style"]="none";var f=dom.ancestor(a.sc,dom.isPara);if(f&&f.style["line-height"])c["line-height"]=f.style.lineHeight;else{var g=parseInt(c["line-height"],10)/parseInt(c["font-size"],10);c["line-height"]=g.toFixed(1)}return c.anchor=a.isOnAnchor()&&dom.ancestor(a.sc,dom.isAnchor),c.ancestors=dom.listAncestor(a.sc,dom.isEditable),c.range=a,c}},Bullet=function(){var a=this;this.insertOrderedList=function(a){this.toggleList("OL",a)},this.insertUnorderedList=function(a){this.toggleList("UL",a)},this.indent=function(a){var b=this,c=range.create(a).wrapBodyInlineWithPara(),d=c.nodes(dom.isPara,{includeAncestor:!0}),e=list.clusterBy(d,func.peq2("parentNode"));$.each(e,function(a,c){var d=list.head(c);dom.isLi(d)?b.wrapList(c,d.parentNode.nodeName):$.each(c,function(a,b){$(b).css("marginLeft",function(a,b){return(parseInt(b,10)||0)+25})})}),c.select()},this.outdent=function(a){var b=this,c=range.create(a).wrapBodyInlineWithPara(),d=c.nodes(dom.isPara,{includeAncestor:!0}),e=list.clusterBy(d,func.peq2("parentNode"));$.each(e,function(a,c){var d=list.head(c);dom.isLi(d)?b.releaseList([c]):$.each(c,function(a,b){$(b).css("marginLeft",function(a,b){return b=parseInt(b,10)||0,b>25?b-25:""})})}),c.select()},this.toggleList=function(b,c){var d=range.create(c).wrapBodyInlineWithPara(),e=d.nodes(dom.isPara,{includeAncestor:!0}),f=d.paraBookmark(e),g=list.clusterBy(e,func.peq2("parentNode"));if(list.find(e,dom.isPurePara)){var h=[];$.each(g,function(c,d){h=h.concat(a.wrapList(d,b))}),e=h}else{var i=d.nodes(dom.isList,{includeAncestor:!0}).filter(function(a){return!$.nodeName(a,b)});i.length?$.each(i,function(a,c){dom.replace(c,b)}):e=this.releaseList(g,!0)}range.createFromParaBookmark(f,e).select()},this.wrapList=function(a,b){var c=list.head(a),d=list.last(a),e=dom.isList(c.previousSibling)&&c.previousSibling,f=dom.isList(d.nextSibling)&&d.nextSibling,g=e||dom.insertAfter(dom.create(b||"UL"),d);return a=a.map(function(a){return dom.isPurePara(a)?dom.replace(a,"LI"):a}),dom.appendChildNodes(g,a),f&&(dom.appendChildNodes(g,list.from(f.childNodes)),dom.remove(f)),a},this.releaseList=function(a,b){var c=[];return $.each(a,function(a,d){var e=list.head(d),f=list.last(d),g=b?dom.lastAncestor(e,dom.isList):e.parentNode,h=g.childNodes.length>1?dom.splitTree(g,{node:f.parentNode,offset:dom.position(f)+1},{isSkipPaddingBlankHTML:!0}):null,i=dom.splitTree(g,{node:e.parentNode,offset:dom.position(e)},{isSkipPaddingBlankHTML:!0});d=b?dom.listDescendant(i,dom.isLi):list.from(i.childNodes).filter(dom.isLi),!b&&dom.isList(g.parentNode)||(d=d.map(function(a){return dom.replace(a,"P")})),$.each(list.from(d).reverse(),function(a,b){dom.insertAfter(b,g)});var j=list.compact([g,i,h]);$.each(j,function(a,b){var c=[b].concat(dom.listDescendant(b,dom.isList));$.each(c.reverse(),function(a,b){dom.nodeLength(b)||dom.remove(b,!0)})}),c=c.concat(d)}),c}},Typing=function(){var a=new Bullet;this.insertTab=function(a,b){var c=dom.createText(new Array(b+1).join(dom.NBSP_CHAR));a=a.deleteContents(),a.insertNode(c,!0),a=range.create(c,b),a.select()},this.insertParagraph=function(b){var c=range.create(b);c=c.deleteContents(),c=c.wrapBodyInlineWithPara();var d,e=dom.ancestor(c.sc,dom.isPara);if(e){if(dom.isEmpty(e)&&dom.isLi(e))return void a.toggleList(e.parentNode.nodeName);if(dom.isEmpty(e)&&dom.isPara(e)&&dom.isBlockquote(e.parentNode))dom.insertAfter(e,e.parentNode),d=e;else{d=dom.splitTree(e,c.getStartPoint());var f=dom.listDescendant(e,dom.isEmptyAnchor);f=f.concat(dom.listDescendant(d,dom.isEmptyAnchor)),$.each(f,function(a,b){dom.remove(b)}),(dom.isHeading(d)||dom.isPre(d)||dom.isCustomStyleTag(d))&&dom.isEmpty(d)&&(d=dom.replace(d,"p"))}}else{var g=c.sc.childNodes[c.so];d=$(dom.emptyPara)[0],g?c.sc.insertBefore(d,g):c.sc.appendChild(d)}range.create(d,0).normalize().select().scrollIntoView(b)}},Table=function(){this.tab=function(a,b){var c=dom.ancestor(a.commonAncestor(),dom.isCell),d=dom.ancestor(c,dom.isTable),e=dom.listDescendant(d,dom.isCell),f=list[b?"prev":"next"](e,c);f&&range.create(f,0).select()},this.createTable=function(a,b,c){for(var d,e=[],f=0;f<a;f++)e.push("<td>"+dom.blank+"</td>");d=e.join("");for(var g,h=[],i=0;i<b;i++)h.push("<tr>"+d+"</tr>");g=h.join("");var j=$("<table>"+g+"</table>");return c&&c.tableClassName&&j.addClass(c.tableClassName),j[0]}},KEY_BOGUS="bogus",Editor=function(a){var b=this,c=a.layoutInfo.note,d=a.layoutInfo.editor,e=a.layoutInfo.editable,f=a.options,g=f.langInfo,h=e[0],i=null,j=new Style,k=new Table,l=new Typing,m=new Bullet,n=new History(e);this.initialize=function(){e.on("keydown",function(c){c.keyCode===key.code.ENTER&&a.triggerEvent("enter",c),a.triggerEvent("keydown",c),c.isDefaultPrevented()||(f.shortcuts?b.handleKeyMap(c):b.preventDefaultEditableShortCuts(c))}).on("keyup",function(b){a.triggerEvent("keyup",b)}).on("focus",function(b){a.triggerEvent("focus",b)}).on("blur",function(b){a.triggerEvent("blur",b)}).on("mousedown",function(b){a.triggerEvent("mousedown",b)}).on("mouseup",function(b){a.triggerEvent("mouseup",b)}).on("scroll",function(b){a.triggerEvent("scroll",b)}).on("paste",function(b){a.triggerEvent("paste",b)}),e.html(dom.html(c)||dom.emptyPara);var g=agent.isMSIE?"DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted":"input";e.on(g,func.debounce(function(){a.triggerEvent("change",e.html())},250)),d.on("focusin",function(b){a.triggerEvent("focusin",b)}).on("focusout",function(b){a.triggerEvent("focusout",b)}),f.airMode||(f.width&&d.outerWidth(f.width),f.height&&e.outerHeight(f.height),f.maxHeight&&e.css("max-height",f.maxHeight),f.minHeight&&e.css("min-height",f.minHeight)),n.recordUndo()},this.destroy=function(){e.off()},this.handleKeyMap=function(b){var c=f.keyMap[agent.isMac?"mac":"pc"],d=[];b.metaKey&&d.push("CMD"),b.ctrlKey&&!b.altKey&&d.push("CTRL"),b.shiftKey&&d.push("SHIFT");var e=key.nameFromCode[b.keyCode];e&&d.push(e);var g=c[d.join("+")];g?(b.preventDefault(),a.invoke(g)):key.isEdit(b.keyCode)&&this.afterCommand()},this.preventDefaultEditableShortCuts=function(a){(a.ctrlKey||a.metaKey)&&list.contains([66,73,85],a.keyCode)&&a.preventDefault()},this.createRange=function(){return this.focus(),range.create(h)},this.saveRange=function(a){i=this.createRange(),a&&i.collapse().select()},this.restoreRange=function(){i&&(i.select(),this.focus())},this.saveTarget=function(a){e.data("target",a)},this.clearTarget=function(){e.removeData("target")},this.restoreTarget=function(){return e.data("target")},this.currentStyle=function(){var a=range.create();return a&&(a=a.normalize()),a?j.current(a):j.fromNode(e)},this.styleFromNode=function(a){return j.fromNode(a)},this.undo=function(){a.triggerEvent("before.command",e.html()),n.undo(),a.triggerEvent("change",e.html())},a.memo("help.undo",g.help.undo),this.redo=function(){a.triggerEvent("before.command",e.html()),n.redo(),a.triggerEvent("change",e.html())},a.memo("help.redo",g.help.redo);for(var o=this.beforeCommand=function(){a.triggerEvent("before.command",e.html()),b.focus()},p=this.afterCommand=function(b){n.recordUndo(),b||a.triggerEvent("change",e.html())},q=["bold","italic","underline","strikethrough","superscript","subscript","justifyLeft","justifyCenter","justifyRight","justifyFull","formatBlock","removeFormat","backColor","foreColor","fontName"],r=0,s=q.length;r<s;r++)this[q[r]]=function(a){return function(b){o(),document.execCommand(a,!1,b),p(!0)}}(q[r]),a.memo("help."+q[r],g.help[q[r]]);this.tab=function(){var a=this.createRange();a.isCollapsed()&&a.isOnCell()?k.tab(a):(o(),l.insertTab(a,f.tabSize),p())},a.memo("help.tab",g.help.tab),this.untab=function(){var a=this.createRange();a.isCollapsed()&&a.isOnCell()&&k.tab(a,!0)},a.memo("help.untab",g.help.untab),this.wrapCommand=function(a){return function(){o(),a.apply(b,arguments),p()}},this.insertParagraph=this.wrapCommand(function(){l.insertParagraph(h)}),a.memo("help.insertParagraph",g.help.insertParagraph),this.insertOrderedList=this.wrapCommand(function(){m.insertOrderedList(h)}),a.memo("help.insertOrderedList",g.help.insertOrderedList),this.insertUnorderedList=this.wrapCommand(function(){m.insertUnorderedList(h)}),a.memo("help.insertUnorderedList",g.help.insertUnorderedList),this.indent=this.wrapCommand(function(){m.indent(h)}),a.memo("help.indent",g.help.indent),this.outdent=this.wrapCommand(function(){m.outdent(h)}),a.memo("help.outdent",g.help.outdent),this.insertImage=function(b,c){return async.createImage(b,c).then(function(a){o(),"function"==typeof c?c(a):("string"==typeof c&&a.attr("data-filename",c),a.css("width",Math.min(e.width(),a.width()))),a.show(),range.create(h).insertNode(a[0]),range.createFromNodeAfter(a[0]).select(),p()}).fail(function(b){a.triggerEvent("image.upload.error",b)})},this.insertImages=function(c){$.each(c,function(c,d){var e=d.name;f.maximumImageFileSize&&f.maximumImageFileSize<d.size?a.triggerEvent("image.upload.error",g.image.maximumFileSizeError):async.readFileAsDataURL(d).then(function(a){return b.insertImage(a,e)}).fail(function(){a.triggerEvent("image.upload.error")})})},this.insertImagesOrCallback=function(b){f.callbacks.onImageUpload?a.triggerEvent("image.upload",b):this.insertImages(b)},this.insertNode=this.wrapCommand(function(a){this.createRange().insertNode(a),range.createFromNodeAfter(a).select()}),this.insertText=this.wrapCommand(function(a){var b=this.createRange(),c=b.insertNode(dom.createText(a));range.create(c,dom.nodeLength(c)).select()}),this.getSelectedText=function(){var a=this.createRange();return a.isOnAnchor()&&(a=range.createFromNode(dom.ancestor(a.sc,dom.isAnchor))),a.toString()},this.pasteHTML=this.wrapCommand(function(a){var b=this.createRange().pasteHTML(a);range.createFromNodeAfter(list.last(b)).select()}),this.formatBlock=this.wrapCommand(function(b,c){var d=a.options.callbacks.onApplyCustomStyle;d?d.call(this,c,a,this.onFormatBlock):this.onFormatBlock(b)}),this.onFormatBlock=function(a){a=agent.isMSIE?"<"+a+">":a,document.execCommand("FormatBlock",!1,a)},this.formatPara=function(){this.formatBlock("P")},a.memo("help.formatPara",g.help.formatPara);for(var r=1;r<=6;r++)this["formatH"+r]=function(a){return function(){this.formatBlock("H"+a)}}(r),a.memo("help.formatH"+r,g.help["formatH"+r]);this.fontSize=function(a){var b=this.createRange();if(b&&b.isCollapsed()){var c=j.styleNodes(b),d=list.head(c);$(c).css({"font-size":a+"px"}),d&&!dom.nodeLength(d)&&(d.innerHTML=dom.ZERO_WIDTH_NBSP_CHAR,range.createFromNodeAfter(d.firstChild).select(),e.data("bogus",d))}else o(),$(j.styleNodes(b)).css({"font-size":a+"px"}),p()},this.insertHorizontalRule=this.wrapCommand(function(){var a=this.createRange().insertNode(dom.create("HR"));a.nextSibling&&range.create(a.nextSibling,0).normalize().select()}),a.memo("help.insertHorizontalRule",g.help.insertHorizontalRule),this.removeBogus=function(){var a=e.data("bogus");if(a){var b=list.find(list.from(a.childNodes),dom.isText),c=b.nodeValue.indexOf(dom.ZERO_WIDTH_NBSP_CHAR);-1!==c&&b.deleteData(c,1),dom.isEmpty(a)&&dom.remove(a),e.removeData("bogus")}},this.lineHeight=this.wrapCommand(function(a){j.stylePara(this.createRange(),{lineHeight:a})}),this.unlink=function(){var a=this.createRange();if(a.isOnAnchor()){var b=dom.ancestor(a.sc,dom.isAnchor);a=range.createFromNode(b),a.select(),o(),document.execCommand("unlink"),p()}},this.createLink=this.wrapCommand(function(a){var b=a.url,c=a.text,d=a.isNewWindow,e=a.range||this.createRange(),g=e.toString()!==c;"string"==typeof b&&(b=b.trim()),b=f.onCreateLink?f.onCreateLink(b):/^[A-Za-z][A-Za-z0-9+-.]*\\:[\\/\\/]?/.test(b)?b:"http://"+b;var h=[];if(g){e=e.deleteContents();var i=e.insertNode($("<A>"+c+"</A>")[0]);h.push(i)}else h=j.styleNodes(e,{nodeName:"A",expandClosestSibling:!0,onlyPartialContains:!0});$.each(h,function(a,c){$(c).attr("href",b),d?$(c).attr("target","_blank"):$(c).removeAttr("target")});var k=range.createFromNodeBefore(list.head(h)),l=k.getStartPoint(),m=range.createFromNodeAfter(list.last(h)),n=m.getEndPoint();range.create(l.node,l.offset,n.node,n.offset).select()}),this.getLinkInfo=function(){var a=this.createRange().expand(dom.isAnchor),b=$(list.head(a.nodes(dom.isAnchor))),c={range:a,text:a.toString(),url:b.length?b.attr("href"):""};return b.length&&(c.isNewWindow="_blank"===b.attr("target")),c},this.color=this.wrapCommand(function(a){var b=a.foreColor,c=a.backColor;b&&document.execCommand("foreColor",!1,b),c&&document.execCommand("backColor",!1,c)}),this.insertTable=this.wrapCommand(function(a){var b=a.split("x");this.createRange().deleteContents().insertNode(k.createTable(b[0],b[1],f))}),this.floatMe=this.wrapCommand(function(a){$(this.restoreTarget()).css("float",a)}),this.resize=this.wrapCommand(function(a){$(this.restoreTarget()).css({width:100*a+"%",height:""})}),this.resizeTo=function(a,b,c){var d;if(c){var e=a.y/a.x,f=b.data("ratio");d={width:f>e?a.x:a.y/f,height:f>e?a.x*f:a.y}}else d={width:a.x,height:a.y};b.css(d)},this.removeMedia=this.wrapCommand(function(){var b=$(this.restoreTarget()).detach();a.triggerEvent("media.delete",b,e)}),this.hasFocus=function(){return e.is(":focus")},this.focus=function(){this.hasFocus()||e.focus()},this.isEmpty=function(){return dom.isEmpty(e[0])||dom.emptyPara===e.html()},this.empty=function(){a.invoke("code",dom.emptyPara)}},Clipboard=function(a){var b=this,c=a.layoutInfo.editable;this.events={"summernote.keydown":function(c,d){b.needKeydownHook()&&(d.ctrlKey||d.metaKey)&&d.keyCode===key.code.V&&(a.invoke("editor.saveRange"),b.$paste.focus(),setTimeout(function(){b.pasteByHook()},0))}},this.needKeydownHook=function(){return agent.isMSIE&&agent.browserVersion>10||agent.isFF},this.initialize=function(){this.needKeydownHook()?(this.$paste=$(\'<div tabindex="-1" />\').attr("contenteditable",!0).css({position:"absolute",left:-1e5,opacity:0}),c.before(this.$paste),this.$paste.on("paste",function(b){a.triggerEvent("paste",b)})):c.on("paste",this.pasteByEvent)},this.destroy=function(){this.needKeydownHook()&&(this.$paste.remove(),this.$paste=null)},this.pasteByHook=function(){var b=this.$paste[0].firstChild,c=b&&b.src;if(dom.isImg(b)&&0===c.indexOf("data:")){for(var d=atob(b.src.split(",")[1]),e=new Uint8Array(d.length),f=0;f<d.length;f++)e[f]=d.charCodeAt(f);var g=new Blob([e],{type:"image/png"});g.name="clipboard.png",a.invoke("editor.restoreRange"),a.invoke("editor.focus"),a.invoke("editor.insertImagesOrCallback",[g])}else{var h=$("<div />").html(this.$paste.html()).html();a.invoke("editor.restoreRange"),a.invoke("editor.focus"),h&&a.invoke("editor.pasteHTML",h)}this.$paste.empty()},this.pasteByEvent=function(b){var c=b.originalEvent.clipboardData;if(c&&c.items&&c.items.length){var d=list.head(c.items);"file"===d.kind&&-1!==d.type.indexOf("image/")&&a.invoke("editor.insertImagesOrCallback",[d.getAsFile()]),a.invoke("editor.afterCommand")}}},Dropzone=function(a){var b=$(document),c=a.layoutInfo.editor,d=a.layoutInfo.editable,e=a.options,f=e.langInfo,g={},h=$([\'<div class="note-dropzone">\',\'  <div class="note-dropzone-message"/>\',"</div>"].join("")).prependTo(c),i=function(){Object.keys(g).forEach(function(a){b.off(a.substr(2).toLowerCase(),g[a])}),g={}};this.initialize=function(){e.disableDragAndDrop?(g.onDrop=function(a){a.preventDefault()},b.on("drop",g.onDrop)):this.attachDragAndDropEvent()},this.attachDragAndDropEvent=function(){var e=$(),i=h.find(".note-dropzone-message");g.onDragenter=function(b){var d=a.invoke("codeview.isActivated"),g=c.width()>0&&c.height()>0;d||e.length||!g||(c.addClass("dragover"),h.width(c.width()),h.height(c.height()),i.text(f.image.dragImageHere)),e=e.add(b.target)},g.onDragleave=function(a){e=e.not(a.target),e.length||c.removeClass("dragover")},g.onDrop=function(){e=$(),c.removeClass("dragover")},b.on("dragenter",g.onDragenter).on("dragleave",g.onDragleave).on("drop",g.onDrop),h.on("dragenter",function(){h.addClass("hover"),i.text(f.image.dropImage)}).on("dragleave",function(){h.removeClass("hover"),i.text(f.image.dragImageHere)}),h.on("drop",function(b){var c=b.originalEvent.dataTransfer;c&&c.files&&c.files.length?(b.preventDefault(),d.focus(),a.invoke("editor.insertImagesOrCallback",c.files)):$.each(c.types,function(b,d){var e=c.getData(d);d.toLowerCase().indexOf("text")>-1?a.invoke("editor.pasteHTML",e):$(e).each(function(){a.invoke("editor.insertNode",this)})})}).on("dragover",!1)},this.destroy=function(){i()}},CodeMirror;agent.hasCodeMirror&&(agent.isSupportAmd?require(["codemirror"],function(a){CodeMirror=a}):CodeMirror=window.CodeMirror);var Codeview=function(a){var b=a.layoutInfo.editor,c=a.layoutInfo.editable,d=a.layoutInfo.codable,e=a.options;this.sync=function(){this.isActivated()&&agent.hasCodeMirror&&d.data("cmEditor").save()},this.isActivated=function(){return b.hasClass("codeview")},this.toggle=function(){this.isActivated()?this.deactivate():this.activate(),a.triggerEvent("codeview.toggled")},this.activate=function(){if(d.val(dom.html(c,e.prettifyHtml)),d.height(c.height()),a.invoke("toolbar.updateCodeview",!0),b.addClass("codeview"),d.focus(),agent.hasCodeMirror){var f=CodeMirror.fromTextArea(d[0],e.codemirror);if(e.codemirror.tern){var g=new CodeMirror.TernServer(e.codemirror.tern);f.ternServer=g,f.on("cursorActivity",function(a){g.updateArgHints(a)})}f.setSize(null,c.outerHeight()),d.data("cmEditor",f)}},this.deactivate=function(){if(agent.hasCodeMirror){var f=d.data("cmEditor");d.val(f.getValue()),f.toTextArea()}var g=dom.value(d,e.prettifyHtml)||dom.emptyPara,h=c.html()!==g;c.html(g),c.height(e.height?d.height():"auto"),b.removeClass("codeview"),h&&a.triggerEvent("change",c.html(),c),c.focus(),a.invoke("toolbar.updateCodeview",!1)},this.destroy=function(){this.isActivated()&&this.deactivate()}},EDITABLE_PADDING=24,Statusbar=function(a){var b=$(document),c=a.layoutInfo.statusbar,d=a.layoutInfo.editable,e=a.options;this.initialize=function(){if(e.airMode||e.disableResizeEditor)return void this.destroy();c.on("mousedown",function(a){a.preventDefault(),a.stopPropagation();var c=d.offset().top-b.scrollTop(),f=function(a){var b=a.clientY-(c+24);b=e.minheight>0?Math.max(b,e.minheight):b,b=e.maxHeight>0?Math.min(b,e.maxHeight):b,d.height(b)};b.on("mousemove",f).one("mouseup",function(){b.off("mousemove",f)})})},this.destroy=function(){c.off(),c.remove()}},Fullscreen=function(a){var b=this,c=a.layoutInfo.editor,d=a.layoutInfo.toolbar,e=a.layoutInfo.editable,f=a.layoutInfo.codable,g=$(window),h=$("html, body");this.resizeTo=function(a){e.css("height",a.h),f.css("height",a.h),f.data("cmeditor")&&f.data("cmeditor").setsize(null,a.h)},this.onResize=function(){b.resizeTo({h:g.height()-d.outerHeight()})},this.toggle=function(){c.toggleClass("fullscreen"),this.isFullscreen()?(e.data("orgHeight",e.css("height")),g.on("resize",this.onResize).trigger("resize"),h.css("overflow","hidden")):(g.off("resize",this.onResize),this.resizeTo({h:e.data("orgHeight")}),h.css("overflow","visible")),a.invoke("toolbar.updateFullscreen",this.isFullscreen())},this.isFullscreen=function(){return c.hasClass("fullscreen")}},Handle=function(a){var b=this,c=$(document),d=a.layoutInfo.editingArea,e=a.options;this.events={"summernote.mousedown":function(a,c){b.update(c.target)&&c.preventDefault()},"summernote.keyup summernote.scroll summernote.change summernote.dialog.shown":function(){b.update()}},this.initialize=function(){this.$handle=$([\'<div class="note-handle">\',\'<div class="note-control-selection">\',\'<div class="note-control-selection-bg"></div>\',\'<div class="note-control-holder note-control-nw"></div>\',\'<div class="note-control-holder note-control-ne"></div>\',\'<div class="note-control-holder note-control-sw"></div>\',\'<div class="\',e.disableResizeImage?"note-control-holder":"note-control-sizing",\' note-control-se"></div>\',e.disableResizeImage?"":\'<div class="note-control-selection-info"></div>\',"</div>","</div>"].join("")).prependTo(d),this.$handle.on("mousedown",function(d){if(dom.isControlSizing(d.target)){d.preventDefault(),d.stopPropagation();var e=b.$handle.find(".note-control-selection").data("target"),f=e.offset(),g=c.scrollTop(),h=function(c){a.invoke("editor.resizeTo",{x:c.clientX-f.left,y:c.clientY-(f.top-g)},e,!c.shiftKey),b.update(e[0])};c.on("mousemove",h).one("mouseup",function(b){b.preventDefault(),c.off("mousemove",h),a.invoke("editor.afterCommand")}),e.data("ratio")||e.data("ratio",e.height()/e.width())}})},this.destroy=function(){this.$handle.remove()},this.update=function(b){var c=dom.isImg(b),d=this.$handle.find(".note-control-selection");if(a.invoke("imagePopover.update",b),c){var e=$(b),f=e.position(),g={w:e.outerWidth(!0),h:e.outerHeight(!0)};d.css({display:"block",left:f.left,top:f.top,width:g.w,height:g.h}).data("target",e);var h=g.w+"x"+g.h;d.find(".note-control-selection-info").text(h),a.invoke("editor.saveTarget",b)}else this.hide();return c},this.hide=function(){a.invoke("editor.clearTarget"),this.$handle.children().hide()}},AutoLink=function(a){var b=this;this.events={"summernote.keyup":function(a,c){c.isDefaultPrevented()||b.handleKeyup(c)},"summernote.keydown":function(a,c){b.handleKeydown(c)}},this.initialize=function(){this.lastWordRange=null},this.destroy=function(){this.lastWordRange=null},this.replace=function(){if(this.lastWordRange){var b=this.lastWordRange.toString(),c=b.match(/^([A-Za-z][A-Za-z0-9+-.]*\\:[\\/\\/]?|mailto:[A-Z0-9._%+-]+@)?(www\\.)?(.+)$/i);if(c&&(c[1]||c[2])){var d=c[1]?b:"http://"+b,e=$("<a />").html(b).attr("href",d)[0];this.lastWordRange.insertNode(e),this.lastWordRange=null,a.invoke("editor.focus")}}},this.handleKeydown=function(b){if(list.contains([key.code.ENTER,key.code.SPACE],b.keyCode)){var c=a.invoke("editor.createRange").getWordRange();this.lastWordRange=c}},this.handleKeyup=function(a){list.contains([key.code.ENTER,key.code.SPACE],a.keyCode)&&this.replace()}},AutoSync=function(a){var b=a.layoutInfo.note;this.events={"summernote.change":function(){b.val(a.invoke("code"))}},this.shouldInitialize=function(){return dom.isTextarea(b[0])}},Placeholder=function(a){var b=this,c=a.layoutInfo.editingArea,d=a.options;this.events={"summernote.init summernote.change":function(){b.update()},"summernote.codeview.toggled":function(){b.update()}},this.shouldInitialize=function(){return!!d.placeholder},this.initialize=function(){this.$placeholder=$(\'<div class="note-placeholder">\'),this.$placeholder.on("click",function(){a.invoke("focus")}).text(d.placeholder).prependTo(c)},this.destroy=function(){this.$placeholder.remove()},this.update=function(){var b=!a.invoke("codeview.isActivated")&&a.invoke("editor.isEmpty");this.$placeholder.toggle(b)}},Buttons=function(a){var b=this,c=$.summernote.ui,d=a.layoutInfo.toolbar,e=a.options,f=e.langInfo,g=func.invertObject(e.keyMap[agent.isMac?"mac":"pc"]),h=this.representShortcut=function(a){var b=g[a];return e.shortcuts&&b?(agent.isMac&&(b=b.replace("CMD","⌘").replace("SHIFT","⇧"))," ("+(b=b.replace("BACKSLASH","\\\\").replace("SLASH","/").replace("LEFTBRACKET","[").replace("RIGHTBRACKET","]"))+")"):""};this.initialize=function(){this.addToolbarButtons(),this.addImagePopoverButtons(),this.addLinkPopoverButtons(),this.fontInstalledMap={}},this.destroy=function(){delete this.fontInstalledMap},this.isFontInstalled=function(a){return b.fontInstalledMap.hasOwnProperty(a)||(b.fontInstalledMap[a]=agent.isFontInstalled(a)||list.contains(e.fontNamesIgnoreCheck,a)),b.fontInstalledMap[a]},this.addToolbarButtons=function(){a.memo("button.style",function(){return c.buttonGroup([c.button({className:"dropdown-toggle",contents:c.icon(e.icons.magic)+" "+c.icon(e.icons.caret,"span"),tooltip:f.style.style,data:{toggle:"dropdown"}}),c.dropdown({className:"dropdown-style",items:a.options.styleTags,template:function(a){"string"==typeof a&&(a={tag:a,title:f.style.hasOwnProperty(a)?f.style[a]:a});var b=a.tag,c=a.title;return"<"+b+(a.style?\' style="\'+a.style+\'" \':"")+(a.className?\' class="\'+a.className+\'"\':"")+">"+c+"</"+b+">"},click:a.createInvokeHandler("editor.formatBlock")})]).render()}),a.memo("button.bold",function(){return c.button({className:"note-btn-bold",contents:c.icon(e.icons.bold),tooltip:f.font.bold+h("bold"),click:a.createInvokeHandlerAndUpdateState("editor.bold")}).render()}),a.memo("button.italic",function(){return c.button({className:"note-btn-italic",contents:c.icon(e.icons.italic),tooltip:f.font.italic+h("italic"),click:a.createInvokeHandlerAndUpdateState("editor.italic")}).render()}),a.memo("button.underline",function(){return c.button({className:"note-btn-underline",contents:c.icon(e.icons.underline),tooltip:f.font.underline+h("underline"),click:a.createInvokeHandlerAndUpdateState("editor.underline")}).render()}),a.memo("button.clear",function(){return c.button({contents:c.icon(e.icons.eraser),tooltip:f.font.clear+h("removeFormat"),click:a.createInvokeHandler("editor.removeFormat")}).render()}),a.memo("button.strikethrough",function(){return c.button({className:"note-btn-strikethrough",contents:c.icon(e.icons.strikethrough),tooltip:f.font.strikethrough+h("strikethrough"),click:a.createInvokeHandlerAndUpdateState("editor.strikethrough")}).render()}),a.memo("button.superscript",function(){return c.button({className:"note-btn-superscript",contents:c.icon(e.icons.superscript),tooltip:f.font.superscript,click:a.createInvokeHandlerAndUpdateState("editor.superscript")}).render()}),a.memo("button.subscript",function(){return c.button({className:"note-btn-subscript",contents:c.icon(e.icons.subscript),tooltip:f.font.subscript,click:a.createInvokeHandlerAndUpdateState("editor.subscript")}).render()}),a.memo("button.fontname",function(){return c.buttonGroup([c.button({className:"dropdown-toggle",contents:\'<span class="note-current-fontname"/> \'+c.icon(e.icons.caret,"span"),tooltip:f.font.name,data:{toggle:"dropdown"}}),c.dropdownCheck({className:"dropdown-fontname",checkClassName:e.icons.menuCheck,items:e.fontNames.filter(b.isFontInstalled),template:function(a){return\'<span style="font-family:\'+a+\'">\'+a+"</span>"},click:a.createInvokeHandlerAndUpdateState("editor.fontName")})]).render()}),a.memo("button.fontsize",function(){return c.buttonGroup([c.button({className:"dropdown-toggle",contents:\'<span class="note-current-fontsize"/>\'+c.icon(e.icons.caret,"span"),tooltip:f.font.size,data:{toggle:"dropdown"}}),c.dropdownCheck({className:"dropdown-fontsize",checkClassName:e.icons.menuCheck,items:e.fontSizes,click:a.createInvokeHandler("editor.fontSize")})]).render()}),a.memo("button.color",function(){return c.buttonGroup({className:"note-color",children:[c.button({className:"note-current-color-button",contents:c.icon(e.icons.font+" note-recent-color"),tooltip:f.color.recent,click:function(b){var c=$(b.currentTarget);a.invoke("editor.color",{backColor:c.attr("data-backColor"),foreColor:c.attr("data-foreColor")})},callback:function(a){a.find(".note-recent-color").css("background-color","#FFFF00"),a.attr("data-backColor","#FFFF00")}}),c.button({className:"dropdown-toggle",contents:c.icon(e.icons.caret,"span"),tooltip:f.color.more,data:{toggle:"dropdown"}}),c.dropdown({items:["<li>",\'<div class="btn-group">\',\'  <div class="note-palette-title">\'+f.color.background+"</div>","  <div>",\'    <button type="button" class="note-color-reset btn btn-default" data-event="backColor" data-value="inherit">\',f.color.transparent,"    </button>","  </div>",\'  <div class="note-holder" data-event="backColor"/>\',"</div>",\'<div class="btn-group">\',\'  <div class="note-palette-title">\'+f.color.foreground+"</div>","  <div>",\'    <button type="button" class="note-color-reset btn btn-default" data-event="removeFormat" data-value="foreColor">\',f.color.resetToDefault,"    </button>","  </div>",\'  <div class="note-holder" data-event="foreColor"/>\',"</div>","</li>"].join(""),callback:function(a){a.find(".note-holder").each(function(){var a=$(this);a.append(c.palette({colors:e.colors,eventName:a.data("event")}).render())})},click:function(b){var c=$(b.target),d=c.data("event"),e=c.data("value");if(d&&e){var f="backColor"===d?"background-color":"color",g=c.closest(".note-color").find(".note-recent-color"),h=c.closest(".note-color").find(".note-current-color-button");g.css(f,e),h.attr("data-"+d,e),a.invoke("editor."+d,e)}}})]}).render()}),a.memo("button.ul",function(){return c.button({contents:c.icon(e.icons.unorderedlist),tooltip:f.lists.unordered+h("insertUnorderedList"),click:a.createInvokeHandler("editor.insertUnorderedList")}).render()}),a.memo("button.ol",function(){return c.button({contents:c.icon(e.icons.orderedlist),tooltip:f.lists.ordered+h("insertOrderedList"),click:a.createInvokeHandler("editor.insertOrderedList")}).render()});var d=c.button({contents:c.icon(e.icons.alignLeft),tooltip:f.paragraph.left+h("justifyLeft"),click:a.createInvokeHandler("editor.justifyLeft")}),g=c.button({contents:c.icon(e.icons.alignCenter),tooltip:f.paragraph.center+h("justifyCenter"),click:a.createInvokeHandler("editor.justifyCenter")}),i=c.button({contents:c.icon(e.icons.alignRight),tooltip:f.paragraph.right+h("justifyRight"),click:a.createInvokeHandler("editor.justifyRight")}),j=c.button({contents:c.icon(e.icons.alignJustify),tooltip:f.paragraph.justify+h("justifyFull"),\r\nclick:a.createInvokeHandler("editor.justifyFull")}),k=c.button({contents:c.icon(e.icons.outdent),tooltip:f.paragraph.outdent+h("outdent"),click:a.createInvokeHandler("editor.outdent")}),l=c.button({contents:c.icon(e.icons.indent),tooltip:f.paragraph.indent+h("indent"),click:a.createInvokeHandler("editor.indent")});a.memo("button.justifyLeft",func.invoke(d,"render")),a.memo("button.justifyCenter",func.invoke(g,"render")),a.memo("button.justifyRight",func.invoke(i,"render")),a.memo("button.justifyFull",func.invoke(j,"render")),a.memo("button.outdent",func.invoke(k,"render")),a.memo("button.indent",func.invoke(l,"render")),a.memo("button.paragraph",function(){return c.buttonGroup([c.button({className:"dropdown-toggle",contents:c.icon(e.icons.alignLeft)+" "+c.icon(e.icons.caret,"span"),tooltip:f.paragraph.paragraph,data:{toggle:"dropdown"}}),c.dropdown([c.buttonGroup({className:"note-align",children:[d,g,i,j]}),c.buttonGroup({className:"note-list",children:[k,l]})])]).render()}),a.memo("button.height",function(){return c.buttonGroup([c.button({className:"dropdown-toggle",contents:c.icon(e.icons.textHeight)+" "+c.icon(e.icons.caret,"span"),tooltip:f.font.height,data:{toggle:"dropdown"}}),c.dropdownCheck({items:e.lineHeights,checkClassName:e.icons.menuCheck,className:"dropdown-line-height",click:a.createInvokeHandler("editor.lineHeight")})]).render()}),a.memo("button.table",function(){return c.buttonGroup([c.button({className:"dropdown-toggle",contents:c.icon(e.icons.table)+" "+c.icon(e.icons.caret,"span"),tooltip:f.table.table,data:{toggle:"dropdown"}}),c.dropdown({className:"note-table",items:[\'<div class="note-dimension-picker">\',\'  <div class="note-dimension-picker-mousecatcher" data-event="insertTable" data-value="1x1"/>\',\'  <div class="note-dimension-picker-highlighted"/>\',\'  <div class="note-dimension-picker-unhighlighted"/>\',"</div>",\'<div class="note-dimension-display">1 x 1</div>\'].join("")})],{callback:function(c){c.find(".note-dimension-picker-mousecatcher").css({width:e.insertTableMaxSize.col+"em",height:e.insertTableMaxSize.row+"em"}).mousedown(a.createInvokeHandler("editor.insertTable")).on("mousemove",b.tableMoveHandler)}}).render()}),a.memo("button.link",function(){return c.button({contents:c.icon(e.icons.link),tooltip:f.link.link+h("linkDialog.show"),click:a.createInvokeHandler("linkDialog.show")}).render()}),a.memo("button.picture",function(){return c.button({contents:c.icon(e.icons.picture),tooltip:f.image.image,click:a.createInvokeHandler("imageDialog.show")}).render()}),a.memo("button.video",function(){return c.button({contents:c.icon(e.icons.video),tooltip:f.video.video,click:a.createInvokeHandler("videoDialog.show")}).render()}),a.memo("button.hr",function(){return c.button({contents:c.icon(e.icons.minus),tooltip:f.hr.insert+h("insertHorizontalRule"),click:a.createInvokeHandler("editor.insertHorizontalRule")}).render()}),a.memo("button.fullscreen",function(){return c.button({className:"btn-fullscreen",contents:c.icon(e.icons.arrowsAlt),tooltip:f.options.fullscreen,click:a.createInvokeHandler("fullscreen.toggle")}).render()}),a.memo("button.codeview",function(){return c.button({className:"btn-codeview",contents:c.icon(e.icons.code),tooltip:f.options.codeview,click:a.createInvokeHandler("codeview.toggle")}).render()}),a.memo("button.redo",function(){return c.button({contents:c.icon(e.icons.redo),tooltip:f.history.redo+h("redo"),click:a.createInvokeHandler("editor.redo")}).render()}),a.memo("button.undo",function(){return c.button({contents:c.icon(e.icons.undo),tooltip:f.history.undo+h("undo"),click:a.createInvokeHandler("editor.undo")}).render()}),a.memo("button.help",function(){return c.button({contents:c.icon(e.icons.question),tooltip:f.options.help,click:a.createInvokeHandler("helpDialog.show")}).render()})},this.addImagePopoverButtons=function(){a.memo("button.imageSize100",function(){return c.button({contents:\'<span class="note-fontsize-10">100%</span>\',tooltip:f.image.resizeFull,click:a.createInvokeHandler("editor.resize","1")}).render()}),a.memo("button.imageSize50",function(){return c.button({contents:\'<span class="note-fontsize-10">50%</span>\',tooltip:f.image.resizeHalf,click:a.createInvokeHandler("editor.resize","0.5")}).render()}),a.memo("button.imageSize25",function(){return c.button({contents:\'<span class="note-fontsize-10">25%</span>\',tooltip:f.image.resizeQuarter,click:a.createInvokeHandler("editor.resize","0.25")}).render()}),a.memo("button.floatLeft",function(){return c.button({contents:c.icon(e.icons.alignLeft),tooltip:f.image.floatLeft,click:a.createInvokeHandler("editor.floatMe","left")}).render()}),a.memo("button.floatRight",function(){return c.button({contents:c.icon(e.icons.alignRight),tooltip:f.image.floatRight,click:a.createInvokeHandler("editor.floatMe","right")}).render()}),a.memo("button.floatNone",function(){return c.button({contents:c.icon(e.icons.alignJustify),tooltip:f.image.floatNone,click:a.createInvokeHandler("editor.floatMe","none")}).render()}),a.memo("button.removeMedia",function(){return c.button({contents:c.icon(e.icons.trash),tooltip:f.image.remove,click:a.createInvokeHandler("editor.removeMedia")}).render()})},this.addLinkPopoverButtons=function(){a.memo("button.linkDialogShow",function(){return c.button({contents:c.icon(e.icons.link),tooltip:f.link.edit,click:a.createInvokeHandler("linkDialog.show")}).render()}),a.memo("button.unlink",function(){return c.button({contents:c.icon(e.icons.unlink),tooltip:f.link.unlink,click:a.createInvokeHandler("editor.unlink")}).render()})},this.build=function(b,d){for(var e=0,f=d.length;e<f;e++){for(var g=d[e],h=g[0],i=g[1],j=c.buttonGroup({className:"note-"+h}).render(),k=0,l=i.length;k<l;k++){var m=a.memo("button."+i[k]);m&&j.append("function"==typeof m?m(a):m)}j.appendTo(b)}},this.updateCurrentStyle=function(){var c=a.invoke("editor.currentStyle");if(this.updateBtnStates({".note-btn-bold":function(){return"bold"===c["font-bold"]},".note-btn-italic":function(){return"italic"===c["font-italic"]},".note-btn-underline":function(){return"underline"===c["font-underline"]},".note-btn-subscript":function(){return"subscript"===c["font-subscript"]},".note-btn-superscript":function(){return"superscript"===c["font-superscript"]},".note-btn-strikethrough":function(){return"strikethrough"===c["font-strikethrough"]}}),c["font-family"]){var e=c["font-family"].split(",").map(function(a){return a.replace(/[\\\'\\"]/g,"").replace(/\\s+$/,"").replace(/^\\s+/,"")}),f=list.find(e,b.isFontInstalled);d.find(".dropdown-fontname li a").each(function(){var a=$(this).data("value")+""==f+"";this.className=a?"checked":""}),d.find(".note-current-fontname").text(f)}if(c["font-size"]){var g=c["font-size"];d.find(".dropdown-fontsize li a").each(function(){var a=$(this).data("value")+""==g+"";this.className=a?"checked":""}),d.find(".note-current-fontsize").text(g)}if(c["line-height"]){var h=c["line-height"];d.find(".dropdown-line-height li a").each(function(){var a=$(this).data("value")+""==h+"";this.className=a?"checked":""})}},this.updateBtnStates=function(a){$.each(a,function(a,b){c.toggleBtnActive(d.find(a),b())})},this.tableMoveHandler=function(a){var b,c=$(a.target.parentNode),d=c.next(),f=c.find(".note-dimension-picker-mousecatcher"),g=c.find(".note-dimension-picker-highlighted"),h=c.find(".note-dimension-picker-unhighlighted");if(void 0===a.offsetX){var i=$(a.target).offset();b={x:a.pageX-i.left,y:a.pageY-i.top}}else b={x:a.offsetX,y:a.offsetY};var j={c:Math.ceil(b.x/18)||1,r:Math.ceil(b.y/18)||1};g.css({width:j.c+"em",height:j.r+"em"}),f.data("value",j.c+"x"+j.r),3<j.c&&j.c<e.insertTableMaxSize.col&&h.css({width:j.c+1+"em"}),3<j.r&&j.r<e.insertTableMaxSize.row&&h.css({height:j.r+1+"em"}),d.html(j.c+" x "+j.r)}},Toolbar=function(a){var b=$.summernote.ui,c=a.layoutInfo.note,d=a.layoutInfo.toolbar,e=a.options;this.shouldInitialize=function(){return!e.airMode},this.initialize=function(){e.toolbar=e.toolbar||[],e.toolbar.length?a.invoke("buttons.build",d,e.toolbar):d.hide(),e.toolbarContainer&&d.appendTo(e.toolbarContainer),c.on("summernote.keyup summernote.mouseup summernote.change",function(){a.invoke("buttons.updateCurrentStyle")}),a.invoke("buttons.updateCurrentStyle")},this.destroy=function(){d.children().remove()},this.updateFullscreen=function(a){b.toggleBtnActive(d.find(".btn-fullscreen"),a)},this.updateCodeview=function(a){b.toggleBtnActive(d.find(".btn-codeview"),a),a?this.deactivate():this.activate()},this.activate=function(a){var c=d.find("button");a||(c=c.not(".btn-codeview")),b.toggleBtn(c,!0)},this.deactivate=function(a){var c=d.find("button");a||(c=c.not(".btn-codeview")),b.toggleBtn(c,!1)}},LinkDialog=function(a){var b=this,c=$.summernote.ui,d=a.layoutInfo.editor,e=a.options,f=e.langInfo;this.initialize=function(){var a=e.dialogsInBody?$(document.body):d,b=\'<div class="form-group"><label>\'+f.link.textToDisplay+\'</label><input class="note-link-text form-control" type="text" /></div><div class="form-group"><label>\'+f.link.url+\'</label><input class="note-link-url form-control" type="text" value="http://" /></div>\'+(e.disableLinkTarget?"":\'<div class="checkbox"><label for="sn-checkbox-open-in-new-window"><input type="checkbox" id="sn-checkbox-open-in-new-window" checked />\'+f.link.openInNewWindow+"</label></div>"),g=\'<button href="#" class="btn btn-primary note-link-btn disabled" disabled>\'+f.link.insert+"</button>";this.$dialog=c.dialog({className:"link-dialog",title:f.link.insert,fade:e.dialogsFade,body:b,footer:g}).render().appendTo(a)},this.destroy=function(){c.hideDialog(this.$dialog),this.$dialog.remove()},this.bindEnterKey=function(a,b){a.on("keypress",function(a){a.keyCode===key.code.ENTER&&b.trigger("click")})},this.toggleLinkBtn=function(a,b,d){c.toggleBtn(a,b.val()&&d.val())},this.showLinkDialog=function(d){return $.Deferred(function(e){var f=b.$dialog.find(".note-link-text"),g=b.$dialog.find(".note-link-url"),h=b.$dialog.find(".note-link-btn"),i=b.$dialog.find("input[type=checkbox]");c.onDialogShown(b.$dialog,function(){a.triggerEvent("dialog.shown"),d.url||(d.url=d.text),f.val(d.text);var c=function(){b.toggleLinkBtn(h,f,g),d.text=f.val()};f.on("input",c).on("paste",function(){setTimeout(c,0)});var j=function(){b.toggleLinkBtn(h,f,g),d.text||f.val(g.val())};g.on("input",j).on("paste",function(){setTimeout(j,0)}).val(d.url).trigger("focus"),b.toggleLinkBtn(h,f,g),b.bindEnterKey(g,h),b.bindEnterKey(f,h);var k=void 0!==d.isNewWindow?d.isNewWindow:a.options.linkTargetBlank;i.prop("checked",k),h.one("click",function(a){a.preventDefault(),e.resolve({range:d.range,url:g.val(),text:f.val(),isNewWindow:i.is(":checked")}),b.$dialog.modal("hide")})}),c.onDialogHidden(b.$dialog,function(){f.off("input paste keypress"),g.off("input paste keypress"),h.off("click"),"pending"===e.state()&&e.reject()}),c.showDialog(b.$dialog)}).promise()},this.show=function(){var b=a.invoke("editor.getLinkInfo");a.invoke("editor.saveRange"),this.showLinkDialog(b).then(function(b){a.invoke("editor.restoreRange"),a.invoke("editor.createLink",b)}).fail(function(){a.invoke("editor.restoreRange")})},a.memo("help.linkDialog.show",e.langInfo.help["linkDialog.show"])},LinkPopover=function(a){var b=this,c=$.summernote.ui,d=a.options;this.events={"summernote.keyup summernote.mouseup summernote.change summernote.scroll":function(){b.update()},"summernote.dialog.shown":function(){b.hide()}},this.shouldInitialize=function(){return!list.isEmpty(d.popover.link)},this.initialize=function(){this.$popover=c.popover({className:"note-link-popover",callback:function(a){a.find(".popover-content").prepend(\'<span><a target="_blank"></a>&nbsp;</span>\')}}).render().appendTo("body");var b=this.$popover.find(".popover-content");a.invoke("buttons.build",b,d.popover.link)},this.destroy=function(){this.$popover.remove()},this.update=function(){if(!a.invoke("editor.hasFocus"))return void this.hide();var b=a.invoke("editor.createRange");if(b.isCollapsed()&&b.isOnAnchor()){var c=dom.ancestor(b.sc,dom.isAnchor),d=$(c).attr("href");this.$popover.find("a").attr("href",d).html(d);var e=dom.posFromPlaceholder(c);this.$popover.css({display:"block",left:e.left,top:e.top})}else this.hide()},this.hide=function(){this.$popover.hide()}},ImageDialog=function(a){var b=this,c=$.summernote.ui,d=a.layoutInfo.editor,e=a.options,f=e.langInfo;this.initialize=function(){var a=e.dialogsInBody?$(document.body):d,b="";if(e.maximumImageFileSize){var g=Math.floor(Math.log(e.maximumImageFileSize)/Math.log(1024)),h=1*(e.maximumImageFileSize/Math.pow(1024,g)).toFixed(2)+" "+" KMGTP"[g]+"B";b="<small>"+f.image.maximumFileSize+" : "+h+"</small>"}var i=\'<div class="form-group note-group-select-from-files"><label>\'+f.image.selectFromFiles+\'</label><input class="note-image-input form-control" type="file" name="files" accept="image/*" multiple="multiple" />\'+b+\'</div><div class="form-group note-group-image-url" style="overflow:auto;"><label>\'+f.image.url+\'</label><input class="note-image-url form-control col-md-12" type="text" /></div>\',j=\'<button href="#" class="btn btn-primary note-image-btn disabled" disabled>\'+f.image.insert+"</button>";this.$dialog=c.dialog({title:f.image.insert,fade:e.dialogsFade,body:i,footer:j}).render().appendTo(a)},this.destroy=function(){c.hideDialog(this.$dialog),this.$dialog.remove()},this.bindEnterKey=function(a,b){a.on("keypress",function(a){a.keyCode===key.code.ENTER&&b.trigger("click")})},this.show=function(){a.invoke("editor.saveRange"),this.showImageDialog().then(function(d){c.hideDialog(b.$dialog),a.invoke("editor.restoreRange"),"string"==typeof d?a.invoke("editor.insertImage",d):a.invoke("editor.insertImagesOrCallback",d)}).fail(function(){a.invoke("editor.restoreRange")})},this.showImageDialog=function(){return $.Deferred(function(d){var e=b.$dialog.find(".note-image-input"),f=b.$dialog.find(".note-image-url"),g=b.$dialog.find(".note-image-btn");c.onDialogShown(b.$dialog,function(){a.triggerEvent("dialog.shown"),e.replaceWith(e.clone().on("change",function(){d.resolve(this.files||this.value)}).val("")),g.click(function(a){a.preventDefault(),d.resolve(f.val())}),f.on("keyup paste",function(){var a=f.val();c.toggleBtn(g,a)}).val("").trigger("focus"),b.bindEnterKey(f,g)}),c.onDialogHidden(b.$dialog,function(){e.off("change"),f.off("keyup paste keypress"),g.off("click"),"pending"===d.state()&&d.reject()}),c.showDialog(b.$dialog)})}},ImagePopover=function(a){var b=$.summernote.ui,c=a.options;this.shouldInitialize=function(){return!list.isEmpty(c.popover.image)},this.initialize=function(){this.$popover=b.popover({className:"note-image-popover"}).render().appendTo("body");var d=this.$popover.find(".popover-content");a.invoke("buttons.build",d,c.popover.image)},this.destroy=function(){this.$popover.remove()},this.update=function(a){if(dom.isImg(a)){var b=dom.posFromPlaceholder(a);this.$popover.css({display:"block",left:b.left,top:b.top})}else this.hide()},this.hide=function(){this.$popover.hide()}},VideoDialog=function(a){var b=this,c=$.summernote.ui,d=a.layoutInfo.editor,e=a.options,f=e.langInfo;this.initialize=function(){var a=e.dialogsInBody?$(document.body):d,b=\'<div class="form-group row-fluid"><label>\'+f.video.url+\' <small class="text-muted">\'+f.video.providers+\'</small></label><input class="note-video-url form-control span12" type="text" /></div>\',g=\'<button href="#" class="btn btn-primary note-video-btn disabled" disabled>\'+f.video.insert+"</button>";this.$dialog=c.dialog({title:f.video.insert,fade:e.dialogsFade,body:b,footer:g}).render().appendTo(a)},this.destroy=function(){c.hideDialog(this.$dialog),this.$dialog.remove()},this.bindEnterKey=function(a,b){a.on("keypress",function(a){a.keyCode===key.code.ENTER&&b.trigger("click")})},this.createVideoNode=function(a){var b,c=a.match(/^(?:https?:\\/\\/)?(?:www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/),d=a.match(/(?:www\\.|\\/\\/)instagram\\.com\\/p\\/(.[a-zA-Z0-9_-]*)/),e=a.match(/\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]+)/),f=a.match(/\\/\\/(player\\.)?vimeo\\.com\\/([a-z]*\\/)*(\\d+)[?]?.*/),g=a.match(/.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/),h=a.match(/\\/\\/v\\.youku\\.com\\/v_show\\/id_(\\w+)=*\\.html/),i=a.match(/^.+.(mp4|m4v)$/),j=a.match(/^.+.(ogg|ogv)$/),k=a.match(/^.+.(webm)$/);if(c&&11===c[1].length){var l=c[1];b=$("<iframe>").attr("frameborder",0).attr("src","//www.youtube.com/embed/"+l).attr("width","640").attr("height","360")}else if(d&&d[0].length)b=$("<iframe>").attr("frameborder",0).attr("src","https://instagram.com/p/"+d[1]+"/embed/").attr("width","612").attr("height","710").attr("scrolling","no").attr("allowtransparency","true");else if(e&&e[0].length)b=$("<iframe>").attr("frameborder",0).attr("src",e[0]+"/embed/simple").attr("width","600").attr("height","600").attr("class","vine-embed");else if(f&&f[3].length)b=$("<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>").attr("frameborder",0).attr("src","//player.vimeo.com/video/"+f[3]).attr("width","640").attr("height","360");else if(g&&g[2].length)b=$("<iframe>").attr("frameborder",0).attr("src","//www.dailymotion.com/embed/video/"+g[2]).attr("width","640").attr("height","360");else if(h&&h[1].length)b=$("<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>").attr("frameborder",0).attr("height","498").attr("width","510").attr("src","//player.youku.com/embed/"+h[1]);else{if(!(i||j||k))return!1;b=$("<video controls>").attr("src",a).attr("width","640").attr("height","360")}return b.addClass("note-video-clip"),b[0]},this.show=function(){var d=a.invoke("editor.getSelectedText");a.invoke("editor.saveRange"),this.showVideoDialog(d).then(function(d){c.hideDialog(b.$dialog),a.invoke("editor.restoreRange");var e=b.createVideoNode(d);e&&a.invoke("editor.insertNode",e)}).fail(function(){a.invoke("editor.restoreRange")})},this.showVideoDialog=function(d){return $.Deferred(function(e){var f=b.$dialog.find(".note-video-url"),g=b.$dialog.find(".note-video-btn");c.onDialogShown(b.$dialog,function(){a.triggerEvent("dialog.shown"),f.val(d).on("input",function(){c.toggleBtn(g,f.val())}).trigger("focus"),g.click(function(a){a.preventDefault(),e.resolve(f.val())}),b.bindEnterKey(f,g)}),c.onDialogHidden(b.$dialog,function(){f.off("input"),g.off("click"),"pending"===e.state()&&e.reject()}),c.showDialog(b.$dialog)})}},HelpDialog=function(a){var b=this,c=$.summernote.ui,d=a.layoutInfo.editor,e=a.options,f=e.langInfo;this.createShortCutList=function(){var b=e.keyMap[agent.isMac?"mac":"pc"];return Object.keys(b).map(function(c){var d=b[c],e=$(\'<div><div class="help-list-item"/></div>\');return e.append($("<label><kbd>"+c+"</kdb></label>").css({width:180,"margin-right":10})).append($("<span/>").html(a.memo("help."+d)||d)),e.html()}).join("")},this.initialize=function(){var a=e.dialogsInBody?$(document.body):d,b=[\'<p class="text-center">\',\'<a href="http://summernote.org/" target="_blank">Summernote 0.8.4</a> · \',\'<a href="https://github.com/summernote/summernote" target="_blank">Project</a> · \',\'<a href="https://github.com/summernote/summernote/issues" target="_blank">Issues</a>\',"</p>"].join("");this.$dialog=c.dialog({title:f.options.help,fade:e.dialogsFade,body:this.createShortCutList(),footer:b,callback:function(a){a.find(".modal-body").css({"max-height":300,overflow:"scroll"})}}).render().appendTo(a)},this.destroy=function(){c.hideDialog(this.$dialog),this.$dialog.remove()},this.showHelpDialog=function(){return $.Deferred(function(d){c.onDialogShown(b.$dialog,function(){a.triggerEvent("dialog.shown"),d.resolve()}),c.showDialog(b.$dialog)}).promise()},this.show=function(){a.invoke("editor.saveRange"),this.showHelpDialog().then(function(){a.invoke("editor.restoreRange")})}},AirPopover=function(a){var b=this,c=$.summernote.ui,d=a.options;this.events={"summernote.keyup summernote.mouseup summernote.scroll":function(){b.update()},"summernote.change summernote.dialog.shown":function(){b.hide()},"summernote.focusout":function(a,c){agent.isFF||c.relatedTarget&&dom.ancestor(c.relatedTarget,func.eq(b.$popover[0]))||b.hide()}},this.shouldInitialize=function(){return d.airMode&&!list.isEmpty(d.popover.air)},this.initialize=function(){this.$popover=c.popover({className:"note-air-popover"}).render().appendTo("body");var b=this.$popover.find(".popover-content");a.invoke("buttons.build",b,d.popover.air)},this.destroy=function(){this.$popover.remove()},this.update=function(){var b=a.invoke("editor.currentStyle");if(b.range&&!b.range.isCollapsed()){var c=list.last(b.range.getClientRects());if(c){var d=func.rect2bnd(c);this.$popover.css({display:"block",left:Math.max(d.left+d.width/2,0)-20,top:d.top+d.height})}}else this.hide()},this.hide=function(){this.$popover.hide()}},HintPopover=function(a){var b=this,c=$.summernote.ui,d=a.options.hint||[],e=a.options.hintDirection||"bottom",f=$.isArray(d)?d:[d];this.events={"summernote.keyup":function(a,c){c.isDefaultPrevented()||b.handleKeyup(c)},"summernote.keydown":function(a,c){b.handleKeydown(c)},"summernote.dialog.shown":function(){b.hide()}},this.shouldInitialize=function(){return f.length>0},this.initialize=function(){this.lastWordRange=null,this.$popover=c.popover({className:"note-hint-popover",hideArrow:!0,direction:""}).render().appendTo("body"),this.$popover.hide(),this.$content=this.$popover.find(".popover-content"),this.$content.on("click",".note-hint-item",function(){b.$content.find(".active").removeClass("active"),$(this).addClass("active"),b.replace()})},this.destroy=function(){this.$popover.remove()},this.selectItem=function(a){this.$content.find(".active").removeClass("active"),a.addClass("active"),this.$content[0].scrollTop=a[0].offsetTop-this.$content.innerHeight()/2},this.moveDown=function(){var a=this.$content.find(".note-hint-item.active"),b=a.next();if(b.length)this.selectItem(b);else{var c=a.parent().next();c.length||(c=this.$content.find(".note-hint-group").first()),this.selectItem(c.find(".note-hint-item").first())}},this.moveUp=function(){var a=this.$content.find(".note-hint-item.active"),b=a.prev();if(b.length)this.selectItem(b);else{var c=a.parent().prev();c.length||(c=this.$content.find(".note-hint-group").last()),this.selectItem(c.find(".note-hint-item").last())}},this.replace=function(){var b=this.$content.find(".note-hint-item.active");if(b.length){var c=this.nodeFromItem(b);this.lastWordRange.insertNode(c),range.createFromNode(c).collapse().select(),this.lastWordRange=null,this.hide(),a.triggerEvent("change",a.layoutInfo.editable.html(),a.layoutInfo.editable),a.invoke("editor.focus")}},this.nodeFromItem=function(a){var b=f[a.data("index")],c=a.data("item"),d=b.content?b.content(c):c;return"string"==typeof d&&(d=dom.createText(d)),d},this.createItemTemplates=function(a,b){var c=f[a];return b.map(function(b,d){var e=$(\'<div class="note-hint-item"/>\');return e.append(c.template?c.template(b):b+""),e.data({index:a,item:b}),0===a&&0===d&&e.addClass("active"),e})},this.handleKeydown=function(a){this.$popover.is(":visible")&&(a.keyCode===key.code.ENTER?(a.preventDefault(),this.replace()):a.keyCode===key.code.UP?(a.preventDefault(),this.moveUp()):a.keyCode===key.code.DOWN&&(a.preventDefault(),this.moveDown()))},this.searchKeyword=function(a,b,c){var d=f[a];if(d&&d.match.test(b)&&d.search){var e=d.match.exec(b);d.search(e[1],c)}else c()},this.createGroup=function(a,c){var d=$(\'<div class="note-hint-group note-hint-group-\'+a+\'"/>\');return this.searchKeyword(a,c,function(c){c=c||[],c.length&&(d.html(b.createItemTemplates(a,c)),b.show())}),d},this.handleKeyup=function(c){if(list.contains([key.code.ENTER,key.code.UP,key.code.DOWN],c.keyCode)){if(c.keyCode===key.code.ENTER&&this.$popover.is(":visible"))return}else{var d=a.invoke("editor.createRange").getWordRange(),g=d.toString();if(f.length&&g){this.$content.empty();var h=func.rect2bnd(list.last(d.getClientRects()));h&&(this.$popover.hide(),this.lastWordRange=d,f.forEach(function(a,c){a.match.test(g)&&b.createGroup(c,g).appendTo(b.$content)}),"top"===e?this.$popover.css({left:h.left,top:h.top-this.$popover.outerHeight()-5}):this.$popover.css({left:h.left,top:h.top+h.height+5}))}else this.hide()}},this.show=function(){this.$popover.show()},this.hide=function(){this.$popover.hide()}};$.summernote=$.extend($.summernote,{version:"0.8.4",ui:ui,dom:dom,plugins:{},options:{modules:{editor:Editor,clipboard:Clipboard,dropzone:Dropzone,codeview:Codeview,statusbar:Statusbar,fullscreen:Fullscreen,handle:Handle,hintPopover:HintPopover,autoLink:AutoLink,autoSync:AutoSync,placeholder:Placeholder,buttons:Buttons,toolbar:Toolbar,linkDialog:LinkDialog,linkPopover:LinkPopover,imageDialog:ImageDialog,imagePopover:ImagePopover,videoDialog:VideoDialog,helpDialog:HelpDialog,airPopover:AirPopover},buttons:{},lang:"en-US",toolbar:[["style",["style"]],["font",["bold","underline","clear"]],["fontname",["fontname"]],["color",["color"]],["para",["ul","ol","paragraph"]],["table",["table"]],["insert",["link","picture","video"]],["view",["fullscreen","codeview","help"]]],popover:{image:[["imagesize",["imageSize100","imageSize50","imageSize25"]],["float",["floatLeft","floatRight","floatNone"]],["remove",["removeMedia"]]],link:[["link",["linkDialogShow","unlink"]]],air:[["color",["color"]],["font",["bold","underline","clear"]],["para",["ul","paragraph"]],["table",["table"]],["insert",["link","picture"]]]},airMode:!1,width:null,height:null,linkTargetBlank:!0,focus:!1,tabSize:4,styleWithSpan:!0,shortcuts:!0,textareaAutoSync:!0,direction:null,tooltip:"auto",styleTags:["p","blockquote","pre","h1","h2","h3","h4","h5","h6"],fontNames:["Arial","Arial Black","Comic Sans MS","Courier New","Helvetica Neue","Helvetica","Impact","Lucida Grande","Tahoma","Times New Roman","Verdana"],fontSizes:["8","9","10","11","12","14","18","24","36"],colors:[["#000000","#424242","#636363","#9C9C94","#CEC6CE","#EFEFEF","#F7F7F7","#FFFFFF"],["#FF0000","#FF9C00","#FFFF00","#00FF00","#00FFFF","#0000FF","#9C00FF","#FF00FF"],["#F7C6CE","#FFE7CE","#FFEFC6","#D6EFD6","#CEDEE7","#CEE7F7","#D6D6E7","#E7D6DE"],["#E79C9C","#FFC69C","#FFE79C","#B5D6A5","#A5C6CE","#9CC6EF","#B5A5D6","#D6A5BD"],["#E76363","#F7AD6B","#FFD663","#94BD7B","#73A5AD","#6BADDE","#8C7BC6","#C67BA5"],["#CE0000","#E79439","#EFC631","#6BA54A","#4A7B8C","#3984C6","#634AA5","#A54A7B"],["#9C0000","#B56308","#BD9400","#397B21","#104A5A","#085294","#311873","#731842"],["#630000","#7B3900","#846300","#295218","#083139","#003163","#21104A","#4A1031"]],lineHeights:["1.0","1.2","1.4","1.5","1.6","1.8","2.0","3.0"],tableClassName:"table table-bordered",insertTableMaxSize:{col:10,row:10},dialogsInBody:!1,dialogsFade:!1,maximumImageFileSize:null,callbacks:{onInit:null,onFocus:null,onBlur:null,onEnter:null,onKeyup:null,onKeydown:null,onImageUpload:null,onImageUploadError:null},codemirror:{mode:"text/html",htmlMode:!0,lineNumbers:!0},keyMap:{pc:{ENTER:"insertParagraph","CTRL+Z":"undo","CTRL+Y":"redo",TAB:"tab","SHIFT+TAB":"untab","CTRL+B":"bold","CTRL+I":"italic","CTRL+U":"underline","CTRL+SHIFT+S":"strikethrough","CTRL+BACKSLASH":"removeFormat","CTRL+SHIFT+L":"justifyLeft","CTRL+SHIFT+E":"justifyCenter","CTRL+SHIFT+R":"justifyRight","CTRL+SHIFT+J":"justifyFull","CTRL+SHIFT+NUM7":"insertUnorderedList","CTRL+SHIFT+NUM8":"insertOrderedList","CTRL+LEFTBRACKET":"outdent","CTRL+RIGHTBRACKET":"indent","CTRL+NUM0":"formatPara","CTRL+NUM1":"formatH1","CTRL+NUM2":"formatH2","CTRL+NUM3":"formatH3","CTRL+NUM4":"formatH4","CTRL+NUM5":"formatH5","CTRL+NUM6":"formatH6","CTRL+ENTER":"insertHorizontalRule","CTRL+K":"linkDialog.show"},mac:{ENTER:"insertParagraph","CMD+Z":"undo","CMD+SHIFT+Z":"redo",TAB:"tab","SHIFT+TAB":"untab","CMD+B":"bold","CMD+I":"italic","CMD+U":"underline","CMD+SHIFT+S":"strikethrough","CMD+BACKSLASH":"removeFormat","CMD+SHIFT+L":"justifyLeft","CMD+SHIFT+E":"justifyCenter","CMD+SHIFT+R":"justifyRight","CMD+SHIFT+J":"justifyFull","CMD+SHIFT+NUM7":"insertUnorderedList","CMD+SHIFT+NUM8":"insertOrderedList","CMD+LEFTBRACKET":"outdent","CMD+RIGHTBRACKET":"indent","CMD+NUM0":"formatPara","CMD+NUM1":"formatH1","CMD+NUM2":"formatH2","CMD+NUM3":"formatH3","CMD+NUM4":"formatH4","CMD+NUM5":"formatH5","CMD+NUM6":"formatH6","CMD+ENTER":"insertHorizontalRule","CMD+K":"linkDialog.show"}},icons:{align:"note-icon-align",alignCenter:"note-icon-align-center",alignJustify:"note-icon-align-justify",alignLeft:"note-icon-align-left",alignRight:"note-icon-align-right",indent:"note-icon-align-indent",outdent:"note-icon-align-outdent",arrowsAlt:"note-icon-arrows-alt",bold:"note-icon-bold",caret:"note-icon-caret",circle:"note-icon-circle",close:"note-icon-close",code:"note-icon-code",eraser:"note-icon-eraser",font:"note-icon-font",frame:"note-icon-frame",italic:"note-icon-italic",link:"note-icon-link",unlink:"note-icon-chain-broken",magic:"note-icon-magic",menuCheck:"note-icon-check",minus:"note-icon-minus",orderedlist:"note-icon-orderedlist",pencil:"note-icon-pencil",picture:"note-icon-picture",question:"note-icon-question",redo:"note-icon-redo",square:"note-icon-square",strikethrough:"note-icon-strikethrough",subscript:"note-icon-subscript",superscript:"note-icon-superscript",table:"note-icon-table",textHeight:"note-icon-text-height",trash:"note-icon-trash",underline:"note-icon-underline",undo:"note-icon-undo",unorderedlist:"note-icon-unorderedlist",video:"note-icon-video"}}})});'},2447:function(e,n){e.exports="(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.toMarkdown = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\r\n/*\r\n * to-markdown - an HTML to Markdown converter\r\n *\r\n * Copyright 2011+, Dom Christie\r\n * Licenced under the MIT licence\r\n *\r\n */\r\n\r\n'use strict'\r\n\r\nvar toMarkdown\r\nvar converters\r\nvar mdConverters = require('./lib/md-converters')\r\nvar gfmConverters = require('./lib/gfm-converters')\r\nvar HtmlParser = require('./lib/html-parser')\r\nvar collapse = require('collapse-whitespace')\r\n\r\n/*\r\n * Utilities\r\n */\r\n\r\nvar blocks = ['address', 'article', 'aside', 'audio', 'blockquote', 'body',\r\n  'canvas', 'center', 'dd', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption',\r\n  'figure', 'footer', 'form', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\r\n  'header', 'hgroup', 'hr', 'html', 'isindex', 'li', 'main', 'menu', 'nav',\r\n  'noframes', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table',\r\n  'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul'\r\n]\r\n\r\nfunction isBlock (node) {\r\n  return blocks.indexOf(node.nodeName.toLowerCase()) !== -1\r\n}\r\n\r\nvar voids = [\r\n  'area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input',\r\n  'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'\r\n]\r\n\r\nfunction isVoid (node) {\r\n  return voids.indexOf(node.nodeName.toLowerCase()) !== -1\r\n}\r\n\r\nfunction htmlToDom (string) {\r\n  var tree = new HtmlParser().parseFromString(string, 'text/html')\r\n  collapse(tree.documentElement, isBlock)\r\n  return tree\r\n}\r\n\r\n/*\r\n * Flattens DOM tree into single array\r\n */\r\n\r\nfunction bfsOrder (node) {\r\n  var inqueue = [node]\r\n  var outqueue = []\r\n  var elem\r\n  var children\r\n  var i\r\n\r\n  while (inqueue.length > 0) {\r\n    elem = inqueue.shift()\r\n    outqueue.push(elem)\r\n    children = elem.childNodes\r\n    for (i = 0; i < children.length; i++) {\r\n      if (children[i].nodeType === 1) inqueue.push(children[i])\r\n    }\r\n  }\r\n  outqueue.shift()\r\n  return outqueue\r\n}\r\n\r\n/*\r\n * Contructs a Markdown string of replacement text for a given node\r\n */\r\n\r\nfunction getContent (node) {\r\n  var text = ''\r\n  for (var i = 0; i < node.childNodes.length; i++) {\r\n    if (node.childNodes[i].nodeType === 1) {\r\n      text += node.childNodes[i]._replacement\r\n    } else if (node.childNodes[i].nodeType === 3) {\r\n      text += node.childNodes[i].data\r\n    } else continue\r\n  }\r\n  return text\r\n}\r\n\r\n/*\r\n * Returns the HTML string of an element with its contents converted\r\n */\r\n\r\nfunction outer (node, content) {\r\n  return node.cloneNode(false).outerHTML.replace('><', '>' + content + '<')\r\n}\r\n\r\nfunction canConvert (node, filter) {\r\n  if (typeof filter === 'string') {\r\n    return filter === node.nodeName.toLowerCase()\r\n  }\r\n  if (Array.isArray(filter)) {\r\n    return filter.indexOf(node.nodeName.toLowerCase()) !== -1\r\n  } else if (typeof filter === 'function') {\r\n    return filter.call(toMarkdown, node)\r\n  } else {\r\n    throw new TypeError('`filter` needs to be a string, array, or function')\r\n  }\r\n}\r\n\r\nfunction isFlankedByWhitespace (side, node) {\r\n  var sibling\r\n  var regExp\r\n  var isFlanked\r\n\r\n  if (side === 'left') {\r\n    sibling = node.previousSibling\r\n    regExp = / $/\r\n  } else {\r\n    sibling = node.nextSibling\r\n    regExp = /^ /\r\n  }\r\n\r\n  if (sibling) {\r\n    if (sibling.nodeType === 3) {\r\n      isFlanked = regExp.test(sibling.nodeValue)\r\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\r\n      isFlanked = regExp.test(sibling.textContent)\r\n    }\r\n  }\r\n  return isFlanked\r\n}\r\n\r\nfunction flankingWhitespace (node, content) {\r\n  var leading = ''\r\n  var trailing = ''\r\n\r\n  if (!isBlock(node)) {\r\n    var hasLeading = /^[ \\r\\n\\t]/.test(content)\r\n    var hasTrailing = /[ \\r\\n\\t]$/.test(content)\r\n\r\n    if (hasLeading && !isFlankedByWhitespace('left', node)) {\r\n      leading = ' '\r\n    }\r\n    if (hasTrailing && !isFlankedByWhitespace('right', node)) {\r\n      trailing = ' '\r\n    }\r\n  }\r\n\r\n  return { leading: leading, trailing: trailing }\r\n}\r\n\r\n/*\r\n * Finds a Markdown converter, gets the replacement, and sets it on\r\n * `_replacement`\r\n */\r\n\r\nfunction process (node) {\r\n  var replacement\r\n  var content = getContent(node)\r\n\r\n  // Remove blank nodes\r\n  if (!isVoid(node) && !/A|TH|TD/.test(node.nodeName) && /^\\s*$/i.test(content)) {\r\n    node._replacement = ''\r\n    return\r\n  }\r\n\r\n  for (var i = 0; i < converters.length; i++) {\r\n    var converter = converters[i]\r\n\r\n    if (canConvert(node, converter.filter)) {\r\n      if (typeof converter.replacement !== 'function') {\r\n        throw new TypeError(\r\n          '`replacement` needs to be a function that returns a string'\r\n        )\r\n      }\r\n\r\n      var whitespace = flankingWhitespace(node, content)\r\n\r\n      if (whitespace.leading || whitespace.trailing) {\r\n        content = content.trim()\r\n      }\r\n      replacement = whitespace.leading +\r\n        converter.replacement.call(toMarkdown, content, node) +\r\n        whitespace.trailing\r\n      break\r\n    }\r\n  }\r\n\r\n  node._replacement = replacement\r\n}\r\n\r\ntoMarkdown = function (input, options) {\r\n  options = options || {}\r\n\r\n  if (typeof input !== 'string') {\r\n    throw new TypeError(input + ' is not a string')\r\n  }\r\n\r\n  if (input === '') {\r\n    return ''\r\n  }\r\n\r\n  // Escape potential ol triggers\r\n  input = input.replace(/(\\d+)\\. /g, '$1\\\\. ')\r\n\r\n  var clone = htmlToDom(input).body\r\n  var nodes = bfsOrder(clone)\r\n  var output\r\n\r\n  converters = mdConverters.slice(0)\r\n  if (options.gfm) {\r\n    converters = gfmConverters.concat(converters)\r\n  }\r\n\r\n  if (options.converters) {\r\n    converters = options.converters.concat(converters)\r\n  }\r\n\r\n  // Process through nodes in reverse (so deepest child elements are first).\r\n  for (var i = nodes.length - 1; i >= 0; i--) {\r\n    process(nodes[i])\r\n  }\r\n  output = getContent(clone)\r\n\r\n  return output.replace(/^[\\t\\r\\n]+|[\\t\\r\\n\\s]+$/g, '')\r\n    .replace(/\\n\\s+\\n/g, '\\n\\n')\r\n    .replace(/\\n{3,}/g, '\\n\\n')\r\n}\r\n\r\ntoMarkdown.isBlock = isBlock\r\ntoMarkdown.isVoid = isVoid\r\ntoMarkdown.outer = outer\r\n\r\nmodule.exports = toMarkdown\r\n\r\n},{\"./lib/gfm-converters\":2,\"./lib/html-parser\":3,\"./lib/md-converters\":4,\"collapse-whitespace\":7}],2:[function(require,module,exports){\r\n'use strict'\r\n\r\nfunction cell (content, node) {\r\n  var index = Array.prototype.indexOf.call(node.parentNode.childNodes, node)\r\n  var prefix = ' '\r\n  if (index === 0) prefix = '| '\r\n  return prefix + content + ' |'\r\n}\r\n\r\nvar highlightRegEx = /highlight highlight-(\\S+)/\r\n\r\nmodule.exports = [\r\n  {\r\n    filter: 'br',\r\n    replacement: function () {\r\n      return '\\n'\r\n    }\r\n  },\r\n  {\r\n    filter: ['del', 's', 'strike'],\r\n    replacement: function (content) {\r\n      return '~~' + content + '~~'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: function (node) {\r\n      return node.type === 'checkbox' && node.parentNode.nodeName === 'LI'\r\n    },\r\n    replacement: function (content, node) {\r\n      return (node.checked ? '[x]' : '[ ]') + ' '\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: ['th', 'td'],\r\n    replacement: function (content, node) {\r\n      return cell(content, node)\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: 'tr',\r\n    replacement: function (content, node) {\r\n      var borderCells = ''\r\n      var alignMap = { left: ':--', right: '--:', center: ':-:' }\r\n\r\n      if (node.parentNode.nodeName === 'THEAD') {\r\n        for (var i = 0; i < node.childNodes.length; i++) {\r\n          var align = node.childNodes[i].attributes.align\r\n          var border = '---'\r\n\r\n          if (align) border = alignMap[align.value] || border\r\n\r\n          borderCells += cell(border, node.childNodes[i])\r\n        }\r\n      }\r\n      return '\\n' + content + (borderCells ? '\\n' + borderCells : '')\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: 'table',\r\n    replacement: function (content) {\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: ['thead', 'tbody', 'tfoot'],\r\n    replacement: function (content) {\r\n      return content\r\n    }\r\n  },\r\n\r\n  // Fenced code blocks\r\n  {\r\n    filter: function (node) {\r\n      return node.nodeName === 'PRE' &&\r\n      node.firstChild &&\r\n      node.firstChild.nodeName === 'CODE'\r\n    },\r\n    replacement: function (content, node) {\r\n      return '\\n\\n```\\n' + node.firstChild.textContent + '\\n```\\n\\n'\r\n    }\r\n  },\r\n\r\n  // Syntax-highlighted code blocks\r\n  {\r\n    filter: function (node) {\r\n      return node.nodeName === 'PRE' &&\r\n      node.parentNode.nodeName === 'DIV' &&\r\n      highlightRegEx.test(node.parentNode.className)\r\n    },\r\n    replacement: function (content, node) {\r\n      var language = node.parentNode.className.match(highlightRegEx)[1]\r\n      return '\\n\\n```' + language + '\\n' + node.textContent + '\\n```\\n\\n'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: function (node) {\r\n      return node.nodeName === 'DIV' &&\r\n      highlightRegEx.test(node.className)\r\n    },\r\n    replacement: function (content) {\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  }\r\n]\r\n\r\n},{}],3:[function(require,module,exports){\r\n/*\r\n * Set up window for Node.js\r\n */\r\n\r\nvar _window = (typeof window !== 'undefined' ? window : this)\r\n\r\n/*\r\n * Parsing HTML strings\r\n */\r\n\r\nfunction canParseHtmlNatively () {\r\n  var Parser = _window.DOMParser\r\n  var canParse = false\r\n\r\n  // Adapted from https://gist.github.com/1129031\r\n  // Firefox/Opera/IE throw errors on unsupported types\r\n  try {\r\n    // WebKit returns null on unsupported types\r\n    if (new Parser().parseFromString('', 'text/html')) {\r\n      canParse = true\r\n    }\r\n  } catch (e) {}\r\n\r\n  return canParse\r\n}\r\n\r\nfunction createHtmlParser () {\r\n  var Parser = function () {}\r\n\r\n  // For Node.js environments\r\n  if (typeof document === 'undefined') {\r\n    var jsdom = require('jsdom')\r\n    Parser.prototype.parseFromString = function (string) {\r\n      return jsdom.jsdom(string, {\r\n        features: {\r\n          FetchExternalResources: [],\r\n          ProcessExternalResources: false\r\n        }\r\n      })\r\n    }\r\n  } else {\r\n    if (!shouldUseActiveX()) {\r\n      Parser.prototype.parseFromString = function (string) {\r\n        var doc = document.implementation.createHTMLDocument('')\r\n        doc.open()\r\n        doc.write(string)\r\n        doc.close()\r\n        return doc\r\n      }\r\n    } else {\r\n      Parser.prototype.parseFromString = function (string) {\r\n        var doc = new window.ActiveXObject('htmlfile')\r\n        doc.designMode = 'on' // disable on-page scripts\r\n        doc.open()\r\n        doc.write(string)\r\n        doc.close()\r\n        return doc\r\n      }\r\n    }\r\n  }\r\n  return Parser\r\n}\r\n\r\nfunction shouldUseActiveX () {\r\n  var useActiveX = false\r\n\r\n  try {\r\n    document.implementation.createHTMLDocument('').open()\r\n  } catch (e) {\r\n    if (window.ActiveXObject) useActiveX = true\r\n  }\r\n\r\n  return useActiveX\r\n}\r\n\r\nmodule.exports = canParseHtmlNatively() ? _window.DOMParser : createHtmlParser()\r\n\r\n},{\"jsdom\":6}],4:[function(require,module,exports){\r\n'use strict'\r\n\r\nmodule.exports = [\r\n  {\r\n    filter: 'p',\r\n    replacement: function (content) {\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: 'br',\r\n    replacement: function () {\r\n      return '  \\n'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\r\n    replacement: function (content, node) {\r\n      var hLevel = node.nodeName.charAt(1)\r\n      var hPrefix = ''\r\n      for (var i = 0; i < hLevel; i++) {\r\n        hPrefix += '#'\r\n      }\r\n      return '\\n\\n' + hPrefix + ' ' + content + '\\n\\n'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: 'hr',\r\n    replacement: function () {\r\n      return '\\n\\n* * *\\n\\n'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: ['em', 'i'],\r\n    replacement: function (content) {\r\n      return '_' + content + '_'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: ['strong', 'b'],\r\n    replacement: function (content) {\r\n      return '**' + content + '**'\r\n    }\r\n  },\r\n\r\n  // Inline code\r\n  {\r\n    filter: function (node) {\r\n      var hasSiblings = node.previousSibling || node.nextSibling\r\n      var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings\r\n\r\n      return node.nodeName === 'CODE' && !isCodeBlock\r\n    },\r\n    replacement: function (content) {\r\n      return '`' + content + '`'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: function (node) {\r\n      return node.nodeName === 'A' && node.getAttribute('href')\r\n    },\r\n    replacement: function (content, node) {\r\n      var titlePart = node.title ? ' \"' + node.title + '\"' : ''\r\n      return '[' + content + '](' + node.getAttribute('href') + titlePart + ')'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: 'img',\r\n    replacement: function (content, node) {\r\n      var alt = node.alt || ''\r\n      var src = node.getAttribute('src') || ''\r\n      var title = node.title || ''\r\n      var titlePart = title ? ' \"' + title + '\"' : ''\r\n      return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\r\n    }\r\n  },\r\n\r\n  // Code blocks\r\n  {\r\n    filter: function (node) {\r\n      return node.nodeName === 'PRE' && node.firstChild.nodeName === 'CODE'\r\n    },\r\n    replacement: function (content, node) {\r\n      return '\\n\\n    ' + node.firstChild.textContent.replace(/\\n/g, '\\n    ') + '\\n\\n'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: 'blockquote',\r\n    replacement: function (content) {\r\n      content = content.trim()\r\n      content = content.replace(/\\n{3,}/g, '\\n\\n')\r\n      content = content.replace(/^/gm, '> ')\r\n      return '\\n\\n' + content + '\\n\\n'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: 'li',\r\n    replacement: function (content, node) {\r\n      content = content.replace(/^\\s+/, '').replace(/\\n/gm, '\\n    ')\r\n      var prefix = '*   '\r\n      var parent = node.parentNode\r\n      var index = Array.prototype.indexOf.call(parent.children, node) + 1\r\n\r\n      prefix = /ol/i.test(parent.nodeName) ? index + '.  ' : '*   '\r\n      return prefix + content\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: ['ul', 'ol'],\r\n    replacement: function (content, node) {\r\n      var strings = []\r\n      for (var i = 0; i < node.childNodes.length; i++) {\r\n        strings.push(node.childNodes[i]._replacement)\r\n      }\r\n\r\n      if (/li/i.test(node.parentNode.nodeName)) {\r\n        return '\\n' + strings.join('\\n')\r\n      }\r\n      return '\\n\\n' + strings.join('\\n') + '\\n\\n'\r\n    }\r\n  },\r\n\r\n  {\r\n    filter: function (node) {\r\n      return this.isBlock(node)\r\n    },\r\n    replacement: function (content, node) {\r\n      return '\\n\\n' + this.outer(node, content) + '\\n\\n'\r\n    }\r\n  },\r\n\r\n  // Anything else!\r\n  {\r\n    filter: function () {\r\n      return true\r\n    },\r\n    replacement: function (content, node) {\r\n      return this.outer(node, content)\r\n    }\r\n  }\r\n]\r\n\r\n},{}],5:[function(require,module,exports){\r\n/**\r\n * This file automatically generated from `build.js`.\r\n * Do not manually edit.\r\n */\r\n\r\nmodule.exports = [\r\n  \"address\",\r\n  \"article\",\r\n  \"aside\",\r\n  \"audio\",\r\n  \"blockquote\",\r\n  \"canvas\",\r\n  \"dd\",\r\n  \"div\",\r\n  \"dl\",\r\n  \"fieldset\",\r\n  \"figcaption\",\r\n  \"figure\",\r\n  \"footer\",\r\n  \"form\",\r\n  \"h1\",\r\n  \"h2\",\r\n  \"h3\",\r\n  \"h4\",\r\n  \"h5\",\r\n  \"h6\",\r\n  \"header\",\r\n  \"hgroup\",\r\n  \"hr\",\r\n  \"main\",\r\n  \"nav\",\r\n  \"noscript\",\r\n  \"ol\",\r\n  \"output\",\r\n  \"p\",\r\n  \"pre\",\r\n  \"section\",\r\n  \"table\",\r\n  \"tfoot\",\r\n  \"ul\",\r\n  \"video\"\r\n];\r\n\r\n},{}],6:[function(require,module,exports){\r\n\r\n},{}],7:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar voidElements = require('void-elements');\r\nObject.keys(voidElements).forEach(function (name) {\r\n  voidElements[name.toUpperCase()] = 1;\r\n});\r\n\r\nvar blockElements = {};\r\nrequire('block-elements').forEach(function (name) {\r\n  blockElements[name.toUpperCase()] = 1;\r\n});\r\n\r\n/**\r\n * isBlockElem(node) determines if the given node is a block element.\r\n *\r\n * @param {Node} node\r\n * @return {Boolean}\r\n */\r\nfunction isBlockElem(node) {\r\n  return !!(node && blockElements[node.nodeName]);\r\n}\r\n\r\n/**\r\n * isVoid(node) determines if the given node is a void element.\r\n *\r\n * @param {Node} node\r\n * @return {Boolean}\r\n */\r\nfunction isVoid(node) {\r\n  return !!(node && voidElements[node.nodeName]);\r\n}\r\n\r\n/**\r\n * whitespace(elem [, isBlock]) removes extraneous whitespace from an\r\n * the given element. The function isBlock may optionally be passed in\r\n * to determine whether or not an element is a block element; if none\r\n * is provided, defaults to using the list of block elements provided\r\n * by the `block-elements` module.\r\n *\r\n * @param {Node} elem\r\n * @param {Function} blockTest\r\n */\r\nfunction collapseWhitespace(elem, isBlock) {\r\n  if (!elem.firstChild || elem.nodeName === 'PRE') return;\r\n\r\n  if (typeof isBlock !== 'function') {\r\n    isBlock = isBlockElem;\r\n  }\r\n\r\n  var prevText = null;\r\n  var prevVoid = false;\r\n\r\n  var prev = null;\r\n  var node = next(prev, elem);\r\n\r\n  while (node !== elem) {\r\n    if (node.nodeType === 3) {\r\n      // Node.TEXT_NODE\r\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\r\n\r\n      if ((!prevText || / $/.test(prevText.data)) && !prevVoid && text[0] === ' ') {\r\n        text = text.substr(1);\r\n      }\r\n\r\n      // `text` might be empty at this point.\r\n      if (!text) {\r\n        node = remove(node);\r\n        continue;\r\n      }\r\n\r\n      node.data = text;\r\n      prevText = node;\r\n    } else if (node.nodeType === 1) {\r\n      // Node.ELEMENT_NODE\r\n      if (isBlock(node) || node.nodeName === 'BR') {\r\n        if (prevText) {\r\n          prevText.data = prevText.data.replace(/ $/, '');\r\n        }\r\n\r\n        prevText = null;\r\n        prevVoid = false;\r\n      } else if (isVoid(node)) {\r\n        // Avoid trimming space around non-block, non-BR void elements.\r\n        prevText = null;\r\n        prevVoid = true;\r\n      }\r\n    } else {\r\n      node = remove(node);\r\n      continue;\r\n    }\r\n\r\n    var nextNode = next(prev, node);\r\n    prev = node;\r\n    node = nextNode;\r\n  }\r\n\r\n  if (prevText) {\r\n    prevText.data = prevText.data.replace(/ $/, '');\r\n    if (!prevText.data) {\r\n      remove(prevText);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * remove(node) removes the given node from the DOM and returns the\r\n * next node in the sequence.\r\n *\r\n * @param {Node} node\r\n * @return {Node} node\r\n */\r\nfunction remove(node) {\r\n  var next = node.nextSibling || node.parentNode;\r\n\r\n  node.parentNode.removeChild(node);\r\n\r\n  return next;\r\n}\r\n\r\n/**\r\n * next(prev, current) returns the next node in the sequence, given the\r\n * current and previous nodes.\r\n *\r\n * @param {Node} prev\r\n * @param {Node} current\r\n * @return {Node}\r\n */\r\nfunction next(prev, current) {\r\n  if (prev && prev.parentNode === current || current.nodeName === 'PRE') {\r\n    return current.nextSibling || current.parentNode;\r\n  }\r\n\r\n  return current.firstChild || current.nextSibling || current.parentNode;\r\n}\r\n\r\nmodule.exports = collapseWhitespace;\r\n\r\n},{\"block-elements\":5,\"void-elements\":8}],8:[function(require,module,exports){\r\n/**\r\n * This file automatically generated from `pre-publish.js`.\r\n * Do not manually edit.\r\n */\r\n\r\nmodule.exports = {\r\n  \"area\": true,\r\n  \"base\": true,\r\n  \"br\": true,\r\n  \"col\": true,\r\n  \"embed\": true,\r\n  \"hr\": true,\r\n  \"img\": true,\r\n  \"input\": true,\r\n  \"keygen\": true,\r\n  \"link\": true,\r\n  \"menuitem\": true,\r\n  \"meta\": true,\r\n  \"param\": true,\r\n  \"source\": true,\r\n  \"track\": true,\r\n  \"wbr\": true\r\n};\r\n\r\n},{}]},{},[1])(1)\r\n});"},2537:function(e,n,t){t(1386)(t(2433))},2540:function(e,n,t){t(1386)(t(2436))},2544:function(e,n,t){t(1386)(t(2440))},2550:function(e,n,t){t(1386)(t(2447))}});